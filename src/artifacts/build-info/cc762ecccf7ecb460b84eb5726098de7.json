{
	"id": "cc762ecccf7ecb460b84eb5726098de7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/RiscZeroVerifierEmergencyStop.sol": {
				"content": "// Copyright 2024 RISC Zero, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// SPDX-License-Identifier: Apache-2.0\n\npragma solidity 0.8.20;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {Ownable2Step} from \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/utils/Pausable.sol\";\n\nimport {IRiscZeroVerifier, Receipt} from \"./interfaces/IRiscZeroVerifier.sol\";\n\n/// @notice Wrapper for an IRiscZeroVerifier contract, providing emergency stop function.\ncontract RiscZeroVerifierEmergencyStop is\n    IRiscZeroVerifier,\n    Ownable2Step,\n    Pausable\n{\n    IRiscZeroVerifier public immutable verifier;\n\n    /// @notice Error raised when calling estop with a receipt that cannot be verified as proof\n    /// of an exploit on the verifier contract.\n    error InvalidProofOfExploit();\n\n    constructor(\n        IRiscZeroVerifier _verifier,\n        address guardian\n    ) Ownable(guardian) {\n        verifier = _verifier;\n    }\n\n    /// @notice Initiate an emergency stop of the verifier contract.\n    ///         Can only be used by the guardian address assigned as owner of this contract.\n    ///\n    ///         When stopped, all calls to the verify and verifyIntegrity functions will revert.\n    ///         Once stopped, this contract can never be restarted.\n    function estop() external onlyOwner {\n        _pause();\n    }\n\n    /// @notice Initiate an emergency stop of the verifier contract, via the \"circuit breaker\".\n    ///         This method can be called by anyone who can produce a verifying proof for a receipt\n    ///         claim digest of all zeroes. The existence of such a proof demonstrates a critical\n    ///         vulnerability in the proof system.\n    ///\n    ///         When stopped, all calls to the verify and verifyIntegrity functions will revert.\n    ///         Once stopped, this contract can never be restarted.\n    function estop(Receipt calldata receipt) external {\n        if (receipt.claimDigest != bytes32(0)) {\n            revert InvalidProofOfExploit();\n        }\n        // Check that the proof of exploit receipt really does verify.\n        verifyIntegrity(receipt);\n        _pause();\n    }\n\n    /// @inheritdoc IRiscZeroVerifier\n    function verify(\n        bytes calldata seal,\n        bytes32 imageId,\n        bytes32 journalDigest\n    ) external view whenNotPaused {\n        // Forward the call on to the wrapped contract.\n        verifier.verify(seal, imageId, journalDigest);\n    }\n\n    /// @inheritdoc IRiscZeroVerifier\n    function verifyIntegrity(\n        Receipt calldata receipt\n    ) public view whenNotPaused {\n        // Forward the call on to the wrapped contract.\n        verifier.verifyIntegrity(receipt);\n    }\n}\n"
			},
			"src/interfaces/IRiscZeroVerifier.sol": {
				"content": "// Copyright 2024 RISC Zero, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// SPDX-License-Identifier: Apache-2.0\n\npragma solidity 0.8.20;\n\nimport {reverseByteOrderUint32} from \"../utils/Util.sol\";\n\n/// @notice A receipt attesting to the execution of a guest program.\n/// @dev A receipt contains two parts: a seal and a claim. The seal is a zero-knowledge proof\n/// attesting to knowledge of a zkVM execution resulting in the claim. The claim is a set of public\n/// outputs for the execution. Crucially, the claim includes the journal and the image ID. The\n/// image ID identifies the program that was executed, and the journal is the public data written\n/// by the program. Note that this struct only contains the claim digest, as can be obtained with\n/// the `digest()` function on `ReceiptClaimLib`.\nstruct Receipt {\n    bytes seal;\n    bytes32 claimDigest;\n}\n\n/// @notice Public claims about a zkVM guest execution, such as the journal committed to by the guest.\n/// @dev Also includes important information such as the exit code and the starting and ending system\n/// state (i.e. the state of memory). `ReceiptClaim` is a \"Merkle-ized struct\" supporting\n/// partial openings of the underlying fields from a hash commitment to the full structure.\nstruct ReceiptClaim {\n    /// @notice Digest of the SystemState just before execution has begun.\n    bytes32 preStateDigest;\n    /// @notice Digest of the SystemState just after execution has completed.\n    bytes32 postStateDigest;\n    /// @notice The exit code for the execution.\n    ExitCode exitCode;\n    /// @notice A digest of the input to the guest.\n    /// @dev This field is currently unused and must be set to the zero digest.\n    bytes32 input;\n    /// @notice Digest of the Output of the guest, including the journal\n    /// and assumptions set during execution.\n    bytes32 output;\n}\n\nlibrary ReceiptClaimLib {\n    using OutputLib for Output;\n    using SystemStateLib for SystemState;\n\n    bytes32 constant TAG_DIGEST = sha256(\"risc0.ReceiptClaim\");\n\n    // Define a constant to ensure hashing is done at compile time. Can't use the\n    // SystemStateLib.digest method here because the Solidity compiler complains.\n    bytes32 constant SYSTEM_STATE_ZERO_DIGEST =\n        0xa3acc27117418996340b84e5a90f3ef4c49d22c79e44aad822ec9c313e1eb8e2;\n\n    /// @notice Construct a ReceiptClaim from the given imageId and journalDigest.\n    ///         Returned ReceiptClaim will represent a successful execution of the zkVM, running\n    ///         the program committed by imageId and resulting in the journal specified by\n    ///         journalDigest.\n    /// @param imageId The identifier for the guest program.\n    /// @param journalDigest The SHA-256 digest of the journal bytes.\n    /// @dev Input hash and postStateDigest are set to all-zeros (i.e. no committed input, or\n    ///      final memory state), the exit code is (Halted, 0), and there are no assumptions\n    ///      (i.e. the receipt is unconditional).\n    function ok(\n        bytes32 imageId,\n        bytes32 journalDigest\n    ) internal pure returns (ReceiptClaim memory) {\n        return\n            ReceiptClaim(\n                imageId,\n                SYSTEM_STATE_ZERO_DIGEST,\n                ExitCode(SystemExitCode.Halted, 0),\n                bytes32(0),\n                Output(journalDigest, bytes32(0)).digest()\n            );\n    }\n\n    function digest(ReceiptClaim memory claim) internal pure returns (bytes32) {\n        return\n            sha256(\n                abi.encodePacked(\n                    TAG_DIGEST,\n                    // down\n                    claim.input,\n                    claim.preStateDigest,\n                    claim.postStateDigest,\n                    claim.output,\n                    // data\n                    uint32(claim.exitCode.system) << 24,\n                    uint32(claim.exitCode.user) << 24,\n                    // down.length\n                    uint16(4) << 8\n                )\n            );\n    }\n}\n\n/// @notice Commitment to the memory state and program counter (pc) of the zkVM.\n/// @dev The \"pre\" and \"post\" fields of the ReceiptClaim are digests of the system state at the\n///      start are stop of execution. Programs are loaded into the zkVM by creating a memory image\n///      of the loaded program, and creating a system state for initializing the zkVM. This is\n///      known as the \"image ID\".\nstruct SystemState {\n    /// @notice Program counter.\n    uint32 pc;\n    /// @notice Root hash of a merkle tree which confirms the integrity of the memory image.\n    bytes32 merkle_root;\n}\n\nlibrary SystemStateLib {\n    bytes32 constant TAG_DIGEST = sha256(\"risc0.SystemState\");\n\n    function digest(SystemState memory state) internal pure returns (bytes32) {\n        return\n            sha256(\n                abi.encodePacked(\n                    TAG_DIGEST,\n                    // down\n                    state.merkle_root,\n                    // data\n                    reverseByteOrderUint32(state.pc),\n                    // down.length\n                    uint16(1) << 8\n                )\n            );\n    }\n}\n\n/// @notice Exit condition indicated by the zkVM at the end of the guest execution.\n/// @dev Exit codes have a \"system\" part and a \"user\" part. Semantically, the system part is set to\n/// indicate the type of exit (e.g. halt, pause, or system split) and is directly controlled by the\n/// zkVM. The user part is an exit code, similar to exit codes used in Linux, chosen by the guest\n/// program to indicate additional information (e.g. 0 to indicate success or 1 to indicate an\n/// error).\nstruct ExitCode {\n    SystemExitCode system;\n    uint8 user;\n}\n\n/// @notice Exit condition indicated by the zkVM at the end of the execution covered by this proof.\n/// @dev\n/// `Halted` indicates normal termination of a program with an interior exit code returned from the\n/// guest program. A halted program cannot be resumed.\n///\n/// `Paused` indicates the execution ended in a paused state with an interior exit code set by the\n/// guest program. A paused program can be resumed such that execution picks up where it left\n/// of, with the same memory state.\n///\n/// `SystemSplit` indicates the execution ended on a host-initiated system split. System split is\n/// mechanism by which the host can temporarily stop execution of the execution ended in a system\n/// split has no output and no conclusions can be drawn about whether the program will eventually\n/// halt. System split is used in continuations to split execution into individually provable segments.\nenum SystemExitCode {\n    Halted,\n    Paused,\n    SystemSplit\n}\n\n/// @notice Output field in the `ReceiptClaim`, committing to a claimed journal and assumptions list.\nstruct Output {\n    /// @notice Digest of the journal committed to by the guest execution.\n    bytes32 journalDigest;\n    /// @notice Digest of the ordered list of `ReceiptClaim` digests corresponding to the\n    /// calls to `env::verify` and `env::verify_integrity`.\n    /// @dev Verifying the integrity of a `Receipt` corresponding to a `ReceiptClaim` with a\n    /// non-empty assumptions list does not guarantee unconditionally any of the claims over the\n    /// guest execution (i.e. if the assumptions list is non-empty, then the journal digest cannot\n    /// be trusted to correspond to a genuine execution). The claims can be checked by additional\n    /// verifying a `Receipt` for every digest in the assumptions list.\n    bytes32 assumptionsDigest;\n}\n\nlibrary OutputLib {\n    bytes32 constant TAG_DIGEST = sha256(\"risc0.Output\");\n\n    function digest(Output memory output) internal pure returns (bytes32) {\n        return\n            sha256(\n                abi.encodePacked(\n                    TAG_DIGEST,\n                    // down\n                    output.journalDigest,\n                    output.assumptionsDigest,\n                    // down.length\n                    uint16(2) << 8\n                )\n            );\n    }\n}\n\n/// @notice Error raised when cryptographic verification of the zero-knowledge proof fails.\nerror VerificationFailed();\n\n/// @notice Verifier interface for RISC Zero receipts of execution.\ninterface IRiscZeroVerifier {\n    /// @notice Verify that the given seal is a valid RISC Zero proof of execution with the\n    ///     given image ID and journal digest. Reverts on failure.\n    /// @dev This method additionally ensures that the input hash is all-zeros (i.e. no\n    /// committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the\n    /// receipt is unconditional).\n    /// @param seal The encoded cryptographic proof (i.e. SNARK).\n    /// @param imageId The identifier for the guest program.\n    /// @param journalDigest The SHA-256 digest of the journal bytes.\n    function verify(\n        bytes calldata seal,\n        bytes32 imageId,\n        bytes32 journalDigest\n    ) external view;\n\n    /// @notice Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is\n    /// valid a cryptographic proof of the execution with the given `claim`. Reverts on failure.\n    /// @param receipt The receipt to be verified.\n    function verifyIntegrity(Receipt calldata receipt) external view;\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"src/utils/Util.sol": {
				"content": "// Copyright 2024 RISC Zero, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// SPDX-License-Identifier: Apache-2.0\n\npragma solidity 0.8.20;\n\n/// @notice reverse the byte order of the uint256 value.\n/// @dev Solidity uses a big-endian ABI encoding. Reversing the byte order before encoding\n/// ensure that the encoded value will be little-endian.\n/// Written by k06a. https://ethereum.stackexchange.com/a/83627\nfunction reverseByteOrderUint256(uint256 input) pure returns (uint256 v) {\n    v = input;\n\n    // swap bytes\n    v = ((v & 0xFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00) >> 8)\n        | ((v & 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF) << 8);\n\n    // swap 2-byte long pairs\n    v = ((v & 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000) >> 16)\n        | ((v & 0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) << 16);\n\n    // swap 4-byte long pairs\n    v = ((v & 0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000) >> 32)\n        | ((v & 0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) << 32);\n\n    // swap 8-byte long pairs\n    v = ((v & 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF0000000000000000) >> 64)\n        | ((v & 0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) << 64);\n\n    // swap 16-byte long pairs\n    v = (v >> 128) | (v << 128);\n}\n\n/// @notice reverse the byte order of the uint32 value.\n/// @dev Solidity uses a big-endian ABI encoding. Reversing the byte order before encoding\n/// ensure that the encoded value will be little-endian.\n/// Written by k06a. https://ethereum.stackexchange.com/a/83627\nfunction reverseByteOrderUint32(uint32 input) pure returns (uint32 v) {\n    v = input;\n\n    // swap bytes\n    v = ((v & 0xFF00FF00) >> 8) | ((v & 0x00FF00FF) << 8);\n\n    // swap 2-byte long pairs\n    v = (v >> 16) | (v << 16);\n}\n\n/// @notice reverse the byte order of the uint16 value.\n/// @dev Solidity uses a big-endian ABI encoding. Reversing the byte order before encoding\n/// ensure that the encoded value will be little-endian.\n/// Written by k06a. https://ethereum.stackexchange.com/a/83627\nfunction reverseByteOrderUint16(uint16 input) pure returns (uint16 v) {\n    v = input;\n\n    // swap bytes\n    v = (v >> 8) | ((v & 0x00FF) << 8);\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"Ownable2Step": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 272,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/RiscZeroVerifierEmergencyStop.sol": {
				"RiscZeroVerifierEmergencyStop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IRiscZeroVerifier",
									"name": "_verifier",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "guardian",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidProofOfExploit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "seal",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "claimDigest",
											"type": "bytes32"
										}
									],
									"internalType": "struct Receipt",
									"name": "receipt",
									"type": "tuple"
								}
							],
							"name": "estop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "estop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verifier",
							"outputs": [
								{
									"internalType": "contract IRiscZeroVerifier",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "seal",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "imageId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "journalDigest",
									"type": "bytes32"
								}
							],
							"name": "verify",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "seal",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "claimDigest",
											"type": "bytes32"
										}
									],
									"internalType": "struct Receipt",
									"name": "receipt",
									"type": "tuple"
								}
							],
							"name": "verifyIntegrity",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							},
							"verify(bytes,bytes32,bytes32)": {
								"details": "This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).",
								"params": {
									"imageId": "The identifier for the guest program.",
									"journalDigest": "The SHA-256 digest of the journal bytes.",
									"seal": "The encoded cryptographic proof (i.e. SNARK)."
								}
							},
							"verifyIntegrity((bytes,bytes32))": {
								"params": {
									"receipt": "The receipt to be verified."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1046:3263  contract RiscZeroVerifierEmergencyStop is... */\n  mstore(0x40, 0xa0)\n    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1378:1514  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1467:1475  guardian */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1498:1507  _verifier */\n  dup2\n    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1487:1507  verifier = _verifier */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1378:1514  constructor(... */\n  pop\n  pop\n    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1046:3263  contract RiscZeroVerifierEmergencyStop is... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2100:2113  _pendingOwner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2093:2113  delete _pendingOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2148:2156  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2147  super._transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:689   */\ntag_23:\n    /* \"#utility.yul\":630:637   */\n  0x00\n    /* \"#utility.yul\":659:683   */\n  tag_37\n    /* \"#utility.yul\":677:682   */\n  dup3\n    /* \"#utility.yul\":659:683   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":648:683   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:689   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":695:867   */\ntag_24:\n    /* \"#utility.yul\":793:842   */\n  tag_39\n    /* \"#utility.yul\":836:841   */\n  dup2\n    /* \"#utility.yul\":793:842   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":786:791   */\n  dup2\n    /* \"#utility.yul\":783:843   */\n  eq\n    /* \"#utility.yul\":773:861   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":854:855   */\n  dup1\n    /* \"#utility.yul\":847:859   */\n  revert\n    /* \"#utility.yul\":773:861   */\ntag_40:\n    /* \"#utility.yul\":695:867   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":873:1066   */\ntag_25:\n    /* \"#utility.yul\":955:960   */\n  0x00\n    /* \"#utility.yul\":986:992   */\n  dup2\n    /* \"#utility.yul\":980:993   */\n  mload\n    /* \"#utility.yul\":971:993   */\n  swap1\n  pop\n    /* \"#utility.yul\":1002:1060   */\n  tag_42\n    /* \"#utility.yul\":1054:1059   */\n  dup2\n    /* \"#utility.yul\":1002:1060   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":873:1066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1072:1194   */\ntag_26:\n    /* \"#utility.yul\":1145:1169   */\n  tag_44\n    /* \"#utility.yul\":1163:1168   */\n  dup2\n    /* \"#utility.yul\":1145:1169   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1138:1143   */\n  dup2\n    /* \"#utility.yul\":1135:1170   */\n  eq\n    /* \"#utility.yul\":1125:1188   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1184:1185   */\n  0x00\n    /* \"#utility.yul\":1181:1182   */\n  dup1\n    /* \"#utility.yul\":1174:1186   */\n  revert\n    /* \"#utility.yul\":1125:1188   */\ntag_45:\n    /* \"#utility.yul\":1072:1194   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1200:1343   */\ntag_27:\n    /* \"#utility.yul\":1257:1262   */\n  0x00\n    /* \"#utility.yul\":1288:1294   */\n  dup2\n    /* \"#utility.yul\":1282:1295   */\n  mload\n    /* \"#utility.yul\":1273:1295   */\n  swap1\n  pop\n    /* \"#utility.yul\":1304:1337   */\n  tag_47\n    /* \"#utility.yul\":1331:1336   */\n  dup2\n    /* \"#utility.yul\":1304:1337   */\n  tag_26\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1200:1343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1349:1906   */\ntag_3:\n    /* \"#utility.yul\":1453:1459   */\n  0x00\n    /* \"#utility.yul\":1461:1467   */\n  dup1\n    /* \"#utility.yul\":1510:1512   */\n  0x40\n    /* \"#utility.yul\":1498:1507   */\n  dup4\n    /* \"#utility.yul\":1489:1496   */\n  dup6\n    /* \"#utility.yul\":1485:1508   */\n  sub\n    /* \"#utility.yul\":1481:1513   */\n  slt\n    /* \"#utility.yul\":1478:1597   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1516:1595   */\n  tag_50\n  tag_19\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1478:1597   */\ntag_49:\n    /* \"#utility.yul\":1636:1637   */\n  0x00\n    /* \"#utility.yul\":1661:1750   */\n  tag_51\n    /* \"#utility.yul\":1742:1749   */\n  dup6\n    /* \"#utility.yul\":1733:1739   */\n  dup3\n    /* \"#utility.yul\":1722:1731   */\n  dup7\n    /* \"#utility.yul\":1718:1740   */\n  add\n    /* \"#utility.yul\":1661:1750   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1651:1750   */\n  swap3\n  pop\n    /* \"#utility.yul\":1607:1760   */\n  pop\n    /* \"#utility.yul\":1799:1801   */\n  0x20\n    /* \"#utility.yul\":1825:1889   */\n  tag_52\n    /* \"#utility.yul\":1881:1888   */\n  dup6\n    /* \"#utility.yul\":1872:1878   */\n  dup3\n    /* \"#utility.yul\":1861:1870   */\n  dup7\n    /* \"#utility.yul\":1857:1879   */\n  add\n    /* \"#utility.yul\":1825:1889   */\n  tag_27\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1815:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1770:1899   */\n  pop\n    /* \"#utility.yul\":1349:1906   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1912:2030   */\ntag_28:\n    /* \"#utility.yul\":1999:2023   */\n  tag_54\n    /* \"#utility.yul\":2017:2022   */\n  dup2\n    /* \"#utility.yul\":1999:2023   */\n  tag_22\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1994:1997   */\n  dup3\n    /* \"#utility.yul\":1987:2024   */\n  mstore\n    /* \"#utility.yul\":1912:2030   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2036:2258   */\ntag_9:\n    /* \"#utility.yul\":2129:2133   */\n  0x00\n    /* \"#utility.yul\":2167:2169   */\n  0x20\n    /* \"#utility.yul\":2156:2165   */\n  dup3\n    /* \"#utility.yul\":2152:2170   */\n  add\n    /* \"#utility.yul\":2144:2170   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2251   */\n  tag_56\n    /* \"#utility.yul\":2248:2249   */\n  0x00\n    /* \"#utility.yul\":2237:2246   */\n  dup4\n    /* \"#utility.yul\":2233:2250   */\n  add\n    /* \"#utility.yul\":2224:2230   */\n  dup5\n    /* \"#utility.yul\":2180:2251   */\n  tag_28\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2036:2258   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/RiscZeroVerifierEmergencyStop.sol\":1046:3263  contract RiscZeroVerifierEmergencyStop is... */\ntag_13:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1046:3263  contract RiscZeroVerifierEmergencyStop is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x94142cc6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xab750e75\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe5caa16a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x1599ead5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b7ac3f3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":3064:3261  function verifyIntegrity(... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1148:1191  IRiscZeroVerifier public immutable verifier */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2440:2723  function estop(Receipt calldata receipt) external {... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2767:3020  function verify(... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n    tag_11:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1855:1916  function estop() external onlyOwner {... */\n    tag_12:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_13:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":3064:3261  function verifyIntegrity(... */\n    tag_18:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_52\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_53\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_52:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":3221:3229  verifier */\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":3221:3245  verifier.verifyIntegrity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1599ead5\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":3246:3253  receipt */\n      dup3\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":3221:3254  verifier.verifyIntegrity(receipt) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":3064:3261  function verifyIntegrity(... */\n      pop\n      jump\t// out\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1148:1191  IRiscZeroVerifier public immutable verifier */\n    tag_20:\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2296:2310  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2325  _msgSender() */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2323  _msgSender */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2325  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2296:2325  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2357:2363  sender */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2363  pendingOwner() != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2353  pendingOwner() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2351  pendingOwner */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2353  pendingOwner() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2363  pendingOwner() != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2335:2431  if (pendingOwner() != sender) {... */\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2413:2419  sender */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2386:2420  OwnableUnauthorizedAccount(sender) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2335:2431  if (pendingOwner() != sender) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2466  _transferOwnership(sender) */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2459:2465  sender */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2458  _transferOwnership */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2466  _transferOwnership(sender) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2286:2473  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2440:2723  function estop(Receipt calldata receipt) external {... */\n    tag_37:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2535:2536  0 */\n      0x00\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2527:2537  bytes32(0) */\n      dup1\n      shl\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2504:2511  receipt */\n      dup2\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2504:2523  receipt.claimDigest */\n      0x20\n      add\n      calldataload\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2504:2537  receipt.claimDigest != bytes32(0) */\n      eq\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2500:2594  if (receipt.claimDigest != bytes32(0)) {... */\n      tag_76\n      jumpi\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2560:2583  InvalidProofOfExploit() */\n      mload(0x40)\n      0x2004afd100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2500:2594  if (receipt.claimDigest != bytes32(0)) {... */\n    tag_76:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2674:2698  verifyIntegrity(receipt) */\n      tag_77\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2690:2697  receipt */\n      dup2\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2674:2689  verifyIntegrity */\n      tag_18\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2674:2698  verifyIntegrity(receipt) */\n      jump\t// in\n    tag_77:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2708:2716  _pause() */\n      tag_78\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2708:2714  _pause */\n      tag_79\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2708:2716  _pause() */\n      jump\t// in\n    tag_78:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2440:2723  function estop(Receipt calldata receipt) external {... */\n      pop\n      jump\t// out\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2767:3020  function verify(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_81\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_53\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_81:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2968:2976  verifier */\n      immutable(\"0x792fb9957b0c7c0af16304f5602126f9e16a84a7f6f8a55e0144210b32419511\")\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2968:2983  verifier.verify */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xab750e75\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2984:2988  seal */\n      dup6\n      dup6\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2990:2997  imageId */\n      dup6\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2999:3012  journalDigest */\n      dup6\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2968:3013  verifier.verify(seal, imageId, journalDigest) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":2767:3020  function verify(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1285:1292  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1311:1324  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1304:1324  return _pendingOwner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1855:1916  function estop() external onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1901:1909  _pause() */\n      tag_92\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1901:1907  _pause */\n      tag_79\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1901:1909  _pause() */\n      jump\t// in\n    tag_92:\n        /* \"src/RiscZeroVerifierEmergencyStop.sol\":1855:1916  function estop() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1754:1762  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1738:1751  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1738:1762  _pendingOwner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1811:1819  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1777:1820  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1809  owner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1807  owner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1809  owner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1777:1820  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n      tag_24\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2100:2113  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2093:2113  delete _pendingOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2148:2156  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2147  super._transferOwnership */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_53\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2408:2412  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2405  _paused */\n      dup1\n      0x14\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2444  _msgSender */\n      tag_69\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_117:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_118:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_119:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":479:709   */\n    tag_120:\n        /* \"#utility.yul\":551:556   */\n      0x00\n        /* \"#utility.yul\":592:594   */\n      0x40\n        /* \"#utility.yul\":583:589   */\n      dup3\n        /* \"#utility.yul\":578:581   */\n      dup5\n        /* \"#utility.yul\":574:590   */\n      sub\n        /* \"#utility.yul\":570:595   */\n      slt\n        /* \"#utility.yul\":567:679   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":598:677   */\n      tag_161\n      tag_119\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":567:679   */\n    tag_160:\n        /* \"#utility.yul\":697:703   */\n      dup2\n        /* \"#utility.yul\":688:703   */\n      swap1\n      pop\n        /* \"#utility.yul\":479:709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":715:1256   */\n    tag_17:\n        /* \"#utility.yul\":800:806   */\n      0x00\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":837:846   */\n      dup3\n        /* \"#utility.yul\":828:835   */\n      dup5\n        /* \"#utility.yul\":824:847   */\n      sub\n        /* \"#utility.yul\":820:852   */\n      slt\n        /* \"#utility.yul\":817:936   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":855:934   */\n      tag_164\n      tag_117\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":817:936   */\n    tag_163:\n        /* \"#utility.yul\":1003:1004   */\n      0x00\n        /* \"#utility.yul\":992:1001   */\n      dup3\n        /* \"#utility.yul\":988:1005   */\n      add\n        /* \"#utility.yul\":975:1006   */\n      calldataload\n        /* \"#utility.yul\":1033:1051   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1025:1031   */\n      dup2\n        /* \"#utility.yul\":1022:1052   */\n      gt\n        /* \"#utility.yul\":1019:1136   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1055:1134   */\n      tag_166\n      tag_118\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1019:1136   */\n    tag_165:\n        /* \"#utility.yul\":1160:1239   */\n      tag_167\n        /* \"#utility.yul\":1231:1238   */\n      dup5\n        /* \"#utility.yul\":1222:1228   */\n      dup3\n        /* \"#utility.yul\":1211:1220   */\n      dup6\n        /* \"#utility.yul\":1207:1229   */\n      add\n        /* \"#utility.yul\":1160:1239   */\n      tag_120\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1150:1239   */\n      swap2\n      pop\n        /* \"#utility.yul\":946:1249   */\n      pop\n        /* \"#utility.yul\":715:1256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1262:1388   */\n    tag_121:\n        /* \"#utility.yul\":1299:1306   */\n      0x00\n        /* \"#utility.yul\":1339:1381   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1332:1337   */\n      dup3\n        /* \"#utility.yul\":1328:1382   */\n      and\n        /* \"#utility.yul\":1317:1382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1262:1388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1394:1454   */\n    tag_122:\n        /* \"#utility.yul\":1422:1425   */\n      0x00\n        /* \"#utility.yul\":1443:1448   */\n      dup2\n        /* \"#utility.yul\":1436:1448   */\n      swap1\n      pop\n        /* \"#utility.yul\":1394:1454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1460:1602   */\n    tag_123:\n        /* \"#utility.yul\":1510:1519   */\n      0x00\n        /* \"#utility.yul\":1543:1596   */\n      tag_171\n        /* \"#utility.yul\":1561:1595   */\n      tag_172\n        /* \"#utility.yul\":1570:1594   */\n      tag_173\n        /* \"#utility.yul\":1588:1593   */\n      dup5\n        /* \"#utility.yul\":1570:1594   */\n      tag_121\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1561:1595   */\n      tag_122\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1543:1596   */\n      tag_121\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1530:1596   */\n      swap1\n      pop\n        /* \"#utility.yul\":1460:1602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1608:1734   */\n    tag_124:\n        /* \"#utility.yul\":1658:1667   */\n      0x00\n        /* \"#utility.yul\":1691:1728   */\n      tag_175\n        /* \"#utility.yul\":1722:1727   */\n      dup3\n        /* \"#utility.yul\":1691:1728   */\n      tag_123\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1678:1728   */\n      swap1\n      pop\n        /* \"#utility.yul\":1608:1734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1740:1891   */\n    tag_125:\n        /* \"#utility.yul\":1815:1824   */\n      0x00\n        /* \"#utility.yul\":1848:1885   */\n      tag_177\n        /* \"#utility.yul\":1879:1884   */\n      dup3\n        /* \"#utility.yul\":1848:1885   */\n      tag_124\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1835:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1740:1891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1897:2078   */\n    tag_126:\n        /* \"#utility.yul\":2009:2071   */\n      tag_179\n        /* \"#utility.yul\":2065:2070   */\n      dup2\n        /* \"#utility.yul\":2009:2071   */\n      tag_125\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2004:2007   */\n      dup3\n        /* \"#utility.yul\":1997:2072   */\n      mstore\n        /* \"#utility.yul\":1897:2078   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2084:2356   */\n    tag_22:\n        /* \"#utility.yul\":2202:2206   */\n      0x00\n        /* \"#utility.yul\":2240:2242   */\n      0x20\n        /* \"#utility.yul\":2229:2238   */\n      dup3\n        /* \"#utility.yul\":2225:2243   */\n      add\n        /* \"#utility.yul\":2217:2243   */\n      swap1\n      pop\n        /* \"#utility.yul\":2253:2349   */\n      tag_181\n        /* \"#utility.yul\":2346:2347   */\n      0x00\n        /* \"#utility.yul\":2335:2344   */\n      dup4\n        /* \"#utility.yul\":2331:2348   */\n      add\n        /* \"#utility.yul\":2322:2328   */\n      dup5\n        /* \"#utility.yul\":2253:2349   */\n      tag_126\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2084:2356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2362:2452   */\n    tag_127:\n        /* \"#utility.yul\":2396:2403   */\n      0x00\n        /* \"#utility.yul\":2439:2444   */\n      dup2\n        /* \"#utility.yul\":2432:2445   */\n      iszero\n        /* \"#utility.yul\":2425:2446   */\n      iszero\n        /* \"#utility.yul\":2414:2446   */\n      swap1\n      pop\n        /* \"#utility.yul\":2362:2452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2458:2567   */\n    tag_128:\n        /* \"#utility.yul\":2539:2560   */\n      tag_184\n        /* \"#utility.yul\":2554:2559   */\n      dup2\n        /* \"#utility.yul\":2539:2560   */\n      tag_127\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2534:2537   */\n      dup3\n        /* \"#utility.yul\":2527:2561   */\n      mstore\n        /* \"#utility.yul\":2458:2567   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2573:2783   */\n    tag_26:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2776   */\n      tag_186\n        /* \"#utility.yul\":2773:2774   */\n      0x00\n        /* \"#utility.yul\":2762:2771   */\n      dup4\n        /* \"#utility.yul\":2758:2775   */\n      add\n        /* \"#utility.yul\":2749:2755   */\n      dup5\n        /* \"#utility.yul\":2711:2776   */\n      tag_128\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2573:2783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2789:2885   */\n    tag_129:\n        /* \"#utility.yul\":2826:2833   */\n      0x00\n        /* \"#utility.yul\":2855:2879   */\n      tag_188\n        /* \"#utility.yul\":2873:2878   */\n      dup3\n        /* \"#utility.yul\":2855:2879   */\n      tag_121\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2844:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3009   */\n    tag_130:\n        /* \"#utility.yul\":2978:3002   */\n      tag_190\n        /* \"#utility.yul\":2996:3001   */\n      dup2\n        /* \"#utility.yul\":2978:3002   */\n      tag_129\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2973:2976   */\n      dup3\n        /* \"#utility.yul\":2966:3003   */\n      mstore\n        /* \"#utility.yul\":2891:3009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3015:3237   */\n    tag_34:\n        /* \"#utility.yul\":3108:3112   */\n      0x00\n        /* \"#utility.yul\":3146:3148   */\n      0x20\n        /* \"#utility.yul\":3135:3144   */\n      dup3\n        /* \"#utility.yul\":3131:3149   */\n      add\n        /* \"#utility.yul\":3123:3149   */\n      swap1\n      pop\n        /* \"#utility.yul\":3159:3230   */\n      tag_192\n        /* \"#utility.yul\":3227:3228   */\n      0x00\n        /* \"#utility.yul\":3216:3225   */\n      dup4\n        /* \"#utility.yul\":3212:3229   */\n      add\n        /* \"#utility.yul\":3203:3209   */\n      dup5\n        /* \"#utility.yul\":3159:3230   */\n      tag_130\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3015:3237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3243:3360   */\n    tag_131:\n        /* \"#utility.yul\":3352:3353   */\n      0x00\n        /* \"#utility.yul\":3349:3350   */\n      dup1\n        /* \"#utility.yul\":3342:3354   */\n      revert\n        /* \"#utility.yul\":3366:3483   */\n    tag_132:\n        /* \"#utility.yul\":3475:3476   */\n      0x00\n        /* \"#utility.yul\":3472:3473   */\n      dup1\n        /* \"#utility.yul\":3465:3477   */\n      revert\n        /* \"#utility.yul\":3489:3606   */\n    tag_133:\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      dup1\n        /* \"#utility.yul\":3588:3600   */\n      revert\n        /* \"#utility.yul\":3625:4177   */\n    tag_134:\n        /* \"#utility.yul\":3682:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3742:3745   */\n      dup4\n        /* \"#utility.yul\":3735:3739   */\n      0x1f\n        /* \"#utility.yul\":3727:3733   */\n      dup5\n        /* \"#utility.yul\":3723:3740   */\n      add\n        /* \"#utility.yul\":3719:3746   */\n      slt\n        /* \"#utility.yul\":3709:3831   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":3750:3829   */\n      tag_198\n      tag_131\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3709:3831   */\n    tag_197:\n        /* \"#utility.yul\":3863:3869   */\n      dup3\n        /* \"#utility.yul\":3850:3870   */\n      calldataload\n        /* \"#utility.yul\":3840:3870   */\n      swap1\n      pop\n        /* \"#utility.yul\":3893:3911   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3885:3891   */\n      dup2\n        /* \"#utility.yul\":3882:3912   */\n      gt\n        /* \"#utility.yul\":3879:3996   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3915:3994   */\n      tag_200\n      tag_132\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3879:3996   */\n    tag_199:\n        /* \"#utility.yul\":4029:4033   */\n      0x20\n        /* \"#utility.yul\":4021:4027   */\n      dup4\n        /* \"#utility.yul\":4017:4034   */\n      add\n        /* \"#utility.yul\":4005:4034   */\n      swap2\n      pop\n        /* \"#utility.yul\":4083:4086   */\n      dup4\n        /* \"#utility.yul\":4075:4079   */\n      0x01\n        /* \"#utility.yul\":4067:4073   */\n      dup3\n        /* \"#utility.yul\":4063:4080   */\n      mul\n        /* \"#utility.yul\":4053:4061   */\n      dup4\n        /* \"#utility.yul\":4049:4081   */\n      add\n        /* \"#utility.yul\":4046:4087   */\n      gt\n        /* \"#utility.yul\":4043:4171   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":4090:4169   */\n      tag_202\n      tag_133\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4043:4171   */\n    tag_201:\n        /* \"#utility.yul\":3625:4177   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4183:4260   */\n    tag_135:\n        /* \"#utility.yul\":4220:4227   */\n      0x00\n        /* \"#utility.yul\":4249:4254   */\n      dup2\n        /* \"#utility.yul\":4238:4254   */\n      swap1\n      pop\n        /* \"#utility.yul\":4183:4260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4266:4388   */\n    tag_136:\n        /* \"#utility.yul\":4339:4363   */\n      tag_205\n        /* \"#utility.yul\":4357:4362   */\n      dup2\n        /* \"#utility.yul\":4339:4363   */\n      tag_135\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4332:4337   */\n      dup2\n        /* \"#utility.yul\":4329:4364   */\n      eq\n        /* \"#utility.yul\":4319:4382   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4378:4379   */\n      0x00\n        /* \"#utility.yul\":4375:4376   */\n      dup1\n        /* \"#utility.yul\":4368:4380   */\n      revert\n        /* \"#utility.yul\":4319:4382   */\n    tag_206:\n        /* \"#utility.yul\":4266:4388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4394:4533   */\n    tag_137:\n        /* \"#utility.yul\":4440:4445   */\n      0x00\n        /* \"#utility.yul\":4478:4484   */\n      dup2\n        /* \"#utility.yul\":4465:4485   */\n      calldataload\n        /* \"#utility.yul\":4456:4485   */\n      swap1\n      pop\n        /* \"#utility.yul\":4494:4527   */\n      tag_208\n        /* \"#utility.yul\":4521:4526   */\n      dup2\n        /* \"#utility.yul\":4494:4527   */\n      tag_136\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4394:4533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4539:5356   */\n    tag_40:\n        /* \"#utility.yul\":4627:4633   */\n      0x00\n        /* \"#utility.yul\":4635:4641   */\n      dup1\n        /* \"#utility.yul\":4643:4649   */\n      0x00\n        /* \"#utility.yul\":4651:4657   */\n      dup1\n        /* \"#utility.yul\":4700:4702   */\n      0x60\n        /* \"#utility.yul\":4688:4697   */\n      dup6\n        /* \"#utility.yul\":4679:4686   */\n      dup8\n        /* \"#utility.yul\":4675:4698   */\n      sub\n        /* \"#utility.yul\":4671:4703   */\n      slt\n        /* \"#utility.yul\":4668:4787   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4706:4785   */\n      tag_211\n      tag_117\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4668:4787   */\n    tag_210:\n        /* \"#utility.yul\":4854:4855   */\n      0x00\n        /* \"#utility.yul\":4843:4852   */\n      dup6\n        /* \"#utility.yul\":4839:4856   */\n      add\n        /* \"#utility.yul\":4826:4857   */\n      calldataload\n        /* \"#utility.yul\":4884:4902   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4876:4882   */\n      dup2\n        /* \"#utility.yul\":4873:4903   */\n      gt\n        /* \"#utility.yul\":4870:4987   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4906:4985   */\n      tag_213\n      tag_118\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4870:4987   */\n    tag_212:\n        /* \"#utility.yul\":5019:5083   */\n      tag_214\n        /* \"#utility.yul\":5075:5082   */\n      dup8\n        /* \"#utility.yul\":5066:5072   */\n      dup3\n        /* \"#utility.yul\":5055:5064   */\n      dup9\n        /* \"#utility.yul\":5051:5073   */\n      add\n        /* \"#utility.yul\":5019:5083   */\n      tag_134\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5001:5083   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":4797:5093   */\n      pop\n        /* \"#utility.yul\":5132:5134   */\n      0x20\n        /* \"#utility.yul\":5158:5211   */\n      tag_215\n        /* \"#utility.yul\":5203:5210   */\n      dup8\n        /* \"#utility.yul\":5194:5200   */\n      dup3\n        /* \"#utility.yul\":5183:5192   */\n      dup9\n        /* \"#utility.yul\":5179:5201   */\n      add\n        /* \"#utility.yul\":5158:5211   */\n      tag_137\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5148:5211   */\n      swap3\n      pop\n        /* \"#utility.yul\":5103:5221   */\n      pop\n        /* \"#utility.yul\":5260:5262   */\n      0x40\n        /* \"#utility.yul\":5286:5339   */\n      tag_216\n        /* \"#utility.yul\":5331:5338   */\n      dup8\n        /* \"#utility.yul\":5322:5328   */\n      dup3\n        /* \"#utility.yul\":5311:5320   */\n      dup9\n        /* \"#utility.yul\":5307:5329   */\n      add\n        /* \"#utility.yul\":5286:5339   */\n      tag_137\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5276:5339   */\n      swap2\n      pop\n        /* \"#utility.yul\":5231:5349   */\n      pop\n        /* \"#utility.yul\":4539:5356   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5362:5484   */\n    tag_138:\n        /* \"#utility.yul\":5435:5459   */\n      tag_218\n        /* \"#utility.yul\":5453:5458   */\n      dup2\n        /* \"#utility.yul\":5435:5459   */\n      tag_129\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5428:5433   */\n      dup2\n        /* \"#utility.yul\":5425:5460   */\n      eq\n        /* \"#utility.yul\":5415:5478   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5474:5475   */\n      0x00\n        /* \"#utility.yul\":5471:5472   */\n      dup1\n        /* \"#utility.yul\":5464:5476   */\n      revert\n        /* \"#utility.yul\":5415:5478   */\n    tag_219:\n        /* \"#utility.yul\":5362:5484   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5490:5629   */\n    tag_139:\n        /* \"#utility.yul\":5536:5541   */\n      0x00\n        /* \"#utility.yul\":5574:5580   */\n      dup2\n        /* \"#utility.yul\":5561:5581   */\n      calldataload\n        /* \"#utility.yul\":5552:5581   */\n      swap1\n      pop\n        /* \"#utility.yul\":5590:5623   */\n      tag_221\n        /* \"#utility.yul\":5617:5622   */\n      dup2\n        /* \"#utility.yul\":5590:5623   */\n      tag_138\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5490:5629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5635:5964   */\n    tag_49:\n        /* \"#utility.yul\":5694:5700   */\n      0x00\n        /* \"#utility.yul\":5743:5745   */\n      0x20\n        /* \"#utility.yul\":5731:5740   */\n      dup3\n        /* \"#utility.yul\":5722:5729   */\n      dup5\n        /* \"#utility.yul\":5718:5741   */\n      sub\n        /* \"#utility.yul\":5714:5746   */\n      slt\n        /* \"#utility.yul\":5711:5830   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5749:5828   */\n      tag_224\n      tag_117\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5711:5830   */\n    tag_223:\n        /* \"#utility.yul\":5869:5870   */\n      0x00\n        /* \"#utility.yul\":5894:5947   */\n      tag_225\n        /* \"#utility.yul\":5939:5946   */\n      dup5\n        /* \"#utility.yul\":5930:5936   */\n      dup3\n        /* \"#utility.yul\":5919:5928   */\n      dup6\n        /* \"#utility.yul\":5915:5937   */\n      add\n        /* \"#utility.yul\":5894:5947   */\n      tag_139\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5884:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5840:5957   */\n      pop\n        /* \"#utility.yul\":5635:5964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6087   */\n    tag_140:\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6076:6077   */\n      dup1\n        /* \"#utility.yul\":6069:6081   */\n      revert\n        /* \"#utility.yul\":6093:6210   */\n    tag_141:\n        /* \"#utility.yul\":6202:6203   */\n      0x00\n        /* \"#utility.yul\":6199:6200   */\n      dup1\n        /* \"#utility.yul\":6192:6204   */\n      revert\n        /* \"#utility.yul\":6216:6333   */\n    tag_142:\n        /* \"#utility.yul\":6325:6326   */\n      0x00\n        /* \"#utility.yul\":6322:6323   */\n      dup1\n        /* \"#utility.yul\":6315:6327   */\n      revert\n        /* \"#utility.yul\":6339:7050   */\n    tag_143:\n        /* \"#utility.yul\":6403:6408   */\n      0x00\n        /* \"#utility.yul\":6410:6416   */\n      dup1\n        /* \"#utility.yul\":6466:6469   */\n      dup4\n        /* \"#utility.yul\":6453:6470   */\n      calldataload\n        /* \"#utility.yul\":6558:6559   */\n      0x01\n        /* \"#utility.yul\":6552:6556   */\n      0x20\n        /* \"#utility.yul\":6548:6560   */\n      sub\n        /* \"#utility.yul\":6537:6545   */\n      dup5\n        /* \"#utility.yul\":6521:6535   */\n      calldatasize\n        /* \"#utility.yul\":6517:6546   */\n      sub\n        /* \"#utility.yul\":6513:6561   */\n      sub\n        /* \"#utility.yul\":6493:6511   */\n      dup2\n        /* \"#utility.yul\":6489:6562   */\n      slt\n        /* \"#utility.yul\":6479:6647   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6566:6645   */\n      tag_231\n      tag_142\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6479:6647   */\n    tag_230:\n        /* \"#utility.yul\":6689:6697   */\n      dup4\n        /* \"#utility.yul\":6669:6687   */\n      dup2\n        /* \"#utility.yul\":6665:6698   */\n      add\n        /* \"#utility.yul\":6656:6698   */\n      swap3\n      pop\n        /* \"#utility.yul\":6731:6736   */\n      dup3\n        /* \"#utility.yul\":6718:6737   */\n      calldataload\n        /* \"#utility.yul\":6708:6737   */\n      swap2\n      pop\n        /* \"#utility.yul\":6766:6770   */\n      0x20\n        /* \"#utility.yul\":6759:6764   */\n      dup4\n        /* \"#utility.yul\":6755:6771   */\n      add\n        /* \"#utility.yul\":6746:6771   */\n      swap3\n      pop\n        /* \"#utility.yul\":6794:6812   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6786:6792   */\n      dup3\n        /* \"#utility.yul\":6783:6813   */\n      gt\n        /* \"#utility.yul\":6780:6897   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6816:6895   */\n      tag_233\n      tag_140\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6780:6897   */\n    tag_232:\n        /* \"#utility.yul\":6952:6956   */\n      0x01\n        /* \"#utility.yul\":6944:6950   */\n      dup3\n        /* \"#utility.yul\":6940:6957   */\n      mul\n        /* \"#utility.yul\":6924:6938   */\n      calldatasize\n        /* \"#utility.yul\":6920:6958   */\n      sub\n        /* \"#utility.yul\":6913:6918   */\n      dup4\n        /* \"#utility.yul\":6909:6959   */\n      sgt\n        /* \"#utility.yul\":6906:7043   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":6962:7041   */\n      tag_235\n      tag_141\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6906:7043   */\n    tag_234:\n        /* \"#utility.yul\":6417:7050   */\n      pop\n        /* \"#utility.yul\":6339:7050   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7056:7214   */\n    tag_144:\n        /* \"#utility.yul\":7129:7140   */\n      0x00\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7158:7161   */\n      dup3\n        /* \"#utility.yul\":7151:7170   */\n      mstore\n        /* \"#utility.yul\":7203:7207   */\n      0x20\n        /* \"#utility.yul\":7198:7201   */\n      dup3\n        /* \"#utility.yul\":7194:7208   */\n      add\n        /* \"#utility.yul\":7179:7208   */\n      swap1\n      pop\n        /* \"#utility.yul\":7056:7214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7220:7366   */\n    tag_145:\n        /* \"#utility.yul\":7317:7323   */\n      dup3\n        /* \"#utility.yul\":7312:7315   */\n      dup2\n        /* \"#utility.yul\":7307:7310   */\n      dup4\n        /* \"#utility.yul\":7294:7324   */\n      calldatacopy\n        /* \"#utility.yul\":7358:7359   */\n      0x00\n        /* \"#utility.yul\":7349:7355   */\n      dup4\n        /* \"#utility.yul\":7344:7347   */\n      dup4\n        /* \"#utility.yul\":7340:7356   */\n      add\n        /* \"#utility.yul\":7333:7360   */\n      mstore\n        /* \"#utility.yul\":7220:7366   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7372:7474   */\n    tag_146:\n        /* \"#utility.yul\":7413:7419   */\n      0x00\n        /* \"#utility.yul\":7464:7466   */\n      0x1f\n        /* \"#utility.yul\":7460:7467   */\n      not\n        /* \"#utility.yul\":7455:7457   */\n      0x1f\n        /* \"#utility.yul\":7448:7453   */\n      dup4\n        /* \"#utility.yul\":7444:7458   */\n      add\n        /* \"#utility.yul\":7440:7468   */\n      and\n        /* \"#utility.yul\":7430:7468   */\n      swap1\n      pop\n        /* \"#utility.yul\":7372:7474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7502:7796   */\n    tag_147:\n        /* \"#utility.yul\":7588:7591   */\n      0x00\n        /* \"#utility.yul\":7609:7669   */\n      tag_240\n        /* \"#utility.yul\":7662:7668   */\n      dup4\n        /* \"#utility.yul\":7657:7660   */\n      dup6\n        /* \"#utility.yul\":7609:7669   */\n      tag_144\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7602:7669   */\n      swap4\n      pop\n        /* \"#utility.yul\":7679:7735   */\n      tag_241\n        /* \"#utility.yul\":7728:7734   */\n      dup4\n        /* \"#utility.yul\":7723:7726   */\n      dup6\n        /* \"#utility.yul\":7716:7721   */\n      dup5\n        /* \"#utility.yul\":7679:7735   */\n      tag_145\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7760:7789   */\n      tag_242\n        /* \"#utility.yul\":7782:7788   */\n      dup4\n        /* \"#utility.yul\":7760:7789   */\n      tag_146\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7755:7758   */\n      dup5\n        /* \"#utility.yul\":7751:7790   */\n      add\n        /* \"#utility.yul\":7744:7790   */\n      swap1\n      pop\n        /* \"#utility.yul\":7502:7796   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7802:7924   */\n    tag_148:\n        /* \"#utility.yul\":7854:7859   */\n      0x00\n        /* \"#utility.yul\":7879:7918   */\n      tag_244\n        /* \"#utility.yul\":7914:7916   */\n      0x20\n        /* \"#utility.yul\":7909:7912   */\n      dup5\n        /* \"#utility.yul\":7905:7917   */\n      add\n        /* \"#utility.yul\":7900:7903   */\n      dup5\n        /* \"#utility.yul\":7879:7918   */\n      tag_137\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7870:7918   */\n      swap1\n      pop\n        /* \"#utility.yul\":7802:7924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7930:8038   */\n    tag_149:\n        /* \"#utility.yul\":8007:8031   */\n      tag_246\n        /* \"#utility.yul\":8025:8030   */\n      dup2\n        /* \"#utility.yul\":8007:8031   */\n      tag_135\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8002:8005   */\n      dup3\n        /* \"#utility.yul\":7995:8032   */\n      mstore\n        /* \"#utility.yul\":7930:8038   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8084:8790   */\n    tag_150:\n        /* \"#utility.yul\":8203:8206   */\n      0x00\n        /* \"#utility.yul\":8239:8243   */\n      0x40\n        /* \"#utility.yul\":8234:8237   */\n      dup4\n        /* \"#utility.yul\":8230:8244   */\n      add\n        /* \"#utility.yul\":8323:8384   */\n      tag_248\n        /* \"#utility.yul\":8378:8382   */\n      0x00\n        /* \"#utility.yul\":8371:8376   */\n      dup5\n        /* \"#utility.yul\":8367:8383   */\n      add\n        /* \"#utility.yul\":8360:8365   */\n      dup5\n        /* \"#utility.yul\":8323:8384   */\n      tag_143\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8431:8434   */\n      dup6\n        /* \"#utility.yul\":8425:8429   */\n      dup4\n        /* \"#utility.yul\":8421:8435   */\n      sub\n        /* \"#utility.yul\":8414:8418   */\n      0x00\n        /* \"#utility.yul\":8409:8412   */\n      dup8\n        /* \"#utility.yul\":8405:8419   */\n      add\n        /* \"#utility.yul\":8398:8436   */\n      mstore\n        /* \"#utility.yul\":8457:8544   */\n      tag_249\n        /* \"#utility.yul\":8539:8543   */\n      dup4\n        /* \"#utility.yul\":8525:8537   */\n      dup3\n        /* \"#utility.yul\":8511:8523   */\n      dup5\n        /* \"#utility.yul\":8457:8544   */\n      tag_147\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8449:8544   */\n      swap3\n      pop\n        /* \"#utility.yul\":8254:8555   */\n      pop\n      pop\n        /* \"#utility.yul\":8627:8677   */\n      tag_250\n        /* \"#utility.yul\":8671:8675   */\n      0x20\n        /* \"#utility.yul\":8664:8669   */\n      dup5\n        /* \"#utility.yul\":8660:8676   */\n      add\n        /* \"#utility.yul\":8653:8658   */\n      dup5\n        /* \"#utility.yul\":8627:8677   */\n      tag_148\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8690:8753   */\n      tag_251\n        /* \"#utility.yul\":8747:8751   */\n      0x20\n        /* \"#utility.yul\":8742:8745   */\n      dup7\n        /* \"#utility.yul\":8738:8752   */\n      add\n        /* \"#utility.yul\":8724:8736   */\n      dup3\n        /* \"#utility.yul\":8690:8753   */\n      tag_149\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8565:8763   */\n      pop\n        /* \"#utility.yul\":8780:8784   */\n      dup1\n        /* \"#utility.yul\":8773:8784   */\n      swap2\n      pop\n        /* \"#utility.yul\":8208:8790   */\n      pop\n        /* \"#utility.yul\":8084:8790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8796:9169   */\n    tag_56:\n        /* \"#utility.yul\":8939:8943   */\n      0x00\n        /* \"#utility.yul\":8977:8979   */\n      0x20\n        /* \"#utility.yul\":8966:8975   */\n      dup3\n        /* \"#utility.yul\":8962:8980   */\n      add\n        /* \"#utility.yul\":8954:8980   */\n      swap1\n      pop\n        /* \"#utility.yul\":9026:9035   */\n      dup2\n        /* \"#utility.yul\":9020:9024   */\n      dup2\n        /* \"#utility.yul\":9016:9036   */\n      sub\n        /* \"#utility.yul\":9012:9013   */\n      0x00\n        /* \"#utility.yul\":9001:9010   */\n      dup4\n        /* \"#utility.yul\":8997:9014   */\n      add\n        /* \"#utility.yul\":8990:9037   */\n      mstore\n        /* \"#utility.yul\":9054:9162   */\n      tag_253\n        /* \"#utility.yul\":9157:9161   */\n      dup2\n        /* \"#utility.yul\":9148:9154   */\n      dup5\n        /* \"#utility.yul\":9054:9162   */\n      tag_150\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9046:9162   */\n      swap1\n      pop\n        /* \"#utility.yul\":8796:9169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9175:9343   */\n    tag_151:\n        /* \"#utility.yul\":9258:9269   */\n      0x00\n        /* \"#utility.yul\":9292:9298   */\n      dup3\n        /* \"#utility.yul\":9287:9290   */\n      dup3\n        /* \"#utility.yul\":9280:9299   */\n      mstore\n        /* \"#utility.yul\":9332:9336   */\n      0x20\n        /* \"#utility.yul\":9327:9330   */\n      dup3\n        /* \"#utility.yul\":9323:9337   */\n      add\n        /* \"#utility.yul\":9308:9337   */\n      swap1\n      pop\n        /* \"#utility.yul\":9175:9343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9371:9685   */\n    tag_152:\n        /* \"#utility.yul\":9467:9470   */\n      0x00\n        /* \"#utility.yul\":9488:9558   */\n      tag_256\n        /* \"#utility.yul\":9551:9557   */\n      dup4\n        /* \"#utility.yul\":9546:9549   */\n      dup6\n        /* \"#utility.yul\":9488:9558   */\n      tag_151\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9481:9558   */\n      swap4\n      pop\n        /* \"#utility.yul\":9568:9624   */\n      tag_257\n        /* \"#utility.yul\":9617:9623   */\n      dup4\n        /* \"#utility.yul\":9612:9615   */\n      dup6\n        /* \"#utility.yul\":9605:9610   */\n      dup5\n        /* \"#utility.yul\":9568:9624   */\n      tag_145\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9649:9678   */\n      tag_258\n        /* \"#utility.yul\":9671:9677   */\n      dup4\n        /* \"#utility.yul\":9649:9678   */\n      tag_146\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":9644:9647   */\n      dup5\n        /* \"#utility.yul\":9640:9679   */\n      add\n        /* \"#utility.yul\":9633:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9371:9685   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9691:9809   */\n    tag_153:\n        /* \"#utility.yul\":9778:9802   */\n      tag_260\n        /* \"#utility.yul\":9796:9801   */\n      dup2\n        /* \"#utility.yul\":9778:9802   */\n      tag_135\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9773:9776   */\n      dup3\n        /* \"#utility.yul\":9766:9803   */\n      mstore\n        /* \"#utility.yul\":9691:9809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9815:10364   */\n    tag_84:\n        /* \"#utility.yul\":9992:9996   */\n      0x00\n        /* \"#utility.yul\":10030:10032   */\n      0x60\n        /* \"#utility.yul\":10019:10028   */\n      dup3\n        /* \"#utility.yul\":10015:10033   */\n      add\n        /* \"#utility.yul\":10007:10033   */\n      swap1\n      pop\n        /* \"#utility.yul\":10079:10088   */\n      dup2\n        /* \"#utility.yul\":10073:10077   */\n      dup2\n        /* \"#utility.yul\":10069:10089   */\n      sub\n        /* \"#utility.yul\":10065:10066   */\n      0x00\n        /* \"#utility.yul\":10054:10063   */\n      dup4\n        /* \"#utility.yul\":10050:10067   */\n      add\n        /* \"#utility.yul\":10043:10090   */\n      mstore\n        /* \"#utility.yul\":10107:10193   */\n      tag_262\n        /* \"#utility.yul\":10188:10192   */\n      dup2\n        /* \"#utility.yul\":10179:10185   */\n      dup7\n        /* \"#utility.yul\":10171:10177   */\n      dup9\n        /* \"#utility.yul\":10107:10193   */\n      tag_152\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10099:10193   */\n      swap1\n      pop\n        /* \"#utility.yul\":10203:10275   */\n      tag_263\n        /* \"#utility.yul\":10271:10273   */\n      0x20\n        /* \"#utility.yul\":10260:10269   */\n      dup4\n        /* \"#utility.yul\":10256:10274   */\n      add\n        /* \"#utility.yul\":10247:10253   */\n      dup6\n        /* \"#utility.yul\":10203:10275   */\n      tag_153\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10285:10357   */\n      tag_264\n        /* \"#utility.yul\":10353:10355   */\n      0x40\n        /* \"#utility.yul\":10342:10351   */\n      dup4\n        /* \"#utility.yul\":10338:10356   */\n      add\n        /* \"#utility.yul\":10329:10335   */\n      dup5\n        /* \"#utility.yul\":10285:10357   */\n      tag_153\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9815:10364   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203883abb261ab572ed8b0deb1a8b64c27c27f6af13439c76e475f8fb327d839d064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 304,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_208": {
									"entryPoint": 248,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IRiscZeroVerifier_$728_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IRiscZeroVerifier_$728t_address_fromMemory": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IRiscZeroVerifier_$728": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IRiscZeroVerifier_$728": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2261:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "677:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "659:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IRiscZeroVerifier_$728",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:7",
														"type": ""
													}
												],
												"src": "568:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:104:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "845:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "847:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "847:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "786:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "836:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IRiscZeroVerifier_$728",
																					"nodeType": "YulIdentifier",
																					"src": "793:42:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "793:49:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "783:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:60:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:68:7"
															},
															"nodeType": "YulIf",
															"src": "773:88:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IRiscZeroVerifier_$728",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "756:5:7",
														"type": ""
													}
												],
												"src": "695:172:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "961:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "971:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "986:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "980:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "971:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1054:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IRiscZeroVerifier_$728",
																	"nodeType": "YulIdentifier",
																	"src": "1002:51:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1002:58:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IRiscZeroVerifier_$728_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "939:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "947:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "955:5:7",
														"type": ""
													}
												],
												"src": "873:193:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1115:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1172:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1181:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1174:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1138:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1163:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1145:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1145:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1135:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1135:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:43:7"
															},
															"nodeType": "YulIf",
															"src": "1125:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1108:5:7",
														"type": ""
													}
												],
												"src": "1072:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1263:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1273:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1288:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1273:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1331:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1304:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1304:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1241:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1249:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1257:5:7",
														"type": ""
													}
												],
												"src": "1200:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1468:438:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1514:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1516:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1516:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1516:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1489:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1498:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1485:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:32:7"
															},
															"nodeType": "YulIf",
															"src": "1478:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1607:153:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1622:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1636:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1626:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:99:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1722:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1733:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1718:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1718:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1742:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IRiscZeroVerifier_$728_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1661:56:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:89:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1770:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1785:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1799:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1789:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1815:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1861:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1857:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1825:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IRiscZeroVerifier_$728t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1430:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1441:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1453:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1461:6:7",
														"type": ""
													}
												],
												"src": "1349:557:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1977:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1994:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2017:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1999:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1999:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1987:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1987:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1965:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1972:3:7",
														"type": ""
													}
												],
												"src": "1912:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2144:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2156:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2167:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2144:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2224:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2237:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2248:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2180:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2106:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2118:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2129:4:7",
														"type": ""
													}
												],
												"src": "2036:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IRiscZeroVerifier_$728(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IRiscZeroVerifier_$728(value) {\n        if iszero(eq(value, cleanup_t_contract$_IRiscZeroVerifier_$728(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IRiscZeroVerifier_$728_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IRiscZeroVerifier_$728(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IRiscZeroVerifier_$728t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IRiscZeroVerifier_$728_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b5060405162000f4938038062000f49833981810160405281019062000036919062000298565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620002ee565b60405180910390fd5b620000bb81620000f860201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000309565b60015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556200012d816200013060201b60201c565b50565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200022082620001f5565b9050919050565b5f620002338262000214565b9050919050565b620002458162000227565b811462000250575f80fd5b50565b5f8151905062000263816200023a565b92915050565b620002748162000214565b81146200027f575f80fd5b50565b5f81519050620002928162000269565b92915050565b5f8060408385031215620002b157620002b0620001f1565b5b5f620002c08582860162000253565b9250506020620002d38582860162000282565b9150509250929050565b620002e88162000214565b82525050565b5f602082019050620003035f830184620002dd565b92915050565b608051610c19620003305f395f81816101bb0152818161024301526103a00152610c195ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b1461011757806394142cc614610135578063ab750e7514610151578063e30c39781461016d578063e5caa16a1461018b578063f2fde38b14610195576100a7565b80631599ead5146100ab5780632b7ac3f3146100c75780635c975abb146100e5578063715018a61461010357806379ba50971461010d575b5f80fd5b6100c560048036038101906100c09190610761565b6101b1565b005b6100cf610241565b6040516100dc9190610822565b60405180910390f35b6100ed610265565b6040516100fa9190610855565b60405180910390f35b61010b61027b565b005b61011561028e565b005b61011f61031c565b60405161012c919061088e565b60405180910390f35b61014f600480360381019061014a9190610761565b610343565b005b61016b6004803603810190610166919061093b565b610396565b005b61017561042f565b604051610182919061088e565b60405180910390f35b610193610457565b005b6101af60048036038101906101aa91906109d6565b610469565b005b6101b9610515565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631599ead5826040518263ffffffff1660e01b81526004016102129190610b3a565b5f6040518083038186803b158015610228575f80fd5b505afa15801561023a573d5f803e3d5ffd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600160149054906101000a900460ff16905090565b610283610556565b61028c5f6105dd565b565b5f61029761060d565b90508073ffffffffffffffffffffffffffffffffffffffff166102b861042f565b73ffffffffffffffffffffffffffffffffffffffff161461031057806040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610307919061088e565b60405180910390fd5b610319816105dd565b50565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f801b816020013514610382576040517f2004afd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038b816101b1565b610393610614565b50565b61039e610515565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ab750e75858585856040518563ffffffff1660e01b81526004016103fd9493929190610ba5565b5f6040518083038186803b158015610413575f80fd5b505afa158015610425573d5f803e3d5ffd5b5050505050505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61045f610556565b610467610614565b565b610471610556565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166104d061031c565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61051d610265565b15610554576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61055e61060d565b73ffffffffffffffffffffffffffffffffffffffff1661057c61031c565b73ffffffffffffffffffffffffffffffffffffffff16146105db5761059f61060d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105d2919061088e565b60405180910390fd5b565b60015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561060a81610676565b50565b5f33905090565b61061c610515565b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861065f61060d565b60405161066c919061088e565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f80fd5b5f80fd5b5f604082840312156107585761075761073f565b5b81905092915050565b5f6020828403121561077657610775610737565b5b5f82013567ffffffffffffffff8111156107935761079261073b565b5b61079f84828501610743565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6107ea6107e56107e0846107a8565b6107c7565b6107a8565b9050919050565b5f6107fb826107d0565b9050919050565b5f61080c826107f1565b9050919050565b61081c81610802565b82525050565b5f6020820190506108355f830184610813565b92915050565b5f8115159050919050565b61084f8161083b565b82525050565b5f6020820190506108685f830184610846565b92915050565b5f610878826107a8565b9050919050565b6108888161086e565b82525050565b5f6020820190506108a15f83018461087f565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126108c8576108c76108a7565b5b8235905067ffffffffffffffff8111156108e5576108e46108ab565b5b602083019150836001820283011115610901576109006108af565b5b9250929050565b5f819050919050565b61091a81610908565b8114610924575f80fd5b50565b5f8135905061093581610911565b92915050565b5f805f806060858703121561095357610952610737565b5b5f85013567ffffffffffffffff8111156109705761096f61073b565b5b61097c878288016108b3565b9450945050602061098f87828801610927565b92505060406109a087828801610927565b91505092959194509250565b6109b58161086e565b81146109bf575f80fd5b50565b5f813590506109d0816109ac565b92915050565b5f602082840312156109eb576109ea610737565b5b5f6109f8848285016109c2565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083356001602003843603038112610a2957610a28610a09565b5b83810192508235915060208301925067ffffffffffffffff821115610a5157610a50610a01565b5b600182023603831315610a6757610a66610a05565b5b509250929050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f610aa88385610a6f565b9350610ab5838584610a7f565b610abe83610a8d565b840190509392505050565b5f610ad76020840184610927565b905092915050565b610ae881610908565b82525050565b5f60408301610aff5f840184610a0d565b8583035f870152610b11838284610a9d565b92505050610b226020840184610ac9565b610b2f6020860182610adf565b508091505092915050565b5f6020820190508181035f830152610b528184610aee565b905092915050565b5f82825260208201905092915050565b5f610b758385610b5a565b9350610b82838584610a7f565b610b8b83610a8d565b840190509392505050565b610b9f81610908565b82525050565b5f6060820190508181035f830152610bbe818688610b6a565b9050610bcd6020830185610b96565b610bda6040830184610b96565b9594505050505056fea26469706673582212203883abb261ab572ed8b0deb1a8b64c27c27f6af13439c76e475f8fb327d839d064736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF49 CODESIZE SUB DUP1 PUSH3 0xF49 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x298 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0xF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH3 0x12D DUP2 PUSH3 0x130 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x220 DUP3 PUSH3 0x1F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x233 DUP3 PUSH3 0x214 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x245 DUP2 PUSH3 0x227 JUMP JUMPDEST DUP2 EQ PUSH3 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x263 DUP2 PUSH3 0x23A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x274 DUP2 PUSH3 0x214 JUMP JUMPDEST DUP2 EQ PUSH3 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x292 DUP2 PUSH3 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2B1 JUMPI PUSH3 0x2B0 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2C0 DUP6 DUP3 DUP7 ADD PUSH3 0x253 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2D3 DUP6 DUP3 DUP7 ADD PUSH3 0x282 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E8 DUP2 PUSH3 0x214 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x303 PUSH0 DUP4 ADD DUP5 PUSH3 0x2DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xC19 PUSH3 0x330 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1BB ADD MSTORE DUP2 DUP2 PUSH2 0x243 ADD MSTORE PUSH2 0x3A0 ADD MSTORE PUSH2 0xC19 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x94142CC6 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xAB750E75 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE5CAA16A EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x195 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1599EAD5 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCF PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x457 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x515 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1599EAD5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0xB3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x28C PUSH0 PUSH2 0x5DD JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x297 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B8 PUSH2 0x42F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x310 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x319 DUP2 PUSH2 0x5DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 PUSH1 0x20 ADD CALLDATALOAD EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2004AFD100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP2 PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x393 PUSH2 0x614 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x515 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAB750E75 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x413 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x425 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x45F PUSH2 0x556 JUMP JUMPDEST PUSH2 0x467 PUSH2 0x614 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x471 PUSH2 0x556 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4D0 PUSH2 0x31C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x51D PUSH2 0x265 JUMP JUMPDEST ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x55E PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x57C PUSH2 0x31C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5DB JUMPI PUSH2 0x59F PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x60A DUP2 PUSH2 0x676 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61C PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x65F PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0x73F JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x793 JUMPI PUSH2 0x792 PUSH2 0x73B JUMP JUMPDEST JUMPDEST PUSH2 0x79F DUP5 DUP3 DUP6 ADD PUSH2 0x743 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7EA PUSH2 0x7E5 PUSH2 0x7E0 DUP5 PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FB DUP3 PUSH2 0x7D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x80C DUP3 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81C DUP2 PUSH2 0x802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x835 PUSH0 DUP4 ADD DUP5 PUSH2 0x813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0x83B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x868 PUSH0 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x878 DUP3 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x888 DUP2 PUSH2 0x86E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x87F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8C8 JUMPI PUSH2 0x8C7 PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x901 JUMPI PUSH2 0x900 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91A DUP2 PUSH2 0x908 JUMP JUMPDEST DUP2 EQ PUSH2 0x924 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x935 DUP2 PUSH2 0x911 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x970 JUMPI PUSH2 0x96F PUSH2 0x73B JUMP JUMPDEST JUMPDEST PUSH2 0x97C DUP8 DUP3 DUP9 ADD PUSH2 0x8B3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 PUSH2 0x98F DUP8 DUP3 DUP9 ADD PUSH2 0x927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9A0 DUP8 DUP3 DUP9 ADD PUSH2 0x927 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0x86E JUMP JUMPDEST DUP2 EQ PUSH2 0x9BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D0 DUP2 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EB JUMPI PUSH2 0x9EA PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9F8 DUP5 DUP3 DUP6 ADD PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0xA09 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA51 JUMPI PUSH2 0xA50 PUSH2 0xA01 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xA67 JUMPI PUSH2 0xA66 PUSH2 0xA05 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA8 DUP4 DUP6 PUSH2 0xA6F JUMP JUMPDEST SWAP4 POP PUSH2 0xAB5 DUP4 DUP6 DUP5 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xABE DUP4 PUSH2 0xA8D JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAD7 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x927 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE8 DUP2 PUSH2 0x908 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH2 0xAFF PUSH0 DUP5 ADD DUP5 PUSH2 0xA0D JUMP JUMPDEST DUP6 DUP4 SUB PUSH0 DUP8 ADD MSTORE PUSH2 0xB11 DUP4 DUP3 DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xB22 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0xB2F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xADF JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB52 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB75 DUP4 DUP6 PUSH2 0xB5A JUMP JUMPDEST SWAP4 POP PUSH2 0xB82 DUP4 DUP6 DUP5 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xB8B DUP4 PUSH2 0xA8D JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB9F DUP2 PUSH2 0x908 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBE DUP2 DUP7 DUP9 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP PUSH2 0xBCD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0xBDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB96 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE DUP4 0xAB 0xB2 PUSH2 0xAB57 0x2E 0xD8 0xB0 0xDE 0xB1 0xA8 0xB6 0x4C 0x27 0xC2 PUSH32 0x6AF13439C76E475F8FB327D839D064736F6C6343000814003300000000000000 ",
							"sourceMap": "1046:2217:4:-:0;;;1378:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1467:8;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1498:9:4::1;1487:20;;;;;;;;::::0;::::1;1378:136:::0;;1046:2217;;2011:153:1;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;;;:34;;:::i;:::-;2011:153;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:121::-;630:7;659:24;677:5;659:24;:::i;:::-;648:35;;568:121;;;:::o;695:172::-;793:49;836:5;793:49;:::i;:::-;786:5;783:60;773:88;;857:1;854;847:12;773:88;695:172;:::o;873:193::-;955:5;986:6;980:13;971:22;;1002:58;1054:5;1002:58;:::i;:::-;873:193;;;;:::o;1072:122::-;1145:24;1163:5;1145:24;:::i;:::-;1138:5;1135:35;1125:63;;1184:1;1181;1174:12;1125:63;1072:122;:::o;1200:143::-;1257:5;1288:6;1282:13;1273:22;;1304:33;1331:5;1304:33;:::i;:::-;1200:143;;;;:::o;1349:557::-;1453:6;1461;1510:2;1498:9;1489:7;1485:23;1481:32;1478:119;;;1516:79;;:::i;:::-;1478:119;1636:1;1661:89;1742:7;1733:6;1722:9;1718:22;1661:89;:::i;:::-;1651:99;;1607:153;1799:2;1825:64;1881:7;1872:6;1861:9;1857:22;1825:64;:::i;:::-;1815:74;;1770:129;1349:557;;;;;:::o;1912:118::-;1999:24;2017:5;1999:24;:::i;:::-;1994:3;1987:37;1912:118;;:::o;2036:222::-;2129:4;2167:2;2156:9;2152:18;2144:26;;2180:71;2248:1;2237:9;2233:17;2224:6;2180:71;:::i;:::-;2036:222;;;;:::o;1046:2217:4:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1366,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_245": {
									"entryPoint": 1549,
									"id": 245,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_354": {
									"entryPoint": 1556,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_325": {
									"entryPoint": 1301,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1654,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_208": {
									"entryPoint": 1501,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_232": {
									"entryPoint": 654,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@estop_421": {
									"entryPoint": 1111,
									"id": 421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@estop_448": {
									"entryPoint": 835,
									"id": 448,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 796,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_313": {
									"entryPoint": 613,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_171": {
									"entryPoint": 1071,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 635,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_191": {
									"entryPoint": 1129,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifier_392": {
									"entryPoint": 577,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyIntegrity_485": {
									"entryPoint": 433,
									"id": 485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verify_469": {
									"entryPoint": 918,
									"id": 469,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_struct$_Receipt_$496_calldata_ptr": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_bytes32": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_struct$_Receipt_$496_calldata_ptr": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IRiscZeroVerifier_$728_to_t_address_fromStack": {
									"entryPoint": 2067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Receipt_$496_calldata_ptr_to_t_struct$_Receipt_$496_memory_ptr_fromStack": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32_t_bytes32__to_t_bytes_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IRiscZeroVerifier_$728__to_t_address__fromStack_reversed": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Receipt_$496_calldata_ptr__to_t_struct$_Receipt_$496_memory_ptr__fromStack_reversed": {
									"entryPoint": 2874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_access_t_bytes32": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_access_t_bytes_calldata_ptr": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"cleanup_t_address": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IRiscZeroVerifier_$728_to_t_address": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2215,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10367:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "557:152:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "596:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nodeType": "YulIdentifier",
																				"src": "598:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "598:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "598:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "578:3:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "583:6:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "574:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "592:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:25:7"
															},
															"nodeType": "YulIf",
															"src": "567:112:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "688:15:7",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "697:6:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "688:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_Receipt_$496_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "535:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "543:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "551:5:7",
														"type": ""
													}
												],
												"src": "479:230:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "807:449:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "853:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "855:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "855:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "855:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "828:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "837:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "824:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "824:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "820:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:32:7"
															},
															"nodeType": "YulIf",
															"src": "817:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "946:303:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "961:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "992:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1003:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "988:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "988:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "975:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "965:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1053:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1055:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1055:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1055:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1033:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1022:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1022:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1019:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1150:89:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1211:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1222:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1207:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1207:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1231:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_Receipt_$496_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1160:46:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1160:79:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1150:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Receipt_$496_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "777:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "788:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:7",
														"type": ""
													}
												],
												"src": "715:541:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1307:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1317:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1332:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1328:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1317:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1289:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1299:7:7",
														"type": ""
													}
												],
												"src": "1262:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1436:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1443:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1436:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1412:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1422:3:7",
														"type": ""
													}
												],
												"src": "1394:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1520:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1530:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1588:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "1570:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1570:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1561:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1561:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1543:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1530:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1500:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1510:9:7",
														"type": ""
													}
												],
												"src": "1460:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1678:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1722:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1691:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1678:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1648:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1658:9:7",
														"type": ""
													}
												],
												"src": "1608:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1879:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1848:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1835:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IRiscZeroVerifier_$728_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1805:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1815:9:7",
														"type": ""
													}
												],
												"src": "1740:151:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1987:91:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2004:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2065:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IRiscZeroVerifier_$728_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2009:55:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:62:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1997:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:75:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1997:75:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IRiscZeroVerifier_$728_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1975:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1982:3:7",
														"type": ""
													}
												],
												"src": "1897:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2207:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2217:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2229:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2240:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2217:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2335:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2346:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2331:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2331:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IRiscZeroVerifier_$728_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2253:68:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:96:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2253:96:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IRiscZeroVerifier_$728__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2179:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2191:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2202:4:7",
														"type": ""
													}
												],
												"src": "2084:272:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2404:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2414:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2439:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2432:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2414:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2386:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2396:7:7",
														"type": ""
													}
												],
												"src": "2362:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2517:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2534:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2554:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2539:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2539:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2527:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2505:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2512:3:7",
														"type": ""
													}
												],
												"src": "2458:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2665:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2675:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2749:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2711:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2711:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2711:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2637:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2649:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2660:4:7",
														"type": ""
													}
												],
												"src": "2573:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2834:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2844:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2873:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2855:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2844:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2816:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2826:7:7",
														"type": ""
													}
												],
												"src": "2789:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2956:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2973:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2996:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2978:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2978:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2966:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2944:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2951:3:7",
														"type": ""
													}
												],
												"src": "2891:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3113:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3123:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3135:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3131:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3123:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3216:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3227:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3159:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3159:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3085:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3097:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3108:4:7",
														"type": ""
													}
												],
												"src": "3015:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3332:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3243:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3455:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3472:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3475:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3465:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "3366:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3578:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3489:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3699:478:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3748:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3750:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3750:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3750:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3735:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3742:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:35:7"
															},
															"nodeType": "YulIf",
															"src": "3709:122:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3840:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3863:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3850:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "3915:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3915:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3885:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3893:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3882:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:30:7"
															},
															"nodeType": "YulIf",
															"src": "3879:117:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4005:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4021:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4029:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4017:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4005:8:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4088:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4090:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4090:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4090:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "4053:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4067:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4075:4:7",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4063:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4063:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:32:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4083:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4046:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:41:7"
															},
															"nodeType": "YulIf",
															"src": "4043:128:7"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3666:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3674:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "3682:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3692:6:7",
														"type": ""
													}
												],
												"src": "3625:552:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4238:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4220:7:7",
														"type": ""
													}
												],
												"src": "4183:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4309:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4368:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4368:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "4339:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4329:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:43:7"
															},
															"nodeType": "YulIf",
															"src": "4319:63:7"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4302:5:7",
														"type": ""
													}
												],
												"src": "4266:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4465:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "4494:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4494:33:7"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4440:5:7",
														"type": ""
													}
												],
												"src": "4394:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4658:698:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4704:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4706:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4706:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4706:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4679:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4675:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4675:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4700:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:32:7"
															},
															"nodeType": "YulIf",
															"src": "4668:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4797:296:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4812:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4843:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4854:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4839:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4839:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4826:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4826:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4816:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4904:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4906:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4906:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4906:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4876:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4884:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4873:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "4870:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5001:82:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5055:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5066:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5051:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5051:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5075:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5019:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5019:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5001:6:7"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5009:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5103:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5118:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5132:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5122:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5148:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5183:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5194:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5179:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5179:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5203:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5158:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5158:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5148:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5231:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5246:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5250:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5276:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5311:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5322:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5307:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5307:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5331:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5286:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5286:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5276:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4604:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4615:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4627:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4635:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4643:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4651:6:7",
														"type": ""
													}
												],
												"src": "4539:817:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5405:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5462:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5474:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5464:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5464:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5464:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5428:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5453:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5435:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5435:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5425:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5425:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:43:7"
															},
															"nodeType": "YulIf",
															"src": "5415:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5398:5:7",
														"type": ""
													}
												],
												"src": "5362:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5542:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5552:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5574:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5561:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5561:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5552:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5617:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5590:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5520:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5528:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5536:5:7",
														"type": ""
													}
												],
												"src": "5490:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5701:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5747:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5749:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5749:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5749:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5722:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5731:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5718:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5743:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5714:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5714:32:7"
															},
															"nodeType": "YulIf",
															"src": "5711:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5840:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5855:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5869:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5859:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5884:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5919:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5930:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5915:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5915:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5939:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5894:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5884:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5671:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5682:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5694:6:7",
														"type": ""
													}
												],
												"src": "5635:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6059:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6076:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6069:12:7"
														}
													]
												},
												"name": "revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2",
												"nodeType": "YulFunctionDefinition",
												"src": "5970:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6182:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6199:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6202:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6192:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6192:12:7"
														}
													]
												},
												"name": "revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20",
												"nodeType": "YulFunctionDefinition",
												"src": "6093:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6305:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:12:7"
														}
													]
												},
												"name": "revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4",
												"nodeType": "YulFunctionDefinition",
												"src": "6216:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6417:633:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6427:43:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6466:3:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6453:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:17:7"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "6431:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6564:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4",
																				"nodeType": "YulIdentifier",
																				"src": "6566:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6566:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6566:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "6493:18:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "6521:12:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6521:14:7"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "6537:8:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6517:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6517:29:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6552:4:7",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6558:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6548:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6548:12:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6513:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6513:48:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6489:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6489:73:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6482:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:81:7"
															},
															"nodeType": "YulIf",
															"src": "6479:168:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6656:42:7",
															"value": {
																"arguments": [
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "6669:18:7"
																	},
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "6689:8:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6665:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6665:33:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6656:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6708:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6731:5:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6718:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6718:19:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6746:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6759:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6766:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6755:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:16:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6746:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6814:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2",
																				"nodeType": "YulIdentifier",
																				"src": "6816:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6816:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6816:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6786:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6794:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6783:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6783:30:7"
															},
															"nodeType": "YulIf",
															"src": "6780:117:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6960:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20",
																				"nodeType": "YulIdentifier",
																				"src": "6962:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6962:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6962:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6913:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "6924:12:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6924:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6944:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6952:4:7",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6940:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6940:17:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:38:7"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "6909:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6909:50:7"
															},
															"nodeType": "YulIf",
															"src": "6906:137:7"
														}
													]
												},
												"name": "calldata_access_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "6385:8:7",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6395:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6403:5:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6410:6:7",
														"type": ""
													}
												],
												"src": "6339:711:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7141:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7158:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7163:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7151:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7179:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7198:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7203:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7194:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7179:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7113:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7118:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7129:11:7",
														"type": ""
													}
												],
												"src": "7056:158:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7284:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7307:3:7"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7312:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7317:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7294:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7294:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7294:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7344:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7349:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7340:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7340:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7358:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7333:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7333:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7266:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7271:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7276:6:7",
														"type": ""
													}
												],
												"src": "7220:146:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7420:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7430:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7448:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7455:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7444:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7464:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7460:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7460:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7430:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7403:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7413:6:7",
														"type": ""
													}
												],
												"src": "7372:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:204:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7602:67:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7657:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7662:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7609:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7609:60:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7602:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7723:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7728:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7679:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7679:56:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7679:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7744:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7755:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7782:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7760:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7760:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7751:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7751:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7744:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "7565:5:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7572:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7580:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7588:3:7",
														"type": ""
													}
												],
												"src": "7502:294:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7860:64:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7870:48:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7900:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7909:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7914:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7905:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7905:12:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "7879:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7879:39:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7870:5:7"
																}
															]
														}
													]
												},
												"name": "calldata_access_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "baseRef",
														"nodeType": "YulTypedName",
														"src": "7837:7:7",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7846:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7854:5:7",
														"type": ""
													}
												],
												"src": "7802:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7985:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8002:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8025:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "8007:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:37:7"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7973:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7980:3:7",
														"type": ""
													}
												],
												"src": "7930:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8208:582:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8218:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8234:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8239:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8230:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8230:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "8222:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8254:301:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8289:95:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8360:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8371:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8378:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8367:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8367:16:7"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8323:36:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8323:61:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8293:12:7",
																			"type": ""
																		},
																		{
																			"name": "memberValue1",
																			"nodeType": "YulTypedName",
																			"src": "8307:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8409:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8414:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8405:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8405:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "8425:4:7"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8431:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8421:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8421:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "8398:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8398:38:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8398:38:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8449:95:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8511:12:7"
																			},
																			{
																				"name": "memberValue1",
																				"nodeType": "YulIdentifier",
																				"src": "8525:12:7"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8457:53:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:87:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "8449:4:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8565:198:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8607:70:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8653:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8664:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8671:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8660:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8660:16:7"
																			}
																		],
																		"functionName": {
																			"name": "calldata_access_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "8627:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8627:50:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8611:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8724:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8742:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8747:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8738:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8738:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "8690:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8690:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8690:63:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8773:11:7",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "8780:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8773:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Receipt_$496_calldata_ptr_to_t_struct$_Receipt_$496_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8187:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8194:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8203:3:7",
														"type": ""
													}
												],
												"src": "8084:706:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8944:225:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8954:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8966:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8977:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8962:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8954:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9001:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9012:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8997:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8997:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9020:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9026:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9016:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9016:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8990:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8990:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8990:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9046:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9148:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9157:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Receipt_$496_calldata_ptr_to_t_struct$_Receipt_$496_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9054:93:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9054:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9046:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Receipt_$496_calldata_ptr__to_t_struct$_Receipt_$496_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8916:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8928:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8939:4:7",
														"type": ""
													}
												],
												"src": "8796:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9270:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9287:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9292:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9280:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9280:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9280:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9308:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9327:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9332:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9323:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9323:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9308:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9242:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9247:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9258:11:7",
														"type": ""
													}
												],
												"src": "9175:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9471:214:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9481:77:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9546:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9551:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9488:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:70:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9481:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "9605:5:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9612:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9617:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9568:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9568:56:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9568:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9633:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9644:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9671:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9649:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9649:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9640:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9640:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9633:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "9444:5:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9451:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9459:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9467:3:7",
														"type": ""
													}
												],
												"src": "9371:314:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9756:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9773:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9796:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "9778:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9778:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9766:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9766:37:7"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9744:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9751:3:7",
														"type": ""
													}
												],
												"src": "9691:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9997:367:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10007:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10019:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10030:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10015:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10015:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10007:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10054:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10050:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10050:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10073:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10079:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10069:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10069:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10043:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10043:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10043:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10099:94:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10171:6:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10179:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10188:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10107:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10107:86:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10099:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10247:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10260:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10271:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10256:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10256:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10203:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10203:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10203:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10329:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10342:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10353:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10338:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10285:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10285:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10285:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32_t_bytes32__to_t_bytes_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9945:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9957:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9965:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9973:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9981:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9992:4:7",
														"type": ""
													}
												],
												"src": "9815:549:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct Receipt\n    function abi_decode_t_struct$_Receipt_$496_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 64) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_Receipt_$496_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_Receipt_$496_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRiscZeroVerifier_$728_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IRiscZeroVerifier_$728_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IRiscZeroVerifier_$728_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IRiscZeroVerifier_$728__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IRiscZeroVerifier_$728_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() {\n        revert(0, 0)\n    }\n\n    function revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() {\n        revert(0, 0)\n    }\n\n    function revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() {\n        revert(0, 0)\n    }\n\n    function calldata_access_t_bytes_calldata_ptr(base_ref, ptr) -> value, length {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() }\n        value := add(rel_offset_of_tail, base_ref)\n\n        length := calldataload(value)\n        value := add(value, 0x20)\n        if gt(length, 0xffffffffffffffff) { revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() }\n        if sgt(value, sub(calldatasize(), mul(length, 0x01))) { revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function calldata_access_t_bytes32(baseRef, ptr) -> value {\n        value := abi_decode_t_bytes32(ptr, add(ptr, 32))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    // struct Receipt -> struct Receipt\n    function abi_encode_t_struct$_Receipt_$496_calldata_ptr_to_t_struct$_Receipt_$496_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // seal\n\n            let memberValue0, memberValue1 := calldata_access_t_bytes_calldata_ptr(value, add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(memberValue0, memberValue1, tail)\n\n        }\n\n        {\n            // claimDigest\n\n            let memberValue0 := calldata_access_t_bytes32(value, add(value, 0x20))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Receipt_$496_calldata_ptr__to_t_struct$_Receipt_$496_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Receipt_$496_calldata_ptr_to_t_struct$_Receipt_$496_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32_t_bytes32__to_t_bytes_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"392": [
									{
										"length": 32,
										"start": 443
									},
									{
										"length": 32,
										"start": 579
									},
									{
										"length": 32,
										"start": 928
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b1461011757806394142cc614610135578063ab750e7514610151578063e30c39781461016d578063e5caa16a1461018b578063f2fde38b14610195576100a7565b80631599ead5146100ab5780632b7ac3f3146100c75780635c975abb146100e5578063715018a61461010357806379ba50971461010d575b5f80fd5b6100c560048036038101906100c09190610761565b6101b1565b005b6100cf610241565b6040516100dc9190610822565b60405180910390f35b6100ed610265565b6040516100fa9190610855565b60405180910390f35b61010b61027b565b005b61011561028e565b005b61011f61031c565b60405161012c919061088e565b60405180910390f35b61014f600480360381019061014a9190610761565b610343565b005b61016b6004803603810190610166919061093b565b610396565b005b61017561042f565b604051610182919061088e565b60405180910390f35b610193610457565b005b6101af60048036038101906101aa91906109d6565b610469565b005b6101b9610515565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631599ead5826040518263ffffffff1660e01b81526004016102129190610b3a565b5f6040518083038186803b158015610228575f80fd5b505afa15801561023a573d5f803e3d5ffd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600160149054906101000a900460ff16905090565b610283610556565b61028c5f6105dd565b565b5f61029761060d565b90508073ffffffffffffffffffffffffffffffffffffffff166102b861042f565b73ffffffffffffffffffffffffffffffffffffffff161461031057806040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610307919061088e565b60405180910390fd5b610319816105dd565b50565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f801b816020013514610382576040517f2004afd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038b816101b1565b610393610614565b50565b61039e610515565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ab750e75858585856040518563ffffffff1660e01b81526004016103fd9493929190610ba5565b5f6040518083038186803b158015610413575f80fd5b505afa158015610425573d5f803e3d5ffd5b5050505050505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61045f610556565b610467610614565b565b610471610556565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166104d061031c565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61051d610265565b15610554576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61055e61060d565b73ffffffffffffffffffffffffffffffffffffffff1661057c61031c565b73ffffffffffffffffffffffffffffffffffffffff16146105db5761059f61060d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105d2919061088e565b60405180910390fd5b565b60015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561060a81610676565b50565b5f33905090565b61061c610515565b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861065f61060d565b60405161066c919061088e565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f80fd5b5f80fd5b5f604082840312156107585761075761073f565b5b81905092915050565b5f6020828403121561077657610775610737565b5b5f82013567ffffffffffffffff8111156107935761079261073b565b5b61079f84828501610743565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6107ea6107e56107e0846107a8565b6107c7565b6107a8565b9050919050565b5f6107fb826107d0565b9050919050565b5f61080c826107f1565b9050919050565b61081c81610802565b82525050565b5f6020820190506108355f830184610813565b92915050565b5f8115159050919050565b61084f8161083b565b82525050565b5f6020820190506108685f830184610846565b92915050565b5f610878826107a8565b9050919050565b6108888161086e565b82525050565b5f6020820190506108a15f83018461087f565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126108c8576108c76108a7565b5b8235905067ffffffffffffffff8111156108e5576108e46108ab565b5b602083019150836001820283011115610901576109006108af565b5b9250929050565b5f819050919050565b61091a81610908565b8114610924575f80fd5b50565b5f8135905061093581610911565b92915050565b5f805f806060858703121561095357610952610737565b5b5f85013567ffffffffffffffff8111156109705761096f61073b565b5b61097c878288016108b3565b9450945050602061098f87828801610927565b92505060406109a087828801610927565b91505092959194509250565b6109b58161086e565b81146109bf575f80fd5b50565b5f813590506109d0816109ac565b92915050565b5f602082840312156109eb576109ea610737565b5b5f6109f8848285016109c2565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083356001602003843603038112610a2957610a28610a09565b5b83810192508235915060208301925067ffffffffffffffff821115610a5157610a50610a01565b5b600182023603831315610a6757610a66610a05565b5b509250929050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f610aa88385610a6f565b9350610ab5838584610a7f565b610abe83610a8d565b840190509392505050565b5f610ad76020840184610927565b905092915050565b610ae881610908565b82525050565b5f60408301610aff5f840184610a0d565b8583035f870152610b11838284610a9d565b92505050610b226020840184610ac9565b610b2f6020860182610adf565b508091505092915050565b5f6020820190508181035f830152610b528184610aee565b905092915050565b5f82825260208201905092915050565b5f610b758385610b5a565b9350610b82838584610a7f565b610b8b83610a8d565b840190509392505050565b610b9f81610908565b82525050565b5f6060820190508181035f830152610bbe818688610b6a565b9050610bcd6020830185610b96565b610bda6040830184610b96565b9594505050505056fea26469706673582212203883abb261ab572ed8b0deb1a8b64c27c27f6af13439c76e475f8fb327d839d064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x94142CC6 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xAB750E75 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE5CAA16A EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x195 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1599EAD5 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCF PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x457 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x515 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1599EAD5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0xB3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x28C PUSH0 PUSH2 0x5DD JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x297 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B8 PUSH2 0x42F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x310 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x319 DUP2 PUSH2 0x5DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 PUSH1 0x20 ADD CALLDATALOAD EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2004AFD100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP2 PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x393 PUSH2 0x614 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x515 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAB750E75 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x413 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x425 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x45F PUSH2 0x556 JUMP JUMPDEST PUSH2 0x467 PUSH2 0x614 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x471 PUSH2 0x556 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4D0 PUSH2 0x31C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x51D PUSH2 0x265 JUMP JUMPDEST ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x55E PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x57C PUSH2 0x31C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5DB JUMPI PUSH2 0x59F PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x60A DUP2 PUSH2 0x676 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61C PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x65F PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0x73F JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x793 JUMPI PUSH2 0x792 PUSH2 0x73B JUMP JUMPDEST JUMPDEST PUSH2 0x79F DUP5 DUP3 DUP6 ADD PUSH2 0x743 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7EA PUSH2 0x7E5 PUSH2 0x7E0 DUP5 PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FB DUP3 PUSH2 0x7D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x80C DUP3 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81C DUP2 PUSH2 0x802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x835 PUSH0 DUP4 ADD DUP5 PUSH2 0x813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0x83B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x868 PUSH0 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x878 DUP3 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x888 DUP2 PUSH2 0x86E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x87F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8C8 JUMPI PUSH2 0x8C7 PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x901 JUMPI PUSH2 0x900 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91A DUP2 PUSH2 0x908 JUMP JUMPDEST DUP2 EQ PUSH2 0x924 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x935 DUP2 PUSH2 0x911 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x970 JUMPI PUSH2 0x96F PUSH2 0x73B JUMP JUMPDEST JUMPDEST PUSH2 0x97C DUP8 DUP3 DUP9 ADD PUSH2 0x8B3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 PUSH2 0x98F DUP8 DUP3 DUP9 ADD PUSH2 0x927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9A0 DUP8 DUP3 DUP9 ADD PUSH2 0x927 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0x86E JUMP JUMPDEST DUP2 EQ PUSH2 0x9BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D0 DUP2 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EB JUMPI PUSH2 0x9EA PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9F8 DUP5 DUP3 DUP6 ADD PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xA29 JUMPI PUSH2 0xA28 PUSH2 0xA09 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA51 JUMPI PUSH2 0xA50 PUSH2 0xA01 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xA67 JUMPI PUSH2 0xA66 PUSH2 0xA05 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA8 DUP4 DUP6 PUSH2 0xA6F JUMP JUMPDEST SWAP4 POP PUSH2 0xAB5 DUP4 DUP6 DUP5 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xABE DUP4 PUSH2 0xA8D JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAD7 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x927 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE8 DUP2 PUSH2 0x908 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH2 0xAFF PUSH0 DUP5 ADD DUP5 PUSH2 0xA0D JUMP JUMPDEST DUP6 DUP4 SUB PUSH0 DUP8 ADD MSTORE PUSH2 0xB11 DUP4 DUP3 DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xB22 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0xB2F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xADF JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB52 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB75 DUP4 DUP6 PUSH2 0xB5A JUMP JUMPDEST SWAP4 POP PUSH2 0xB82 DUP4 DUP6 DUP5 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xB8B DUP4 PUSH2 0xA8D JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB9F DUP2 PUSH2 0x908 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBE DUP2 DUP7 DUP9 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP PUSH2 0xBCD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0xBDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB96 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE DUP4 0xAB 0xB2 PUSH2 0xAB57 0x2E 0xD8 0xB0 0xDE 0xB1 0xA8 0xB6 0x4C 0x27 0xC2 PUSH32 0x6AF13439C76E475F8FB327D839D064736F6C6343000814003300000000000000 ",
							"sourceMap": "1046:2217:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1148:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2244:229:1;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2440:283:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2767:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1232:99:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:61:4;;;:::i;:::-;;1649:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3064:197:4;1350:19:3;:17;:19::i;:::-;3221:8:4::1;:24;;;3246:7;3221:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3064:197:::0;:::o;1148:43::-;;;:::o;1726:84:3:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2244:229:1:-;2296:14;2313:12;:10;:12::i;:::-;2296:29;;2357:6;2339:24;;:14;:12;:14::i;:::-;:24;;;2335:96;;2413:6;2386:34;;;;;;;;;;;:::i;:::-;;;;;;;;2335:96;2440:26;2459:6;2440:18;:26::i;:::-;2286:187;2244:229::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2440:283:4:-;2535:1;2527:10;;2504:7;:19;;;:33;2500:94;;2560:23;;;;;;;;;;;;;;2500:94;2674:24;2690:7;2674:15;:24::i;:::-;2708:8;:6;:8::i;:::-;2440:283;:::o;2767:253::-;1350:19:3;:17;:19::i;:::-;2968:8:4::1;:15;;;2984:4;;2990:7;2999:13;2968:45;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2767:253:::0;;;;:::o;1232:99:1:-;1285:7;1311:13;;;;;;;;;;;1304:20;;1232:99;:::o;1855:61:4:-;1531:13:0;:11;:13::i;:::-;1901:8:4::1;:6;:8::i;:::-;1855:61::o:0;1649:178:1:-;1531:13:0;:11;:13::i;:::-;1754:8:1::1;1738:13;;:24;;;;;;;;;;;;;;;;;;1811:8;1777:43;;1802:7;:5;:7::i;:::-;1777:43;;;;;;;;;;;;1649:178:::0;:::o;1878:128:3:-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2011:153:1:-;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;:34::i;:::-;2011:153;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;2339:115:3:-;1350:19;:17;:19::i;:::-;2408:4:::1;2398:7:::0;::::1;:14;;;;;;;;;;;;;;;;;;2427:20;2434:12;:10;:12::i;:::-;2427:20;;;;;;:::i;:::-;;;;;;;;2339:115::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;479:230;551:5;592:2;583:6;578:3;574:16;570:25;567:112;;;598:79;;:::i;:::-;567:112;697:6;688:15;;479:230;;;;:::o;715:541::-;800:6;849:2;837:9;828:7;824:23;820:32;817:119;;;855:79;;:::i;:::-;817:119;1003:1;992:9;988:17;975:31;1033:18;1025:6;1022:30;1019:117;;;1055:79;;:::i;:::-;1019:117;1160:79;1231:7;1222:6;1211:9;1207:22;1160:79;:::i;:::-;1150:89;;946:303;715:541;;;;:::o;1262:126::-;1299:7;1339:42;1332:5;1328:54;1317:65;;1262:126;;;:::o;1394:60::-;1422:3;1443:5;1436:12;;1394:60;;;:::o;1460:142::-;1510:9;1543:53;1561:34;1570:24;1588:5;1570:24;:::i;:::-;1561:34;:::i;:::-;1543:53;:::i;:::-;1530:66;;1460:142;;;:::o;1608:126::-;1658:9;1691:37;1722:5;1691:37;:::i;:::-;1678:50;;1608:126;;;:::o;1740:151::-;1815:9;1848:37;1879:5;1848:37;:::i;:::-;1835:50;;1740:151;;;:::o;1897:181::-;2009:62;2065:5;2009:62;:::i;:::-;2004:3;1997:75;1897:181;;:::o;2084:272::-;2202:4;2240:2;2229:9;2225:18;2217:26;;2253:96;2346:1;2335:9;2331:17;2322:6;2253:96;:::i;:::-;2084:272;;;;:::o;2362:90::-;2396:7;2439:5;2432:13;2425:21;2414:32;;2362:90;;;:::o;2458:109::-;2539:21;2554:5;2539:21;:::i;:::-;2534:3;2527:34;2458:109;;:::o;2573:210::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:65;2773:1;2762:9;2758:17;2749:6;2711:65;:::i;:::-;2573:210;;;;:::o;2789:96::-;2826:7;2855:24;2873:5;2855:24;:::i;:::-;2844:35;;2789:96;;;:::o;2891:118::-;2978:24;2996:5;2978:24;:::i;:::-;2973:3;2966:37;2891:118;;:::o;3015:222::-;3108:4;3146:2;3135:9;3131:18;3123:26;;3159:71;3227:1;3216:9;3212:17;3203:6;3159:71;:::i;:::-;3015:222;;;;:::o;3243:117::-;3352:1;3349;3342:12;3366:117;3475:1;3472;3465:12;3489:117;3598:1;3595;3588:12;3625:552;3682:8;3692:6;3742:3;3735:4;3727:6;3723:17;3719:27;3709:122;;3750:79;;:::i;:::-;3709:122;3863:6;3850:20;3840:30;;3893:18;3885:6;3882:30;3879:117;;;3915:79;;:::i;:::-;3879:117;4029:4;4021:6;4017:17;4005:29;;4083:3;4075:4;4067:6;4063:17;4053:8;4049:32;4046:41;4043:128;;;4090:79;;:::i;:::-;4043:128;3625:552;;;;;:::o;4183:77::-;4220:7;4249:5;4238:16;;4183:77;;;:::o;4266:122::-;4339:24;4357:5;4339:24;:::i;:::-;4332:5;4329:35;4319:63;;4378:1;4375;4368:12;4319:63;4266:122;:::o;4394:139::-;4440:5;4478:6;4465:20;4456:29;;4494:33;4521:5;4494:33;:::i;:::-;4394:139;;;;:::o;4539:817::-;4627:6;4635;4643;4651;4700:2;4688:9;4679:7;4675:23;4671:32;4668:119;;;4706:79;;:::i;:::-;4668:119;4854:1;4843:9;4839:17;4826:31;4884:18;4876:6;4873:30;4870:117;;;4906:79;;:::i;:::-;4870:117;5019:64;5075:7;5066:6;5055:9;5051:22;5019:64;:::i;:::-;5001:82;;;;4797:296;5132:2;5158:53;5203:7;5194:6;5183:9;5179:22;5158:53;:::i;:::-;5148:63;;5103:118;5260:2;5286:53;5331:7;5322:6;5311:9;5307:22;5286:53;:::i;:::-;5276:63;;5231:118;4539:817;;;;;;;:::o;5362:122::-;5435:24;5453:5;5435:24;:::i;:::-;5428:5;5425:35;5415:63;;5474:1;5471;5464:12;5415:63;5362:122;:::o;5490:139::-;5536:5;5574:6;5561:20;5552:29;;5590:33;5617:5;5590:33;:::i;:::-;5490:139;;;;:::o;5635:329::-;5694:6;5743:2;5731:9;5722:7;5718:23;5714:32;5711:119;;;5749:79;;:::i;:::-;5711:119;5869:1;5894:53;5939:7;5930:6;5919:9;5915:22;5894:53;:::i;:::-;5884:63;;5840:117;5635:329;;;;:::o;5970:117::-;6079:1;6076;6069:12;6093:117;6202:1;6199;6192:12;6216:117;6325:1;6322;6315:12;6339:711;6403:5;6410:6;6466:3;6453:17;6558:1;6552:4;6548:12;6537:8;6521:14;6517:29;6513:48;6493:18;6489:73;6479:168;;6566:79;;:::i;:::-;6479:168;6689:8;6669:18;6665:33;6656:42;;6731:5;6718:19;6708:29;;6766:4;6759:5;6755:16;6746:25;;6794:18;6786:6;6783:30;6780:117;;;6816:79;;:::i;:::-;6780:117;6952:4;6944:6;6940:17;6924:14;6920:38;6913:5;6909:50;6906:137;;;6962:79;;:::i;:::-;6906:137;6417:633;6339:711;;;;;:::o;7056:158::-;7129:11;7163:6;7158:3;7151:19;7203:4;7198:3;7194:14;7179:29;;7056:158;;;;:::o;7220:146::-;7317:6;7312:3;7307;7294:30;7358:1;7349:6;7344:3;7340:16;7333:27;7220:146;;;:::o;7372:102::-;7413:6;7464:2;7460:7;7455:2;7448:5;7444:14;7440:28;7430:38;;7372:102;;;:::o;7502:294::-;7588:3;7609:60;7662:6;7657:3;7609:60;:::i;:::-;7602:67;;7679:56;7728:6;7723:3;7716:5;7679:56;:::i;:::-;7760:29;7782:6;7760:29;:::i;:::-;7755:3;7751:39;7744:46;;7502:294;;;;;:::o;7802:122::-;7854:5;7879:39;7914:2;7909:3;7905:12;7900:3;7879:39;:::i;:::-;7870:48;;7802:122;;;;:::o;7930:108::-;8007:24;8025:5;8007:24;:::i;:::-;8002:3;7995:37;7930:108;;:::o;8084:706::-;8203:3;8239:4;8234:3;8230:14;8323:61;8378:4;8371:5;8367:16;8360:5;8323:61;:::i;:::-;8431:3;8425:4;8421:14;8414:4;8409:3;8405:14;8398:38;8457:87;8539:4;8525:12;8511;8457:87;:::i;:::-;8449:95;;8254:301;;8627:50;8671:4;8664:5;8660:16;8653:5;8627:50;:::i;:::-;8690:63;8747:4;8742:3;8738:14;8724:12;8690:63;:::i;:::-;8565:198;8780:4;8773:11;;8208:582;8084:706;;;;:::o;8796:373::-;8939:4;8977:2;8966:9;8962:18;8954:26;;9026:9;9020:4;9016:20;9012:1;9001:9;8997:17;8990:47;9054:108;9157:4;9148:6;9054:108;:::i;:::-;9046:116;;8796:373;;;;:::o;9175:168::-;9258:11;9292:6;9287:3;9280:19;9332:4;9327:3;9323:14;9308:29;;9175:168;;;;:::o;9371:314::-;9467:3;9488:70;9551:6;9546:3;9488:70;:::i;:::-;9481:77;;9568:56;9617:6;9612:3;9605:5;9568:56;:::i;:::-;9649:29;9671:6;9649:29;:::i;:::-;9644:3;9640:39;9633:46;;9371:314;;;;;:::o;9691:118::-;9778:24;9796:5;9778:24;:::i;:::-;9773:3;9766:37;9691:118;;:::o;9815:549::-;9992:4;10030:2;10019:9;10015:18;10007:26;;10079:9;10073:4;10069:20;10065:1;10054:9;10050:17;10043:47;10107:86;10188:4;10179:6;10171;10107:86;:::i;:::-;10099:94;;10203:72;10271:2;10260:9;10256:18;10247:6;10203:72;:::i;:::-;10285;10353:2;10342:9;10338:18;10329:6;10285:72;:::i;:::-;9815:549;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "619400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "54738",
								"estop((bytes,bytes32))": "infinite",
								"estop()": "infinite",
								"owner()": "2515",
								"paused()": "2569",
								"pendingOwner()": "2581",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"verifier()": "infinite",
								"verify(bytes,bytes32,bytes32)": "infinite",
								"verifyIntegrity((bytes,bytes32))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1378,
									"end": 1514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1467,
									"end": 1475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1507,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1507,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1507,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1514,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2148,
									"end": 2156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 689,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 630,
									"end": 637,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 677,
									"end": 682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 659,
									"end": 683,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 648,
									"end": 683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 648,
									"end": 683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 689,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 695,
									"end": 867,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 695,
									"end": 867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 836,
									"end": 841,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 793,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 793,
									"end": 842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 793,
									"end": 842,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 793,
									"end": 842,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 786,
									"end": 791,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 783,
									"end": 843,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 773,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 861,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 847,
									"end": 859,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 773,
									"end": 861,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 695,
									"end": 867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 695,
									"end": 867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 955,
									"end": 960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 986,
									"end": 992,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 980,
									"end": 993,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 971,
									"end": 993,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 971,
									"end": 993,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1054,
									"end": 1059,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1002,
									"end": 1060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 873,
									"end": 1066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1194,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1072,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1145,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1163,
									"end": 1168,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1145,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1145,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1145,
									"end": 1169,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1145,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1170,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1125,
									"end": 1188,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1182,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1186,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1188,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1125,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1194,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1194,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1343,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1200,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1257,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1294,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1295,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1331,
									"end": 1336,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1304,
									"end": 1337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1337,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1304,
									"end": 1337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1343,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1343,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1906,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1349,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1453,
									"end": 1459,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1461,
									"end": 1467,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1510,
									"end": 1512,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1498,
									"end": 1507,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1485,
									"end": 1508,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1481,
									"end": 1513,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1597,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1597,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1478,
									"end": 1597,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1516,
									"end": 1595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1516,
									"end": 1595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1595,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1516,
									"end": 1595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1478,
									"end": 1597,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1478,
									"end": 1597,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1636,
									"end": 1637,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1742,
									"end": 1749,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1739,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1731,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1740,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1661,
									"end": 1750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1750,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1661,
									"end": 1750,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1750,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1750,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1607,
									"end": 1760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1799,
									"end": 1801,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1825,
									"end": 1889,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1881,
									"end": 1888,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1872,
									"end": 1878,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1861,
									"end": 1870,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1857,
									"end": 1879,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1825,
									"end": 1889,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1825,
									"end": 1889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1825,
									"end": 1889,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1825,
									"end": 1889,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1815,
									"end": 1889,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1815,
									"end": 1889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1770,
									"end": 1899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1906,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1906,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1906,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 2030,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1912,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1999,
									"end": 2023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2017,
									"end": 2022,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1999,
									"end": 2023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1999,
									"end": 2023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1999,
									"end": 2023,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1999,
									"end": 2023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 1997,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1987,
									"end": 2024,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 2030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 2030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 2030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2258,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2036,
									"end": 2258,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2167,
									"end": 2169,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2156,
									"end": 2165,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2170,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2248,
									"end": 2249,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2237,
									"end": 2246,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2233,
									"end": 2250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2230,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2180,
									"end": 2251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2251,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2180,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2258,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2258,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2258,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2258,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "392"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 3263,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203883abb261ab572ed8b0deb1a8b64c27c27f6af13439c76e475f8fb327d839d064736f6c63430008140033",
									".code": [
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "94142CC6"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "AB750E75"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "E30C3978"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "E5CAA16A"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "1599EAD5"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "2B7AC3F3"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "79BA5097"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 3263,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3064,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3064,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1148,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2244,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2440,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2440,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2767,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1855,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3229,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 3221,
											"end": 3245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3245,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1599EAD5"
										},
										{
											"begin": 3246,
											"end": 3253,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3221,
											"end": 3254,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 1148,
											"end": 1191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2313,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2313,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2339,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2440,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2537,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2511,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2523,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2537,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2500,
											"end": 2594,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "2004AFD100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2594,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2500,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2690,
											"end": 2697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2674,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2674,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2708,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2716,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2708,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 2968,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "AB750E75"
										},
										{
											"begin": 2984,
											"end": 2988,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 2988,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2990,
											"end": 2997,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3012,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2968,
											"end": 3013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2767,
											"end": 3020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1855,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1901,
											"end": 1909,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1909,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1909,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1802,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1802,
											"end": 1809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1878,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2148,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2123,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2434,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2427,
											"end": 2447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 479,
											"end": 709,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 479,
											"end": 709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 581,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 574,
											"end": 590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 567,
											"end": 679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 567,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 567,
											"end": 679,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 598,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 677,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 679,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 567,
											"end": 679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 697,
											"end": 703,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 688,
											"end": 703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 688,
											"end": 703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 479,
											"end": 709,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 479,
											"end": 709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 479,
											"end": 709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 479,
											"end": 709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 479,
											"end": 709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 715,
											"end": 1256,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 715,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 800,
											"end": 806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 828,
											"end": 835,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 824,
											"end": 847,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 820,
											"end": 852,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 817,
											"end": 936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 855,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 855,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 855,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 855,
											"end": 934,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 855,
											"end": 934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 936,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 817,
											"end": 936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1006,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1022,
											"end": 1052,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1136,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1019,
											"end": 1136,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1055,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1136,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1019,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1231,
											"end": 1238,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1220,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1160,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1239,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1160,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 946,
											"end": 1249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 715,
											"end": 1256,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 715,
											"end": 1256,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 715,
											"end": 1256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 715,
											"end": 1256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 715,
											"end": 1256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1388,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1262,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1382,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1394,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1602,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1460,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1561,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1570,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1570,
											"end": 1594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1594,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1570,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1561,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1595,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1561,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1543,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1596,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1543,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1734,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1608,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1691,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1728,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1691,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1891,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1740,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1848,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 1885,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1848,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 2078,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1897,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2009,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2071,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2009,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2007,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2072,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 2078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 2078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 2078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2356,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2084,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2238,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2253,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2349,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2253,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2452,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2362,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2414,
											"end": 2446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2414,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2567,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2458,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2554,
											"end": 2559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2539,
											"end": 2560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2539,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2783,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2573,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2755,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2711,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2776,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2711,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2783,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2783,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2885,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2789,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2855,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2855,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3009,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2891,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2978,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2978,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3015,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3225,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3159,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3230,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3159,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3237,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3360,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3243,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3483,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3366,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3477,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3606,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3489,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 4177,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3625,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3739,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3746,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3750,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3750,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3750,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3912,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3879,
											"end": 3996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3915,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3996,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3879,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4033,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4086,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 4079,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4063,
											"end": 4080,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4061,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4087,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4090,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 4177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 4177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 4177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 4177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 4177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 4177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4260,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4183,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4388,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4266,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4339,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4319,
											"end": 4382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4382,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4319,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4533,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4394,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4465,
											"end": 4485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4521,
											"end": 4526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4494,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4527,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4494,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4643,
											"end": 4649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4702,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 4686,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4671,
											"end": 4703,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4706,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4706,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4668,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4852,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4857,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4903,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4987,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4870,
											"end": 4987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4906,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4906,
											"end": 4985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4985,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4906,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4987,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4870,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5064,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5019,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5083,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5019,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5083,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5083,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 5093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5203,
											"end": 5210,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5183,
											"end": 5192,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5158,
											"end": 5211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5211,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5331,
											"end": 5338,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5286,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5286,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5231,
											"end": 5349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 5356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5484,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5362,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5435,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5453,
											"end": 5458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5435,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5435,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5435,
											"end": 5459,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5435,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5460,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5415,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5415,
											"end": 5478,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5415,
											"end": 5478,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5415,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5581,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5617,
											"end": 5622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5590,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5623,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5590,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5964,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5635,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5694,
											"end": 5700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 5729,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5741,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5746,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5749,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 5749,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5939,
											"end": 5946,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5894,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5884,
											"end": 5947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5884,
											"end": 5947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5970,
											"end": 6087,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5970,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6077,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6081,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6210,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6093,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6204,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6333,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6216,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 7050,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6339,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6403,
											"end": 6408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6416,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6469,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6470,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6559,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6560,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 6545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6535,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6517,
											"end": 6546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6561,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6489,
											"end": 6562,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6479,
											"end": 6647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6566,
											"end": 6645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6647,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6479,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6697,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6698,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6737,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6764,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6746,
											"end": 6771,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6746,
											"end": 6771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6812,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6813,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6897,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6780,
											"end": 6897,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6816,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 6816,
											"end": 6895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6895,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6816,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6897,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6780,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6956,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6957,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6938,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6920,
											"end": 6958,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6959,
											"name": "SGT",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 7043,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7043,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6962,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6962,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6962,
											"end": 7041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6962,
											"end": 7041,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6962,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 7043,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 7050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 7050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 7050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 7050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 7050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 7050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6339,
											"end": 7050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7214,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7056,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7129,
											"end": 7140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7203,
											"end": 7207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7198,
											"end": 7201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7179,
											"end": 7208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7179,
											"end": 7208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7214,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7366,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7220,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7310,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7324,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 7358,
											"end": 7359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7347,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7356,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7333,
											"end": 7360,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7474,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7372,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7460,
											"end": 7467,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7448,
											"end": 7453,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7468,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7796,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7502,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7662,
											"end": 7668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7657,
											"end": 7660,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7609,
											"end": 7669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7669,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7609,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7669,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7723,
											"end": 7726,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7716,
											"end": 7721,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7679,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7735,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7679,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7782,
											"end": 7788,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7760,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7789,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7760,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7751,
											"end": 7790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7744,
											"end": 7790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7744,
											"end": 7790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7796,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7924,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7802,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7854,
											"end": 7859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7914,
											"end": 7916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 7917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 7903,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7879,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 7879,
											"end": 7918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7879,
											"end": 7918,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7879,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7924,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7802,
											"end": 7924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8038,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7930,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8025,
											"end": 8030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8007,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8031,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8007,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8790,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8084,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8234,
											"end": 8237,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8230,
											"end": 8244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8378,
											"end": 8382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8376,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8367,
											"end": 8383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8365,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 8323,
											"end": 8384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8384,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8323,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8431,
											"end": 8434,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8429,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8435,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8412,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8457,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8544,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8457,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8449,
											"end": 8544,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8449,
											"end": 8544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8671,
											"end": 8675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8669,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8653,
											"end": 8658,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8627,
											"end": 8677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8677,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8627,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8690,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8747,
											"end": 8751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8742,
											"end": 8745,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 8752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8690,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8690,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8690,
											"end": 8753,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8690,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8780,
											"end": 8784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8790,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 9169,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 8796,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 8943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8979,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8966,
											"end": 8975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 8980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 8980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9026,
											"end": 9035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9020,
											"end": 9024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 9037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9157,
											"end": 9161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9148,
											"end": 9154,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 9054,
											"end": 9162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9162,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9054,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 9169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 9169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 9169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 9169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 9169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9343,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 9175,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9258,
											"end": 9269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9287,
											"end": 9290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9280,
											"end": 9299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9336,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9327,
											"end": 9330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9323,
											"end": 9337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9685,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 9371,
											"end": 9685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9467,
											"end": 9470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9549,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 9488,
											"end": 9558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9558,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 9488,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9481,
											"end": 9558,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9481,
											"end": 9558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9568,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9617,
											"end": 9623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9612,
											"end": 9615,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9568,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 9568,
											"end": 9624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9568,
											"end": 9624,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9568,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9649,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 9671,
											"end": 9677,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9649,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 9649,
											"end": 9678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9649,
											"end": 9678,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 9649,
											"end": 9678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9647,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9685,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9691,
											"end": 9809,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 9691,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 9796,
											"end": 9801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 9778,
											"end": 9802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9802,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 9778,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9691,
											"end": 9809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9691,
											"end": 9809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9691,
											"end": 9809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9992,
											"end": 9996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10030,
											"end": 10032,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10019,
											"end": 10028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10007,
											"end": 10033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10007,
											"end": 10033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10079,
											"end": 10088,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10069,
											"end": 10089,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10065,
											"end": 10066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10050,
											"end": 10067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10043,
											"end": 10090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10107,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10188,
											"end": 10192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10179,
											"end": 10185,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10177,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10107,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10107,
											"end": 10193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10107,
											"end": 10193,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10107,
											"end": 10193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10099,
											"end": 10193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10099,
											"end": 10193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10271,
											"end": 10273,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10260,
											"end": 10269,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10253,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10203,
											"end": 10275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10275,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10203,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10353,
											"end": 10355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10342,
											"end": 10351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10356,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10329,
											"end": 10335,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10285,
											"end": 10357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10357,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10285,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 10364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"src/RiscZeroVerifierEmergencyStop.sol",
								"src/interfaces/IRiscZeroVerifier.sol",
								"src/utils/Util.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"estop((bytes,bytes32))": "94142cc6",
							"estop()": "e5caa16a",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"verifier()": "2b7ac3f3",
							"verify(bytes,bytes32,bytes32)": "ab750e75",
							"verifyIntegrity((bytes,bytes32))": "1599ead5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofOfExploit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"name\":\"estop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"name\":\"verifyIntegrity\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"},\"verify(bytes,bytes32,bytes32)\":{\"details\":\"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).\",\"params\":{\"imageId\":\"The identifier for the guest program.\",\"journalDigest\":\"The SHA-256 digest of the journal bytes.\",\"seal\":\"The encoded cryptographic proof (i.e. SNARK).\"}},\"verifyIntegrity((bytes,bytes32))\":{\"params\":{\"receipt\":\"The receipt to be verified.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidProofOfExploit()\":[{\"notice\":\"Error raised when calling estop with a receipt that cannot be verified as proof of an exploit on the verifier contract.\"}]},\"kind\":\"user\",\"methods\":{\"estop((bytes,bytes32))\":{\"notice\":\"Initiate an emergency stop of the verifier contract, via the \\\"circuit breaker\\\".         This method can be called by anyone who can produce a verifying proof for a receipt         claim digest of all zeroes. The existence of such a proof demonstrates a critical         vulnerability in the proof system.         When stopped, all calls to the verify and verifyIntegrity functions will revert.         Once stopped, this contract can never be restarted.\"},\"estop()\":{\"notice\":\"Initiate an emergency stop of the verifier contract.         Can only be used by the guardian address assigned as owner of this contract.         When stopped, all calls to the verify and verifyIntegrity functions will revert.         Once stopped, this contract can never be restarted.\"},\"verify(bytes,bytes32,bytes32)\":{\"notice\":\"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure.\"},\"verifyIntegrity((bytes,bytes32))\":{\"notice\":\"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure.\"}},\"notice\":\"Wrapper for an IRiscZeroVerifier contract, providing emergency stop function.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RiscZeroVerifierEmergencyStop.sol\":\"RiscZeroVerifierEmergencyStop\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"src/RiscZeroVerifierEmergencyStop.sol\":{\"keccak256\":\"0x04f3d698d24e21ee0791243d481b9d6dab642d9722ed44b91ca9a121e8be7a4d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4225b5cd648f324e7dfd797ef770d8e3a8859739ec7d2da6c01de3885e6eedcf\",\"dweb:/ipfs/QmaLXcP6a9yXp6yc8qebb7VZV1ZjavbDwGFDUUmUVze8fK\"]},\"src/interfaces/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x282a04fa92a55f04092aa15c87ee72b87f959fcfc853ed2a89be6758d7c2c5f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52c74381a5d81715ce1b780c996a0a44d893077ddc775eaf62c091599a9ac910\",\"dweb:/ipfs/QmbDyuhPsaBDTaiQo6xN1qkeLv1fSY3PSHUQ5ogfQnVC4g\"]},\"src/utils/Util.sol\":{\"keccak256\":\"0xb0814d490813de58b9619123bd0c475accb564b59b558b9099762b1a075f81f7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4f8222693e4cd1566767add3918293a37ae32d22af34aab2f2aa4a7742c9d3c2\",\"dweb:/ipfs/QmdtXUgB8TSo5R6fV7592EYMAZ9KpoNamvYMP78pt5nnEf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/RiscZeroVerifierEmergencyStop.sol:RiscZeroVerifierEmergencyStop",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "src/RiscZeroVerifierEmergencyStop.sol:RiscZeroVerifierEmergencyStop",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 272,
								"contract": "src/RiscZeroVerifierEmergencyStop.sol:RiscZeroVerifierEmergencyStop",
								"label": "_paused",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"errors": {
							"InvalidProofOfExploit()": [
								{
									"notice": "Error raised when calling estop with a receipt that cannot be verified as proof of an exploit on the verifier contract."
								}
							]
						},
						"kind": "user",
						"methods": {
							"estop((bytes,bytes32))": {
								"notice": "Initiate an emergency stop of the verifier contract, via the \"circuit breaker\".         This method can be called by anyone who can produce a verifying proof for a receipt         claim digest of all zeroes. The existence of such a proof demonstrates a critical         vulnerability in the proof system.         When stopped, all calls to the verify and verifyIntegrity functions will revert.         Once stopped, this contract can never be restarted."
							},
							"estop()": {
								"notice": "Initiate an emergency stop of the verifier contract.         Can only be used by the guardian address assigned as owner of this contract.         When stopped, all calls to the verify and verifyIntegrity functions will revert.         Once stopped, this contract can never be restarted."
							},
							"verify(bytes,bytes32,bytes32)": {
								"notice": "Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure."
							},
							"verifyIntegrity((bytes,bytes32))": {
								"notice": "Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure."
							}
						},
						"notice": "Wrapper for an IRiscZeroVerifier contract, providing emergency stop function.",
						"version": 1
					}
				}
			},
			"src/interfaces/IRiscZeroVerifier.sol": {
				"IRiscZeroVerifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "seal",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "imageId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "journalDigest",
									"type": "bytes32"
								}
							],
							"name": "verify",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "seal",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "claimDigest",
											"type": "bytes32"
										}
									],
									"internalType": "struct Receipt",
									"name": "receipt",
									"type": "tuple"
								}
							],
							"name": "verifyIntegrity",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"verify(bytes,bytes32,bytes32)": {
								"details": "This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).",
								"params": {
									"imageId": "The identifier for the guest program.",
									"journalDigest": "The SHA-256 digest of the journal bytes.",
									"seal": "The encoded cryptographic proof (i.e. SNARK)."
								}
							},
							"verifyIntegrity((bytes,bytes32))": {
								"params": {
									"receipt": "The receipt to be verified."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verify(bytes,bytes32,bytes32)": "ab750e75",
							"verifyIntegrity((bytes,bytes32))": "1599ead5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"name\":\"verifyIntegrity\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verify(bytes,bytes32,bytes32)\":{\"details\":\"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).\",\"params\":{\"imageId\":\"The identifier for the guest program.\",\"journalDigest\":\"The SHA-256 digest of the journal bytes.\",\"seal\":\"The encoded cryptographic proof (i.e. SNARK).\"}},\"verifyIntegrity((bytes,bytes32))\":{\"params\":{\"receipt\":\"The receipt to be verified.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verify(bytes,bytes32,bytes32)\":{\"notice\":\"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure.\"},\"verifyIntegrity((bytes,bytes32))\":{\"notice\":\"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure.\"}},\"notice\":\"Verifier interface for RISC Zero receipts of execution.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRiscZeroVerifier.sol\":\"IRiscZeroVerifier\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x282a04fa92a55f04092aa15c87ee72b87f959fcfc853ed2a89be6758d7c2c5f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52c74381a5d81715ce1b780c996a0a44d893077ddc775eaf62c091599a9ac910\",\"dweb:/ipfs/QmbDyuhPsaBDTaiQo6xN1qkeLv1fSY3PSHUQ5ogfQnVC4g\"]},\"src/utils/Util.sol\":{\"keccak256\":\"0xb0814d490813de58b9619123bd0c475accb564b59b558b9099762b1a075f81f7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4f8222693e4cd1566767add3918293a37ae32d22af34aab2f2aa4a7742c9d3c2\",\"dweb:/ipfs/QmdtXUgB8TSo5R6fV7592EYMAZ9KpoNamvYMP78pt5nnEf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"verify(bytes,bytes32,bytes32)": {
								"notice": "Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure."
							},
							"verifyIntegrity((bytes,bytes32))": {
								"notice": "Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure."
							}
						},
						"notice": "Verifier interface for RISC Zero receipts of execution.",
						"version": 1
					}
				},
				"OutputLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/interfaces/IRiscZeroVerifier.sol\":8006:8488  library OutputLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/interfaces/IRiscZeroVerifier.sol\":8006:8488  library OutputLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ff1832ccbc3770b9a7fb18d220bfeaaf888afd7008735a9ba211b3ea99c7357f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ff1832ccbc3770b9a7fb18d220bfeaaf888afd7008735a9ba211b3ea99c7357f64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT XOR ORIGIN 0xCC 0xBC CALLDATACOPY PUSH17 0xB9A7FB18D220BFEAAF888AFD7008735A9B LOG2 GT 0xB3 0xEA SWAP10 0xC7 CALLDATALOAD PUSH32 0x64736F6C63430008140033000000000000000000000000000000000000000000 ",
							"sourceMap": "8006:482:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ff1832ccbc3770b9a7fb18d220bfeaaf888afd7008735a9ba211b3ea99c7357f64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT XOR ORIGIN 0xCC 0xBC CALLDATACOPY PUSH17 0xB9A7FB18D220BFEAAF888AFD7008735A9B LOG2 GT 0xB3 0xEA SWAP10 0xC7 CALLDATALOAD PUSH32 0x64736F6C63430008140033000000000000000000000000000000000000000000 ",
							"sourceMap": "8006:482:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"digest(struct Output memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8006,
									"end": 8488,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff1832ccbc3770b9a7fb18d220bfeaaf888afd7008735a9ba211b3ea99c7357f64736f6c63430008140033",
									".code": [
										{
											"begin": 8006,
											"end": 8488,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8488,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"src/RiscZeroVerifierEmergencyStop.sol",
								"src/interfaces/IRiscZeroVerifier.sol",
								"src/utils/Util.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRiscZeroVerifier.sol\":\"OutputLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x282a04fa92a55f04092aa15c87ee72b87f959fcfc853ed2a89be6758d7c2c5f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52c74381a5d81715ce1b780c996a0a44d893077ddc775eaf62c091599a9ac910\",\"dweb:/ipfs/QmbDyuhPsaBDTaiQo6xN1qkeLv1fSY3PSHUQ5ogfQnVC4g\"]},\"src/utils/Util.sol\":{\"keccak256\":\"0xb0814d490813de58b9619123bd0c475accb564b59b558b9099762b1a075f81f7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4f8222693e4cd1566767add3918293a37ae32d22af34aab2f2aa4a7742c9d3c2\",\"dweb:/ipfs/QmdtXUgB8TSo5R6fV7592EYMAZ9KpoNamvYMP78pt5nnEf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReceiptClaimLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/interfaces/IRiscZeroVerifier.sol\":2368:4498  library ReceiptClaimLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/interfaces/IRiscZeroVerifier.sol\":2368:4498  library ReceiptClaimLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122081c3564f8d7b942511389e215ff2e6175de5a63a6bd14e958c1538330edb088d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081c3564f8d7b942511389e215ff2e6175de5a63a6bd14e958c1538330edb088d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xC3 JUMP 0x4F DUP14 PUSH28 0x942511389E215FF2E6175DE5A63A6BD14E958C1538330EDB088D6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "2368:2130:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081c3564f8d7b942511389e215ff2e6175de5a63a6bd14e958c1538330edb088d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xC3 JUMP 0x4F DUP14 PUSH28 0x942511389E215FF2E6175DE5A63A6BD14E958C1538330EDB088D6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "2368:2130:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"digest(struct ReceiptClaim memory)": "infinite",
								"ok(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 4498,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081c3564f8d7b942511389e215ff2e6175de5a63a6bd14e958c1538330edb088d64736f6c63430008140033",
									".code": [
										{
											"begin": 2368,
											"end": 4498,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 4498,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"src/RiscZeroVerifierEmergencyStop.sol",
								"src/interfaces/IRiscZeroVerifier.sol",
								"src/utils/Util.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRiscZeroVerifier.sol\":\"ReceiptClaimLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x282a04fa92a55f04092aa15c87ee72b87f959fcfc853ed2a89be6758d7c2c5f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52c74381a5d81715ce1b780c996a0a44d893077ddc775eaf62c091599a9ac910\",\"dweb:/ipfs/QmbDyuhPsaBDTaiQo6xN1qkeLv1fSY3PSHUQ5ogfQnVC4g\"]},\"src/utils/Util.sol\":{\"keccak256\":\"0xb0814d490813de58b9619123bd0c475accb564b59b558b9099762b1a075f81f7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4f8222693e4cd1566767add3918293a37ae32d22af34aab2f2aa4a7742c9d3c2\",\"dweb:/ipfs/QmdtXUgB8TSo5R6fV7592EYMAZ9KpoNamvYMP78pt5nnEf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SystemStateLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/interfaces/IRiscZeroVerifier.sol\":5095:5624  library SystemStateLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/interfaces/IRiscZeroVerifier.sol\":5095:5624  library SystemStateLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208b135b60c1f11556b2f3041c55cfe9af78ca4e4e08198f770ba17f642ae5289464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208b135b60c1f11556b2f3041c55cfe9af78ca4e4e08198f770ba17f642ae5289464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 SGT JUMPDEST PUSH1 0xC1 CALL ISZERO JUMP 0xB2 RETURN DIV SHR SSTORE 0xCF 0xE9 0xAF PUSH25 0xCA4E4E08198F770BA17F642AE5289464736F6C634300081400 CALLER ",
							"sourceMap": "5095:529:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208b135b60c1f11556b2f3041c55cfe9af78ca4e4e08198f770ba17f642ae5289464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 SGT JUMPDEST PUSH1 0xC1 CALL ISZERO JUMP 0xB2 RETURN DIV SHR SSTORE 0xCF 0xE9 0xAF PUSH25 0xCA4E4E08198F770BA17F642AE5289464736F6C634300081400 CALLER ",
							"sourceMap": "5095:529:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"digest(struct SystemState memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5095,
									"end": 5624,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b135b60c1f11556b2f3041c55cfe9af78ca4e4e08198f770ba17f642ae5289464736f6c63430008140033",
									".code": [
										{
											"begin": 5095,
											"end": 5624,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5624,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"src/RiscZeroVerifierEmergencyStop.sol",
								"src/interfaces/IRiscZeroVerifier.sol",
								"src/utils/Util.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRiscZeroVerifier.sol\":\"SystemStateLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x282a04fa92a55f04092aa15c87ee72b87f959fcfc853ed2a89be6758d7c2c5f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52c74381a5d81715ce1b780c996a0a44d893077ddc775eaf62c091599a9ac910\",\"dweb:/ipfs/QmbDyuhPsaBDTaiQo6xN1qkeLv1fSY3PSHUQ5ogfQnVC4g\"]},\"src/utils/Util.sol\":{\"keccak256\":\"0xb0814d490813de58b9619123bd0c475accb564b59b558b9099762b1a075f81f7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4f8222693e4cd1566767add3918293a37ae32d22af34aab2f2aa4a7742c9d3c2\",\"dweb:/ipfs/QmdtXUgB8TSo5R6fV7592EYMAZ9KpoNamvYMP78pt5nnEf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							263
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 264,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 263,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 263,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								263
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
					"exportedSymbols": {
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 148,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "Ownable",
										"nameLocations": [
											"1018:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1018:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "1018:7:1"
								}
							],
							"canonicalName": "Ownable2Step",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "173:810:1",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								147,
								263
							],
							"name": "Ownable2Step",
							"nameLocation": "1002:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "1048:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "1032:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 162,
									"name": "OwnershipTransferStarted",
									"nameLocation": "1074:24:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1115:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1099:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1146:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1130:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:57:1"
									},
									"src": "1068:88:1"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1294:37:1",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "1311:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "1304:20:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1162:65:1",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "1241:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1285:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:9:1"
									},
									"scope": 233,
									"src": "1232:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										126
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1728:99:1",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1738:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1754:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1738:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1738:24:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1802:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1802:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1811:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1777:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "EmitStatement",
												"src": "1772:48:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1337:307:1",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
									},
									"functionSelector": "f2fde38b",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nameLocations": [
													"1718:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1718:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1718:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1658:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1709:8:1"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1684:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1676:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:18:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:1"
									},
									"scope": 233,
									"src": "1649:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										146
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2083:81:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2093:20:1",
													"subExpression": {
														"id": 198,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2100:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2093:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2148:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 201,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2123:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2Step_$233_$",
																"typeString": "type(contract super Ownable2Step)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:18:1",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 146,
														"src": "2123:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "2123:34:1"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1833:173:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2020:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 196,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2074:8:1"
									},
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2047:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2039:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:18:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:1"
									},
									"scope": 233,
									"src": "2011:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2286:187:1",
										"statements": [
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2304:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "2296:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2296:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 214,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "2313:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2296:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 217,
															"name": "pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2339:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2339:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 219,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2357:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2339:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "IfStatement",
												"src": "2335:96:1",
												"trueBody": {
													"id": 225,
													"nodeType": "Block",
													"src": "2365:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 222,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2413:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 221,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "2386:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2386:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 224,
															"nodeType": "RevertStatement",
															"src": "2379:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 227,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															208
														],
														"referencedDeclaration": 208,
														"src": "2440:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2440:26:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "2170:69:1",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "2253:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:0:1"
									},
									"scope": 233,
									"src": "2244:229:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 234,
							"src": "984:1491:1",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								162
							]
						}
					],
					"src": "107:2369:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							263
						]
					},
					"id": 264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 241,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 240,
												"id": 243,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 263,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 250,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 249,
												"id": 252,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 263,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 258,
												"id": 260,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 263,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 264,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							263
						],
						"Pausable": [
							371
						]
					},
					"id": 372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 372,
							"sourceUnit": 264,
							"src": "128:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 263,
										"src": "136:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 269,
										"name": "Context",
										"nameLocations": [
											"645:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 263,
										"src": "645:7:3"
									},
									"id": 270,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 268,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 371,
							"linearizedBaseContracts": [
								371,
								263
							],
							"name": "Pausable",
							"nameLocation": "633:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 272,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 371,
									"src": "659:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 271,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 277,
									"name": "Paused",
									"nameLocation": "770:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "777:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:3"
									},
									"src": "764:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 282,
									"name": "Unpaused",
									"nameLocation": "881:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "890:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:3"
									},
									"src": "875:32:3"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:3",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 285,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:3"
									},
									"src": "994:22:3"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:3",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 288,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:3"
									},
									"src": "1107:22:3"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "1340:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 291,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "1350:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:3"
											},
											{
												"id": 294,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:3"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 296,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:3"
									},
									"src": "1315:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1587:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 299,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1597:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:3"
											},
											{
												"id": 302,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:3"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 304,
									"name": "whenPaused",
									"nameLocation": "1574:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:3"
									},
									"src": "1565:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1779:31:3",
										"statements": [
											{
												"expression": {
													"id": 310,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 272,
													"src": "1796:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 309,
												"id": 311,
												"nodeType": "Return",
												"src": "1789:14:3"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:3"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1773:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:3"
									},
									"scope": 371,
									"src": "1726:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "1929:77:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 317,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1943:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "1939:61:3",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "1953:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 319,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1974:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 321,
															"nodeType": "RevertStatement",
															"src": "1967:22:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:3"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:3"
									},
									"scope": 371,
									"src": "1878:128:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2126:78:3",
										"statements": [
											{
												"condition": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 329,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2141:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "IfStatement",
												"src": "2136:62:3",
												"trueBody": {
													"id": 335,
													"nodeType": "Block",
													"src": "2151:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 332,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "2172:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 334,
															"nodeType": "RevertStatement",
															"src": "2165:22:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:3"
									},
									"scope": 371,
									"src": "2078:126:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2388:66:3",
										"statements": [
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2398:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 349,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "2434:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2427:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "EmitStatement",
												"src": "2422:25:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 296,
												"src": "2374:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:3"
									},
									"scope": 371,
									"src": "2339:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2634:69:3",
										"statements": [
											{
												"expression": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 360,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2644:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 365,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "2683:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 364,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2674:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "EmitStatement",
												"src": "2669:27:3"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 357,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 304,
												"src": "2623:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:3"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:3"
									},
									"scope": 371,
									"src": "2586:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 372,
							"src": "615:2090:3",
							"usedErrors": [
								285,
								288
							],
							"usedEvents": [
								277,
								282
							]
						}
					],
					"src": "102:2604:3"
				},
				"id": 3
			},
			"src/RiscZeroVerifierEmergencyStop.sol": {
				"ast": {
					"absolutePath": "src/RiscZeroVerifierEmergencyStop.sol",
					"exportedSymbols": {
						"IRiscZeroVerifier": [
							728
						],
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						],
						"Pausable": [
							371
						],
						"Receipt": [
							496
						],
						"RiscZeroVerifierEmergencyStop": [
							486
						]
					},
					"id": 487,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 373,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "635:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 148,
							"src": "660:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 374,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "668:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"file": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"id": 377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 234,
							"src": "728:77:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 376,
										"name": "Ownable2Step",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 233,
										"src": "736:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 372,
							"src": "806:68:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 378,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 371,
										"src": "814:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IRiscZeroVerifier.sol",
							"file": "./interfaces/IRiscZeroVerifier.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 729,
							"src": "876:78:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 380,
										"name": "IRiscZeroVerifier",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 728,
										"src": "884:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 381,
										"name": "Receipt",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 496,
										"src": "903:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "IRiscZeroVerifier",
										"nameLocations": [
											"1092:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "1092:17:4"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "1092:17:4"
								},
								{
									"baseName": {
										"id": 386,
										"name": "Ownable2Step",
										"nameLocations": [
											"1115:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 233,
										"src": "1115:12:4"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "1115:12:4"
								},
								{
									"baseName": {
										"id": 388,
										"name": "Pausable",
										"nameLocations": [
											"1133:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 371,
										"src": "1133:8:4"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:8:4"
								}
							],
							"canonicalName": "RiscZeroVerifierEmergencyStop",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 383,
								"nodeType": "StructuredDocumentation",
								"src": "956:90:4",
								"text": "@notice Wrapper for an IRiscZeroVerifier contract, providing emergency stop function."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486,
								371,
								233,
								147,
								263,
								728
							],
							"name": "RiscZeroVerifierEmergencyStop",
							"nameLocation": "1055:29:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2b7ac3f3",
									"id": 392,
									"mutability": "immutable",
									"name": "verifier",
									"nameLocation": "1183:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "1148:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
										"typeString": "contract IRiscZeroVerifier"
									},
									"typeName": {
										"id": 391,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 390,
											"name": "IRiscZeroVerifier",
											"nameLocations": [
												"1148:17:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 728,
											"src": "1148:17:4"
										},
										"referencedDeclaration": 728,
										"src": "1148:17:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
											"typeString": "contract IRiscZeroVerifier"
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1198:139:4",
										"text": "@notice Error raised when calling estop with a receipt that cannot be verified as proof\n of an exploit on the verifier contract."
									},
									"errorSelector": "2004afd1",
									"id": 395,
									"name": "InvalidProofOfExploit",
									"nameLocation": "1348:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1369:2:4"
									},
									"src": "1342:30:4"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1477:37:4",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "verifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1487:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
															"typeString": "contract IRiscZeroVerifier"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_verifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1498:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
															"typeString": "contract IRiscZeroVerifier"
														}
													},
													"src": "1487:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
														"typeString": "contract IRiscZeroVerifier"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1487:20:4"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 403,
													"name": "guardian",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "1467:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 404,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 402,
												"name": "Ownable",
												"nameLocations": [
													"1459:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1459:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1459:17:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_verifier",
												"nameLocation": "1417:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1399:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
													"typeString": "contract IRiscZeroVerifier"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "IRiscZeroVerifier",
														"nameLocations": [
															"1399:17:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 728,
														"src": "1399:17:4"
													},
													"referencedDeclaration": 728,
													"src": "1399:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
														"typeString": "contract IRiscZeroVerifier"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "guardian",
												"nameLocation": "1444:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1436:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:69:4"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:4"
									},
									"scope": 486,
									"src": "1378:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "1891:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 417,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1901:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "1901:8:4"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1520:330:4",
										"text": "@notice Initiate an emergency stop of the verifier contract.\n         Can only be used by the guardian address assigned as owner of this contract.\n         When stopped, all calls to the verify and verifyIntegrity functions will revert.\n         Once stopped, this contract can never be restarted."
									},
									"functionSelector": "e5caa16a",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 415,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 414,
												"name": "onlyOwner",
												"nameLocations": [
													"1881:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1881:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1881:9:4"
										}
									],
									"name": "estop",
									"nameLocation": "1864:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:2:4"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:0:4"
									},
									"scope": 486,
									"src": "1855:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "2490:233:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 428,
															"name": "receipt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "2504:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
																"typeString": "struct Receipt calldata"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2512:11:4",
														"memberName": "claimDigest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 495,
														"src": "2504:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2535:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2527:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 430,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2527:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2527:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2504:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2500:94:4",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2539:55:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidProofOfExploit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "2560:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2560:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2553:30:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "receipt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "2690:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
																"typeString": "struct Receipt calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
																"typeString": "struct Receipt calldata"
															}
														],
														"id": 440,
														"name": "verifyIntegrity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2674:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Receipt_$496_calldata_ptr_$returns$__$",
															"typeString": "function (struct Receipt calldata) view"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2674:24:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 444,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2708:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "2708:8:4"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "1922:513:4",
										"text": "@notice Initiate an emergency stop of the verifier contract, via the \"circuit breaker\".\n         This method can be called by anyone who can produce a verifying proof for a receipt\n         claim digest of all zeroes. The existence of such a proof demonstrates a critical\n         vulnerability in the proof system.\n         When stopped, all calls to the verify and verifyIntegrity functions will revert.\n         Once stopped, this contract can never be restarted."
									},
									"functionSelector": "94142cc6",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estop",
									"nameLocation": "2449:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "receipt",
												"nameLocation": "2472:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "2455:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
													"typeString": "struct Receipt"
												},
												"typeName": {
													"id": 424,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 423,
														"name": "Receipt",
														"nameLocations": [
															"2455:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 496,
														"src": "2455:7:4"
													},
													"referencedDeclaration": 496,
													"src": "2455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Receipt_$496_storage_ptr",
														"typeString": "struct Receipt"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:26:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2490:0:4"
									},
									"scope": 486,
									"src": "2440:283:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "2902:118:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "seal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2984:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 464,
															"name": "imageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "2990:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 465,
															"name": "journalDigest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "2999:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 460,
															"name": "verifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2968:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
																"typeString": "contract IRiscZeroVerifier"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2977:6:4",
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2968:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes memory,bytes32,bytes32) view external"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "2968:45:4"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "2729:33:4",
										"text": "@inheritdoc IRiscZeroVerifier"
									},
									"functionSelector": "ab750e75",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "whenNotPaused",
												"nameLocations": [
													"2888:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 296,
												"src": "2888:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2888:13:4"
										}
									],
									"name": "verify",
									"nameLocation": "2776:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "seal",
												"nameLocation": "2807:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2792:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "imageId",
												"nameLocation": "2829:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2821:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 452,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "journalDigest",
												"nameLocation": "2854:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2846:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 454,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:91:4"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2902:0:4"
									},
									"scope": 486,
									"src": "2767:253:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										727
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "3155:106:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "receipt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3246:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
																"typeString": "struct Receipt calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
																"typeString": "struct Receipt calldata"
															}
														],
														"expression": {
															"id": 478,
															"name": "verifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3221:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRiscZeroVerifier_$728",
																"typeString": "contract IRiscZeroVerifier"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3230:15:4",
														"memberName": "verifyIntegrity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 727,
														"src": "3221:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_struct$_Receipt_$496_memory_ptr_$returns$__$",
															"typeString": "function (struct Receipt memory) view external"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3221:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "3221:33:4"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "3026:33:4",
										"text": "@inheritdoc IRiscZeroVerifier"
									},
									"functionSelector": "1599ead5",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 475,
												"name": "whenNotPaused",
												"nameLocations": [
													"3141:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 296,
												"src": "3141:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3141:13:4"
										}
									],
									"name": "verifyIntegrity",
									"nameLocation": "3073:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "receipt",
												"nameLocation": "3115:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3098:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
													"typeString": "struct Receipt"
												},
												"typeName": {
													"id": 472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 471,
														"name": "Receipt",
														"nameLocations": [
															"3098:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 496,
														"src": "3098:7:4"
													},
													"referencedDeclaration": 496,
													"src": "3098:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Receipt_$496_storage_ptr",
														"typeString": "struct Receipt"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3088:40:4"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3155:0:4"
									},
									"scope": 486,
									"src": "3064:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 487,
							"src": "1046:2217:4",
							"usedErrors": [
								13,
								18,
								285,
								288,
								395
							],
							"usedEvents": [
								24,
								162,
								277,
								282
							]
						}
					],
					"src": "635:2629:4"
				},
				"id": 4
			},
			"src/interfaces/IRiscZeroVerifier.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IRiscZeroVerifier.sol",
					"exportedSymbols": {
						"ExitCode": [
							661
						],
						"IRiscZeroVerifier": [
							728
						],
						"Output": [
							674
						],
						"OutputLib": [
							706
						],
						"Receipt": [
							496
						],
						"ReceiptClaim": [
							514
						],
						"ReceiptClaimLib": [
							612
						],
						"SystemExitCode": [
							666
						],
						"SystemState": [
							620
						],
						"SystemStateLib": [
							654
						],
						"VerificationFailed": [
							709
						],
						"reverseByteOrderUint32": [
							870
						]
					},
					"id": 729,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "635:23:5"
						},
						{
							"absolutePath": "src/utils/Util.sol",
							"file": "../utils/Util.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 729,
							"sourceUnit": 899,
							"src": "660:57:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "reverseByteOrderUint32",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 870,
										"src": "668:22:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "Receipt",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "719:604:5",
								"text": "@notice A receipt attesting to the execution of a guest program.\n @dev A receipt contains two parts: a seal and a claim. The seal is a zero-knowledge proof\n attesting to knowledge of a zkVM execution resulting in the claim. The claim is a set of public\n outputs for the execution. Crucially, the claim includes the journal and the image ID. The\n image ID identifies the program that was executed, and the journal is the public data written\n by the program. Note that this struct only contains the claim digest, as can be obtained with\n the `digest()` function on `ReceiptClaimLib`."
							},
							"id": 496,
							"members": [
								{
									"constant": false,
									"id": 493,
									"mutability": "mutable",
									"name": "seal",
									"nameLocation": "1350:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 496,
									"src": "1344:10:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 492,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1344:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "claimDigest",
									"nameLocation": "1368:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 496,
									"src": "1360:19:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 494,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1360:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Receipt",
							"nameLocation": "1330:7:5",
							"nodeType": "StructDefinition",
							"scope": 729,
							"src": "1323:59:5",
							"visibility": "public"
						},
						{
							"canonicalName": "ReceiptClaim",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "1384:387:5",
								"text": "@notice Public claims about a zkVM guest execution, such as the journal committed to by the guest.\n @dev Also includes important information such as the exit code and the starting and ending system\n state (i.e. the state of memory). `ReceiptClaim` is a \"Merkle-ized struct\" supporting\n partial openings of the underlying fields from a hash commitment to the full structure."
							},
							"id": 514,
							"members": [
								{
									"constant": false,
									"id": 500,
									"mutability": "mutable",
									"name": "preStateDigest",
									"nameLocation": "1880:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1872:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 499,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1872:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 503,
									"mutability": "mutable",
									"name": "postStateDigest",
									"nameLocation": "1986:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1978:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 502,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1978:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 507,
									"mutability": "mutable",
									"name": "exitCode",
									"nameLocation": "2065:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "2056:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_ExitCode_$661_storage_ptr",
										"typeString": "struct ExitCode"
									},
									"typeName": {
										"id": 506,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 505,
											"name": "ExitCode",
											"nameLocations": [
												"2056:8:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 661,
											"src": "2056:8:5"
										},
										"referencedDeclaration": 661,
										"src": "2056:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ExitCode_$661_storage_ptr",
											"typeString": "struct ExitCode"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 510,
									"mutability": "mutable",
									"name": "input",
									"nameLocation": "2219:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "2211:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 509,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2211:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 513,
									"mutability": "mutable",
									"name": "output",
									"nameLocation": "2357:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "2349:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 512,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2349:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ReceiptClaim",
							"nameLocation": "1778:12:5",
							"nodeType": "StructDefinition",
							"scope": 729,
							"src": "1771:595:5",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReceiptClaimLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "ReceiptClaimLib",
							"nameLocation": "2376:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 518,
									"libraryName": {
										"id": 515,
										"name": "OutputLib",
										"nameLocations": [
											"2404:9:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 706,
										"src": "2404:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "2398:27:5",
									"typeName": {
										"id": 517,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 516,
											"name": "Output",
											"nameLocations": [
												"2418:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 674,
											"src": "2418:6:5"
										},
										"referencedDeclaration": 674,
										"src": "2418:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Output_$674_storage_ptr",
											"typeString": "struct Output"
										}
									}
								},
								{
									"global": false,
									"id": 522,
									"libraryName": {
										"id": 519,
										"name": "SystemStateLib",
										"nameLocations": [
											"2436:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 654,
										"src": "2436:14:5"
									},
									"nodeType": "UsingForDirective",
									"src": "2430:37:5",
									"typeName": {
										"id": 521,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 520,
											"name": "SystemState",
											"nameLocations": [
												"2455:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 620,
											"src": "2455:11:5"
										},
										"referencedDeclaration": 620,
										"src": "2455:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SystemState_$620_storage_ptr",
											"typeString": "struct SystemState"
										}
									}
								},
								{
									"constant": true,
									"id": 527,
									"mutability": "constant",
									"name": "TAG_DIGEST",
									"nameLocation": "2490:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2473:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 523,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "72697363302e52656365697074436c61696d",
												"id": 525,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2510:20:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_d53e8eeb3866ee0349a31615cd8137f490367f45c2bbb32aac2779510ebff089",
													"typeString": "literal_string \"risc0.ReceiptClaim\""
												},
												"value": "risc0.ReceiptClaim"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_d53e8eeb3866ee0349a31615cd8137f490367f45c2bbb32aac2779510ebff089",
													"typeString": "literal_string \"risc0.ReceiptClaim\""
												}
											],
											"id": 524,
											"name": "sha256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967274,
											"src": "2503:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 526,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2503:28:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 530,
									"mutability": "constant",
									"name": "SYSTEM_STATE_ZERO_DIGEST",
									"nameLocation": "2719:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2702:118:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 528,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2702:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336163633237313137343138393936333430623834653561393066336566346334396432326337396534346161643832326563396333313365316562386532",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2754:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74032234001928697417723972706442396998535281042410084191249638976189322148066_by_1",
											"typeString": "int_const 7403...(69 digits omitted)...8066"
										},
										"value": "0xa3acc27117418996340b84e5a90f3ef4c49d22c79e44aad822ec9c313e1eb8e2"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "3615:269:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "imageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3674:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 543,
															"name": "SYSTEM_STATE_ZERO_DIGEST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "3699:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 545,
																		"name": "SystemExitCode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "3750:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_SystemExitCode_$666_$",
																			"typeString": "type(enum SystemExitCode)"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3765:6:5",
																	"memberName": "Halted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 663,
																	"src": "3750:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_SystemExitCode_$666",
																		"typeString": "enum SystemExitCode"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3773:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_SystemExitCode_$666",
																		"typeString": "enum SystemExitCode"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"name": "ExitCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "3741:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ExitCode_$661_storage_ptr_$",
																	"typeString": "type(struct ExitCode storage pointer)"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3741:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitCode_$661_memory_ptr",
																"typeString": "struct ExitCode memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3801:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3793:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 549,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "3793:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3793:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 554,
																			"name": "journalDigest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "3828:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 557,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3851:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3843:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 555,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3843:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3843:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 553,
																		"name": "Output",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "3821:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Output_$674_storage_ptr_$",
																			"typeString": "type(struct Output storage pointer)"
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3821:33:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Output_$674_memory_ptr",
																		"typeString": "struct Output memory"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3855:6:5",
																"memberName": "digest",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "3821:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_Output_$674_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_Output_$674_memory_ptr_$",
																	"typeString": "function (struct Output memory) pure returns (bytes32)"
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3821:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_struct$_ExitCode_$661_memory_ptr",
																"typeString": "struct ExitCode memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 541,
														"name": "ReceiptClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3644:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ReceiptClaim_$514_storage_ptr_$",
															"typeString": "type(struct ReceiptClaim storage pointer)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3644:233:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
														"typeString": "struct ReceiptClaim memory"
													}
												},
												"functionReturnParameters": 540,
												"id": 563,
												"nodeType": "Return",
												"src": "3625:252:5"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "2827:665:5",
										"text": "@notice Construct a ReceiptClaim from the given imageId and journalDigest.\n         Returned ReceiptClaim will represent a successful execution of the zkVM, running\n         the program committed by imageId and resulting in the journal specified by\n         journalDigest.\n @param imageId The identifier for the guest program.\n @param journalDigest The SHA-256 digest of the journal bytes.\n @dev Input hash and postStateDigest are set to all-zeros (i.e. no committed input, or\n      final memory state), the exit code is (Halted, 0), and there are no assumptions\n      (i.e. the receipt is unconditional)."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ok",
									"nameLocation": "3506:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "imageId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "journalDigest",
												"nameLocation": "3551:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3543:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:62:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3594:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
													"typeString": "struct ReceiptClaim"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "ReceiptClaim",
														"nameLocations": [
															"3594:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 514,
														"src": "3594:12:5"
													},
													"referencedDeclaration": 514,
													"src": "3594:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReceiptClaim_$514_storage_ptr",
														"typeString": "struct ReceiptClaim"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:21:5"
									},
									"scope": 612,
									"src": "3497:387:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "3965:531:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 576,
																	"name": "TAG_DIGEST",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "4056:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 577,
																		"name": "claim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4116:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
																			"typeString": "struct ReceiptClaim memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4122:5:5",
																	"memberName": "input",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 510,
																	"src": "4116:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 579,
																		"name": "claim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4149:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
																			"typeString": "struct ReceiptClaim memory"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4155:14:5",
																	"memberName": "preStateDigest",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 500,
																	"src": "4149:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 581,
																		"name": "claim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4191:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
																			"typeString": "struct ReceiptClaim memory"
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4197:15:5",
																	"memberName": "postStateDigest",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 503,
																	"src": "4191:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 583,
																		"name": "claim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4234:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
																			"typeString": "struct ReceiptClaim memory"
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4240:6:5",
																	"memberName": "output",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "4234:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 587,
																						"name": "claim",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 568,
																						"src": "4303:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
																							"typeString": "struct ReceiptClaim memory"
																						}
																					},
																					"id": 588,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4309:8:5",
																					"memberName": "exitCode",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 507,
																					"src": "4303:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExitCode_$661_memory_ptr",
																						"typeString": "struct ExitCode memory"
																					}
																				},
																				"id": 589,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4318:6:5",
																				"memberName": "system",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 658,
																				"src": "4303:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_SystemExitCode_$666",
																					"typeString": "enum SystemExitCode"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_enum$_SystemExitCode_$666",
																					"typeString": "enum SystemExitCode"
																				}
																			],
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4296:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 585,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4296:6:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4296:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3234",
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4329:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	"src": "4296:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 595,
																						"name": "claim",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 568,
																						"src": "4360:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
																							"typeString": "struct ReceiptClaim memory"
																						}
																					},
																					"id": 596,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4366:8:5",
																					"memberName": "exitCode",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 507,
																					"src": "4360:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ExitCode_$661_memory_ptr",
																						"typeString": "struct ExitCode memory"
																					}
																				},
																				"id": 597,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4375:4:5",
																				"memberName": "user",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 660,
																				"src": "4360:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4353:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4353:6:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4353:27:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3234",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4384:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	"src": "4353:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"hexValue": "34",
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4450:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4443:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "4443:6:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4443:9:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4456:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "4443:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"id": 574,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4018:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4022:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4018:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4018:457:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 573,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967274,
														"src": "3994:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3994:495:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 572,
												"id": 609,
												"nodeType": "Return",
												"src": "3975:514:5"
											}
										]
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "digest",
									"nameLocation": "3899:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "3926:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3906:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReceiptClaim_$514_memory_ptr",
													"typeString": "struct ReceiptClaim"
												},
												"typeName": {
													"id": 567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 566,
														"name": "ReceiptClaim",
														"nameLocations": [
															"3906:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 514,
														"src": "3906:12:5"
													},
													"referencedDeclaration": 514,
													"src": "3906:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReceiptClaim_$514_storage_ptr",
														"typeString": "struct ReceiptClaim"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:27:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3956:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 570,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:9:5"
									},
									"scope": 612,
									"src": "3890:606:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 729,
							"src": "2368:2130:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"canonicalName": "SystemState",
							"documentation": {
								"id": 613,
								"nodeType": "StructuredDocumentation",
								"src": "4500:405:5",
								"text": "@notice Commitment to the memory state and program counter (pc) of the zkVM.\n @dev The \"pre\" and \"post\" fields of the ReceiptClaim are digests of the system state at the\n      start are stop of execution. Programs are loaded into the zkVM by creating a memory image\n      of the loaded program, and creating a system state for initializing the zkVM. This is\n      known as the \"image ID\"."
							},
							"id": 620,
							"members": [
								{
									"constant": false,
									"id": 616,
									"mutability": "mutable",
									"name": "pc",
									"nameLocation": "4970:2:5",
									"nodeType": "VariableDeclaration",
									"scope": 620,
									"src": "4963:9:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 615,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "4963:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 619,
									"mutability": "mutable",
									"name": "merkle_root",
									"nameLocation": "5079:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 620,
									"src": "5071:19:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 618,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5071:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SystemState",
							"nameLocation": "4912:11:5",
							"nodeType": "StructDefinition",
							"scope": 729,
							"src": "4905:188:5",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SystemStateLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 654,
							"linearizedBaseContracts": [
								654
							],
							"name": "SystemStateLib",
							"nameLocation": "5103:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 625,
									"mutability": "constant",
									"name": "TAG_DIGEST",
									"nameLocation": "5141:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 654,
									"src": "5124:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 621,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5124:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "72697363302e53797374656d5374617465",
												"id": 623,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5161:19:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fcec3741d9aea7f898d7cca49541818572f5d4d1014235595ed67144b9abf72f",
													"typeString": "literal_string \"risc0.SystemState\""
												},
												"value": "risc0.SystemState"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_fcec3741d9aea7f898d7cca49541818572f5d4d1014235595ed67144b9abf72f",
													"typeString": "literal_string \"risc0.SystemState\""
												}
											],
											"id": 622,
											"name": "sha256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967274,
											"src": "5154:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 624,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5154:27:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "5262:360:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "TAG_DIGEST",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "5353:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 637,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "5413:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SystemState_$620_memory_ptr",
																			"typeString": "struct SystemState memory"
																		}
																	},
																	"id": 638,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5419:11:5",
																	"memberName": "merkle_root",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 619,
																	"src": "5413:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 640,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 628,
																				"src": "5503:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SystemState_$620_memory_ptr",
																					"typeString": "struct SystemState memory"
																				}
																			},
																			"id": 641,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5509:2:5",
																			"memberName": "pc",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 616,
																			"src": "5503:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 639,
																		"name": "reverseByteOrderUint32",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "5480:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint32_$",
																			"typeString": "function (uint32) pure returns (uint32)"
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5480:32:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"hexValue": "31",
																				"id": 645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5576:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				}
																			],
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5569:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 643,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "5569:6:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5569:9:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5582:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "5569:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5315:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5319:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "5315:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5315:286:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 633,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967274,
														"src": "5291:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5291:324:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 632,
												"id": 651,
												"nodeType": "Return",
												"src": "5272:343:5"
											}
										]
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "digest",
									"nameLocation": "5197:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "5223:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5204:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SystemState_$620_memory_ptr",
													"typeString": "struct SystemState"
												},
												"typeName": {
													"id": 627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 626,
														"name": "SystemState",
														"nameLocations": [
															"5204:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 620,
														"src": "5204:11:5"
													},
													"referencedDeclaration": 620,
													"src": "5204:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SystemState_$620_storage_ptr",
														"typeString": "struct SystemState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:26:5"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5253:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:9:5"
									},
									"scope": 654,
									"src": "5188:434:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 729,
							"src": "5095:529:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"canonicalName": "ExitCode",
							"documentation": {
								"id": 655,
								"nodeType": "StructuredDocumentation",
								"src": "5626:489:5",
								"text": "@notice Exit condition indicated by the zkVM at the end of the guest execution.\n @dev Exit codes have a \"system\" part and a \"user\" part. Semantically, the system part is set to\n indicate the type of exit (e.g. halt, pause, or system split) and is directly controlled by the\n zkVM. The user part is an exit code, similar to exit codes used in Linux, chosen by the guest\n program to indicate additional information (e.g. 0 to indicate success or 1 to indicate an\n error)."
							},
							"id": 661,
							"members": [
								{
									"constant": false,
									"id": 658,
									"mutability": "mutable",
									"name": "system",
									"nameLocation": "6152:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 661,
									"src": "6137:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_SystemExitCode_$666",
										"typeString": "enum SystemExitCode"
									},
									"typeName": {
										"id": 657,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 656,
											"name": "SystemExitCode",
											"nameLocations": [
												"6137:14:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 666,
											"src": "6137:14:5"
										},
										"referencedDeclaration": 666,
										"src": "6137:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SystemExitCode_$666",
											"typeString": "enum SystemExitCode"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 660,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "6170:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 661,
									"src": "6164:10:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 659,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "6164:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ExitCode",
							"nameLocation": "6122:8:5",
							"nodeType": "StructDefinition",
							"scope": 729,
							"src": "6115:62:5",
							"visibility": "public"
						},
						{
							"canonicalName": "SystemExitCode",
							"documentation": {
								"id": 662,
								"nodeType": "StructuredDocumentation",
								"src": "6179:899:5",
								"text": "@notice Exit condition indicated by the zkVM at the end of the execution covered by this proof.\n @dev\n `Halted` indicates normal termination of a program with an interior exit code returned from the\n guest program. A halted program cannot be resumed.\n `Paused` indicates the execution ended in a paused state with an interior exit code set by the\n guest program. A paused program can be resumed such that execution picks up where it left\n of, with the same memory state.\n `SystemSplit` indicates the execution ended on a host-initiated system split. System split is\n mechanism by which the host can temporarily stop execution of the execution ended in a system\n split has no output and no conclusions can be drawn about whether the program will eventually\n halt. System split is used in continuations to split execution into individually provable segments."
							},
							"id": 666,
							"members": [
								{
									"id": 663,
									"name": "Halted",
									"nameLocation": "7104:6:5",
									"nodeType": "EnumValue",
									"src": "7104:6:5"
								},
								{
									"id": 664,
									"name": "Paused",
									"nameLocation": "7116:6:5",
									"nodeType": "EnumValue",
									"src": "7116:6:5"
								},
								{
									"id": 665,
									"name": "SystemSplit",
									"nameLocation": "7128:11:5",
									"nodeType": "EnumValue",
									"src": "7128:11:5"
								}
							],
							"name": "SystemExitCode",
							"nameLocation": "7083:14:5",
							"nodeType": "EnumDefinition",
							"src": "7078:63:5"
						},
						{
							"canonicalName": "Output",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "7143:102:5",
								"text": "@notice Output field in the `ReceiptClaim`, committing to a claimed journal and assumptions list."
							},
							"id": 674,
							"members": [
								{
									"constant": false,
									"id": 670,
									"mutability": "mutable",
									"name": "journalDigest",
									"nameLocation": "7348:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "7340:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 669,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7340:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 673,
									"mutability": "mutable",
									"name": "assumptionsDigest",
									"nameLocation": "7984:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "7976:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 672,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7976:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Output",
							"nameLocation": "7252:6:5",
							"nodeType": "StructDefinition",
							"scope": 729,
							"src": "7245:759:5",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OutputLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 706,
							"linearizedBaseContracts": [
								706
							],
							"name": "OutputLib",
							"nameLocation": "8014:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 679,
									"mutability": "constant",
									"name": "TAG_DIGEST",
									"nameLocation": "8047:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 706,
									"src": "8030:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 675,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "8030:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "72697363302e4f7574707574",
												"id": 677,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8067:14:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_4bfa840430bfe70add33bbf863dd42a711f40c89fbff00bbd54f8f680901e3bc",
													"typeString": "literal_string \"risc0.Output\""
												},
												"value": "risc0.Output"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_4bfa840430bfe70add33bbf863dd42a711f40c89fbff00bbd54f8f680901e3bc",
													"typeString": "literal_string \"risc0.Output\""
												}
											],
											"id": 676,
											"name": "sha256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967274,
											"src": "8060:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 678,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8060:22:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "8159:327:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 690,
																	"name": "TAG_DIGEST",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "8250:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 691,
																		"name": "output",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "8310:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Output_$674_memory_ptr",
																			"typeString": "struct Output memory"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8317:13:5",
																	"memberName": "journalDigest",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 670,
																	"src": "8310:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 693,
																		"name": "output",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "8352:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Output_$674_memory_ptr",
																			"typeString": "struct Output memory"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8359:17:5",
																	"memberName": "assumptionsDigest",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 673,
																	"src": "8352:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"hexValue": "32",
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8433:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 695,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "8433:6:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8433:9:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8446:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "8433:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8212:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8216:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8212:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8212:253:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 687,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967274,
														"src": "8188:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:291:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 686,
												"id": 703,
												"nodeType": "Return",
												"src": "8169:310:5"
											}
										]
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "digest",
									"nameLocation": "8098:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "8119:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "8105:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Output_$674_memory_ptr",
													"typeString": "struct Output"
												},
												"typeName": {
													"id": 681,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 680,
														"name": "Output",
														"nameLocations": [
															"8105:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 674,
														"src": "8105:6:5"
													},
													"referencedDeclaration": 674,
													"src": "8105:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Output_$674_storage_ptr",
														"typeString": "struct Output"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8104:22:5"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "8150:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 684,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8150:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8149:9:5"
									},
									"scope": 706,
									"src": "8089:397:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 729,
							"src": "8006:482:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "8490:92:5",
								"text": "@notice Error raised when cryptographic verification of the zero-knowledge proof fails."
							},
							"errorSelector": "439cc0cd",
							"id": 709,
							"name": "VerificationFailed",
							"nameLocation": "8588:18:5",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 708,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "8606:2:5"
							},
							"src": "8582:27:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRiscZeroVerifier",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 710,
								"nodeType": "StructuredDocumentation",
								"src": "8611:68:5",
								"text": "@notice Verifier interface for RISC Zero receipts of execution."
							},
							"fullyImplemented": false,
							"id": 728,
							"linearizedBaseContracts": [
								728
							],
							"name": "IRiscZeroVerifier",
							"nameLocation": "8689:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "8713:569:5",
										"text": "@notice Verify that the given seal is a valid RISC Zero proof of execution with the\n     given image ID and journal digest. Reverts on failure.\n @dev This method additionally ensures that the input hash is all-zeros (i.e. no\n committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the\n receipt is unconditional).\n @param seal The encoded cryptographic proof (i.e. SNARK).\n @param imageId The identifier for the guest program.\n @param journalDigest The SHA-256 digest of the journal bytes."
									},
									"functionSelector": "ab750e75",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "9296:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "seal",
												"nameLocation": "9327:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "9312:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9312:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "imageId",
												"nameLocation": "9349:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "9341:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9341:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "journalDigest",
												"nameLocation": "9374:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "9366:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 716,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9302:91:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9407:0:5"
									},
									"scope": 728,
									"src": "9287:121:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "9414:242:5",
										"text": "@notice Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is\n valid a cryptographic proof of the execution with the given `claim`. Reverts on failure.\n @param receipt The receipt to be verified."
									},
									"functionSelector": "1599ead5",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyIntegrity",
									"nameLocation": "9670:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "receipt",
												"nameLocation": "9703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "9686:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Receipt_$496_calldata_ptr",
													"typeString": "struct Receipt"
												},
												"typeName": {
													"id": 723,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 722,
														"name": "Receipt",
														"nameLocations": [
															"9686:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 496,
														"src": "9686:7:5"
													},
													"referencedDeclaration": 496,
													"src": "9686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Receipt_$496_storage_ptr",
														"typeString": "struct Receipt"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9685:26:5"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9725:0:5"
									},
									"scope": 728,
									"src": "9661:65:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 729,
							"src": "8679:1049:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "635:9094:5"
				},
				"id": 5
			},
			"src/utils/Util.sol": {
				"ast": {
					"absolutePath": "src/utils/Util.sol",
					"exportedSymbols": {
						"reverseByteOrderUint16": [
							898
						],
						"reverseByteOrderUint256": [
							827
						],
						"reverseByteOrderUint32": [
							870
						]
					},
					"id": 899,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 730,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "635:23:6"
						},
						{
							"body": {
								"id": 826,
								"nodeType": "Block",
								"src": "1002:917:6",
								"statements": [
									{
										"expression": {
											"id": 740,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 738,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 736,
												"src": "1008:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"id": 739,
												"name": "input",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 733,
												"src": "1012:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1008:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 741,
										"nodeType": "ExpressionStatement",
										"src": "1008:9:6"
									},
									{
										"expression": {
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 742,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 736,
												"src": "1042:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 757,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 743,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1048:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307846463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030",
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1052:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_115341536360906404779899502576747487978354537254490211650198994186870666100480_by_1",
																				"typeString": "int_const 1153...(70 digits omitted)...0480"
																			},
																			"value": "0xFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00"
																		},
																		"src": "1048:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 746,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "38",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1123:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "1047:77:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 749,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1046:79:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 750,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1138:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646",
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1142:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1",
																				"typeString": "int_const 4505...(67 digits omitted)...9455"
																			},
																			"value": "0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"
																		},
																		"src": "1138:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1137:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "38",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1213:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "1137:77:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 756,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1136:79:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "1046:169:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1042:173:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 759,
										"nodeType": "ExpressionStatement",
										"src": "1042:173:6"
									},
									{
										"expression": {
											"id": 776,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 760,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 736,
												"src": "1252:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 775,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 761,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1258:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307846464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030",
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1262:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_115790322417210952336529717160220497262186272106556906860092653394915770695680_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...5680"
																			},
																			"value": "0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000"
																		},
																		"src": "1258:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 764,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1257:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "3136",
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1333:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "1257:78:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 767,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1256:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1349:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1353:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1",
																				"typeString": "int_const 1766...(65 digits omitted)...4255"
																			},
																			"value": "0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"
																		},
																		"src": "1349:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 771,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1348:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3136",
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1424:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "1348:78:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 774,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1347:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "1256:171:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1252:175:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 777,
										"nodeType": "ExpressionStatement",
										"src": "1252:175:6"
									},
									{
										"expression": {
											"id": 794,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 778,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 736,
												"src": "1464:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 793,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 779,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1470:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307846464646464646463030303030303030464646464646464630303030303030304646464646464646303030303030303046464646464646463030303030303030",
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1474:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_115792089210356248762697446947946071893095522863849111501270640965525260206080_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...6080"
																			},
																			"value": "0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000"
																		},
																		"src": "1470:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 782,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1469:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "3332",
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1545:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "1469:78:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 785,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1468:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 786,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1561:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646",
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1565:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1",
																				"typeString": "int_const 2695...(60 digits omitted)...3855"
																			},
																			"value": "0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"
																		},
																		"src": "1561:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 789,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1560:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3332",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1636:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "1560:78:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 792,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1559:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "1468:171:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1464:175:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 795,
										"nodeType": "ExpressionStatement",
										"src": "1464:175:6"
									},
									{
										"expression": {
											"id": 812,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 796,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 736,
												"src": "1676:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 811,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 797,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1682:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307846464646464646464646464646464646303030303030303030303030303030304646464646464646464646464646464630303030303030303030303030303030",
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1686:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_115792089237316195417293883273301227089774477609353836086800156426807153786880_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...6880"
																			},
																			"value": "0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF0000000000000000"
																		},
																		"src": "1682:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 800,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1681:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "3634",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1757:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "1681:78:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 803,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1680:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 804,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1773:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646",
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:66:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6277101735386680763495507056286727952657427581105975853055_by_1",
																				"typeString": "int_const 6277...(50 digits omitted)...3055"
																			},
																			"value": "0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"
																		},
																		"src": "1773:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1772:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3634",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1848:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "1772:78:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 810,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1771:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "1680:171:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1676:175:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 813,
										"nodeType": "ExpressionStatement",
										"src": "1676:175:6"
									},
									{
										"expression": {
											"id": 824,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 814,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 736,
												"src": "1889:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 823,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 815,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "1894:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1899:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1894:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 818,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1893:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 819,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "1907:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313238",
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1912:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1907:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 822,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1906:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "1893:23:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1889:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 825,
										"nodeType": "ExpressionStatement",
										"src": "1889:27:6"
									}
								]
							},
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "660:269:6",
								"text": "@notice reverse the byte order of the uint256 value.\n @dev Solidity uses a big-endian ABI encoding. Reversing the byte order before encoding\n ensure that the encoded value will be little-endian.\n Written by k06a. https://ethereum.stackexchange.com/a/83627"
							},
							"id": 827,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "reverseByteOrderUint256",
							"nameLocation": "938:23:6",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 734,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 733,
										"mutability": "mutable",
										"name": "input",
										"nameLocation": "970:5:6",
										"nodeType": "VariableDeclaration",
										"scope": 827,
										"src": "962:13:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 732,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "962:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "961:15:6"
							},
							"returnParameters": {
								"id": 737,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 736,
										"mutability": "mutable",
										"name": "v",
										"nameLocation": "999:1:6",
										"nodeType": "VariableDeclaration",
										"scope": 827,
										"src": "991:9:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 735,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "991:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "990:11:6"
							},
							"scope": 899,
							"src": "929:990:6",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 869,
								"nodeType": "Block",
								"src": "2259:158:6",
								"statements": [
									{
										"expression": {
											"id": 837,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 835,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 833,
												"src": "2265:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"id": 836,
												"name": "input",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 830,
												"src": "2269:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"src": "2265:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"id": 838,
										"nodeType": "ExpressionStatement",
										"src": "2265:9:6"
									},
									{
										"expression": {
											"id": 855,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 839,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 833,
												"src": "2299:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"id": 854,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 840,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "2305:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "30784646303046463030",
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2309:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4278255360_by_1",
																				"typeString": "int_const 4278255360"
																			},
																			"value": "0xFF00FF00"
																		},
																		"src": "2305:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2304:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "38",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2324:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "2304:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"id": 846,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2303:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 847,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "2331:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "30783030464630304646",
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2335:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16711935_by_1",
																				"typeString": "int_const 16711935"
																			},
																			"value": "0x00FF00FF"
																		},
																		"src": "2331:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"id": 850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2330:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "38",
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2350:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "2330:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"id": 853,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2329:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"src": "2303:49:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"src": "2299:53:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"id": 856,
										"nodeType": "ExpressionStatement",
										"src": "2299:53:6"
									},
									{
										"expression": {
											"id": 867,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 857,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 833,
												"src": "2389:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"id": 866,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "2394:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "3136",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2399:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "2394:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"id": 861,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2393:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "2406:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3136",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2411:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "2406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"id": 865,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2405:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"src": "2393:21:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"src": "2389:25:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"id": 868,
										"nodeType": "ExpressionStatement",
										"src": "2389:25:6"
									}
								]
							},
							"documentation": {
								"id": 828,
								"nodeType": "StructuredDocumentation",
								"src": "1921:268:6",
								"text": "@notice reverse the byte order of the uint32 value.\n @dev Solidity uses a big-endian ABI encoding. Reversing the byte order before encoding\n ensure that the encoded value will be little-endian.\n Written by k06a. https://ethereum.stackexchange.com/a/83627"
							},
							"id": 870,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "reverseByteOrderUint32",
							"nameLocation": "2198:22:6",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 831,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 830,
										"mutability": "mutable",
										"name": "input",
										"nameLocation": "2228:5:6",
										"nodeType": "VariableDeclaration",
										"scope": 870,
										"src": "2221:12:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										},
										"typeName": {
											"id": 829,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "2221:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2220:14:6"
							},
							"returnParameters": {
								"id": 834,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 833,
										"mutability": "mutable",
										"name": "v",
										"nameLocation": "2256:1:6",
										"nodeType": "VariableDeclaration",
										"scope": 870,
										"src": "2249:8:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										},
										"typeName": {
											"id": 832,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "2249:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2248:10:6"
							},
							"scope": 899,
							"src": "2189:228:6",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 897,
								"nodeType": "Block",
								"src": "2757:77:6",
								"statements": [
									{
										"expression": {
											"id": 880,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 878,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 876,
												"src": "2763:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"id": 879,
												"name": "input",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 873,
												"src": "2767:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"src": "2763:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"id": 881,
										"nodeType": "ExpressionStatement",
										"src": "2763:9:6"
									},
									{
										"expression": {
											"id": 895,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftHandSide": {
												"id": 882,
												"name": "v",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 876,
												"src": "2797:1:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"nodeType": "Assignment",
											"operator": "=",
											"rightHandSide": {
												"commonType": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"id": 894,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 883,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "2802:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "38",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2807:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "2802:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 886,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2801:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 887,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "2814:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307830304646",
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2818:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "0x00FF"
																		},
																		"src": "2814:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"id": 890,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2813:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "38",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2829:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "2813:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 893,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2812:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"src": "2801:30:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"src": "2797:34:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"id": 896,
										"nodeType": "ExpressionStatement",
										"src": "2797:34:6"
									}
								]
							},
							"documentation": {
								"id": 871,
								"nodeType": "StructuredDocumentation",
								"src": "2419:268:6",
								"text": "@notice reverse the byte order of the uint16 value.\n @dev Solidity uses a big-endian ABI encoding. Reversing the byte order before encoding\n ensure that the encoded value will be little-endian.\n Written by k06a. https://ethereum.stackexchange.com/a/83627"
							},
							"id": 898,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "reverseByteOrderUint16",
							"nameLocation": "2696:22:6",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 874,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 873,
										"mutability": "mutable",
										"name": "input",
										"nameLocation": "2726:5:6",
										"nodeType": "VariableDeclaration",
										"scope": 898,
										"src": "2719:12:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 872,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2719:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2718:14:6"
							},
							"returnParameters": {
								"id": 877,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 876,
										"mutability": "mutable",
										"name": "v",
										"nameLocation": "2754:1:6",
										"nodeType": "VariableDeclaration",
										"scope": 898,
										"src": "2747:8:6",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 875,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2747:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2746:10:6"
							},
							"scope": 899,
							"src": "2687:147:6",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "635:2199:6"
				},
				"id": 6
			}
		}
	}
}