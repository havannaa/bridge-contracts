{
	"id": "c85be2fc5af26a21c7676d0fd2ebe0dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/tokens/QTOVToken_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: src/tokens/QTOVToken.sol\n\n\npragma solidity 0.8.20;\n\n\n\n\ncontract QTOVToken is ERC20, ERC20Burnable, Ownable {\n    // Custom errors\n    error OnlyBridge();\n    error ZeroAddress();\n    error BridgeNotInitialized();\n\n    address public bridge;\n    bool public bridgeInitialized; // Track if bridge has been set\n\n    event BridgeUpdated(address indexed newBridge);\n\n    constructor(\n        address initialOwner\n    ) ERC20(\"Quantova\", \"QTOV\") Ownable(initialOwner) {}\n\n    modifier onlyBridge() {\n        if (msg.sender != bridge) revert OnlyBridge();\n        _;\n    }\n\n    function setBridge(address _bridge) external onlyOwner {\n        if (_bridge == address(0)) revert ZeroAddress();\n        bridge = _bridge;\n\n        // Only emit event if bridge wasn't previously initialized or if bridge address changed\n        if (!bridgeInitialized || bridge != _bridge) {\n            bridgeInitialized = true; // Mark bridge as initialized\n            emit BridgeUpdated(_bridge);\n        }\n    }\n\n    function mint(address to, uint256 amount) external virtual onlyBridge {\n        if (!bridgeInitialized) revert BridgeNotInitialized();\n        _mint(to, amount);\n    }\n\n    function burn(address from, uint256 amount) external virtual onlyBridge {\n        _burn(from, amount);\n    }\n\n    function burnFrom(address account, uint256 amount) public virtual override {\n        if (msg.sender == bridge) {\n            // Bridge can bypass allowance check\n            _burn(account, amount);\n            return;\n        }\n\n        super.burnFrom(account, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/tokens/QTOVToken_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "src/tokens/QTOVToken_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 818,
								"contract": "src/tokens/QTOVToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"QTOVToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "BridgeNotInitialized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyBridge",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newBridge",
									"type": "address"
								}
							],
							"name": "BridgeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bridge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bridgeInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bridge",
									"type": "address"
								}
							],
							"name": "setBridge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/tokens/QTOVToken_flattened.sol\":26060:27562  contract QTOVToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/tokens/QTOVToken_flattened.sol\":26371:26469  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/tokens/QTOVToken_flattened.sol\":26453:26465  initialOwner */\n  dup1\n    /* \"src/tokens/QTOVToken_flattened.sol\":12483:12596  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x5175616e746f7661000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x51544f5600000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":12557:12562  name_ */\n  dup2\n    /* \"src/tokens/QTOVToken_flattened.sol\":12549:12554  _name */\n  0x03\n    /* \"src/tokens/QTOVToken_flattened.sol\":12549:12562  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":12582:12589  symbol_ */\n  dup1\n    /* \"src/tokens/QTOVToken_flattened.sol\":12572:12579  _symbol */\n  0x04\n    /* \"src/tokens/QTOVToken_flattened.sol\":12572:12589  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":12483:12596  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":24190:24191  0 */\n  0x00\n    /* \"src/tokens/QTOVToken_flattened.sol\":24166:24192  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/tokens/QTOVToken_flattened.sol\":24166:24178  initialOwner */\n  dup2\n    /* \"src/tokens/QTOVToken_flattened.sol\":24166:24192  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/tokens/QTOVToken_flattened.sol\":24162:24257  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"src/tokens/QTOVToken_flattened.sol\":24243:24244  0 */\n  0x00\n    /* \"src/tokens/QTOVToken_flattened.sol\":24215:24246  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/tokens/QTOVToken_flattened.sol\":24162:24257  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"src/tokens/QTOVToken_flattened.sol\":24266:24298  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"src/tokens/QTOVToken_flattened.sol\":24285:24297  initialOwner */\n  dup2\n    /* \"src/tokens/QTOVToken_flattened.sol\":24266:24284  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"src/tokens/QTOVToken_flattened.sol\":24266:24298  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"src/tokens/QTOVToken_flattened.sol\":24118:24305  constructor(address initialOwner) {... */\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":26371:26469  constructor(... */\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":26060:27562  contract QTOVToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_18)\n    /* \"src/tokens/QTOVToken_flattened.sol\":25805:25992  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"src/tokens/QTOVToken_flattened.sol\":25878:25894  address oldOwner */\n  0x00\n    /* \"src/tokens/QTOVToken_flattened.sol\":25897:25903  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/tokens/QTOVToken_flattened.sol\":25878:25903  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":25922:25930  newOwner */\n  dup2\n    /* \"src/tokens/QTOVToken_flattened.sol\":25913:25919  _owner */\n  0x05\n  0x00\n    /* \"src/tokens/QTOVToken_flattened.sol\":25913:25930  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":25976:25984  newOwner */\n  dup2\n    /* \"src/tokens/QTOVToken_flattened.sol\":25945:25985  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/tokens/QTOVToken_flattened.sol\":25966:25974  oldOwner */\n  dup2\n    /* \"src/tokens/QTOVToken_flattened.sol\":25945:25985  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"src/tokens/QTOVToken_flattened.sol\":25868:25992  {... */\n  pop\n    /* \"src/tokens/QTOVToken_flattened.sol\":25805:25992  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/tokens/QTOVToken_flattened.sol\":26060:27562  contract QTOVToken is ERC20, ERC20Burnable, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/tokens/QTOVToken_flattened.sol\":26060:27562  contract QTOVToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe78cea92\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x79cc6790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8dd14802\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x96a0c73f\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":12661:12750  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":14880:15066  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":13731:13828  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":15658:15902  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":13589:13671  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":26998:27165  function mint(address to, uint256 amount) external virtual onlyBridge {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"src/tokens/QTOVToken_flattened.sol\":22352:22439  function burn(uint256 value) public virtual {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"src/tokens/QTOVToken_flattened.sol\":13886:14002  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":25186:25287  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"src/tokens/QTOVToken_flattened.sol\":27285:27560  function burnFrom(address account, uint256 amount) public virtual override {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"src/tokens/QTOVToken_flattened.sol\":24531:24616  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":26576:26992  function setBridge(address _bridge) external onlyOwner {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"src/tokens/QTOVToken_flattened.sol\":12863:12956  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":26250:26279  bool public bridgeInitialized */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":27171:27279  function burn(address from, uint256 amount) external virtual onlyBridge {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"src/tokens/QTOVToken_flattened.sol\":14197:14375  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":14433:14573  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":26223:26244  address public bridge */\n    tag_20:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/tokens/QTOVToken_flattened.sol\":25436:25651  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"src/tokens/QTOVToken_flattened.sol\":12661:12750  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"src/tokens/QTOVToken_flattened.sol\":12706:12719  string memory */\n      0x60\n        /* \"src/tokens/QTOVToken_flattened.sol\":12738:12743  _name */\n      0x03\n        /* \"src/tokens/QTOVToken_flattened.sol\":12731:12743  return _name */\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":12661:12750  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":14880:15066  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"src/tokens/QTOVToken_flattened.sol\":14953:14957  bool */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":14969:14982  address owner */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":14985:14997  _msgSender() */\n      tag_104\n        /* \"src/tokens/QTOVToken_flattened.sol\":14985:14995  _msgSender */\n      tag_105\n        /* \"src/tokens/QTOVToken_flattened.sol\":14985:14997  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"src/tokens/QTOVToken_flattened.sol\":14969:14997  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":15007:15038  _approve(owner, spender, value) */\n      tag_106\n        /* \"src/tokens/QTOVToken_flattened.sol\":15016:15021  owner */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":15023:15030  spender */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":15032:15037  value */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":15007:15015  _approve */\n      tag_107\n        /* \"src/tokens/QTOVToken_flattened.sol\":15007:15038  _approve(owner, spender, value) */\n      jump\t// in\n    tag_106:\n        /* \"src/tokens/QTOVToken_flattened.sol\":15055:15059  true */\n      0x01\n        /* \"src/tokens/QTOVToken_flattened.sol\":15048:15059  return true */\n      swap2\n      pop\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":14880:15066  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":13731:13828  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"src/tokens/QTOVToken_flattened.sol\":13783:13790  uint256 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":13809:13821  _totalSupply */\n      sload(0x02)\n        /* \"src/tokens/QTOVToken_flattened.sol\":13802:13821  return _totalSupply */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":13731:13828  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":15658:15902  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"src/tokens/QTOVToken_flattened.sol\":15745:15749  bool */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":15761:15776  address spender */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":15779:15791  _msgSender() */\n      tag_110\n        /* \"src/tokens/QTOVToken_flattened.sol\":15779:15789  _msgSender */\n      tag_105\n        /* \"src/tokens/QTOVToken_flattened.sol\":15779:15791  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"src/tokens/QTOVToken_flattened.sol\":15761:15791  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":15801:15838  _spendAllowance(from, spender, value) */\n      tag_111\n        /* \"src/tokens/QTOVToken_flattened.sol\":15817:15821  from */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":15823:15830  spender */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":15832:15837  value */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":15801:15816  _spendAllowance */\n      tag_112\n        /* \"src/tokens/QTOVToken_flattened.sol\":15801:15838  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_111:\n        /* \"src/tokens/QTOVToken_flattened.sol\":15848:15874  _transfer(from, to, value) */\n      tag_113\n        /* \"src/tokens/QTOVToken_flattened.sol\":15858:15862  from */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":15864:15866  to */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":15868:15873  value */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":15848:15857  _transfer */\n      tag_114\n        /* \"src/tokens/QTOVToken_flattened.sol\":15848:15874  _transfer(from, to, value) */\n      jump\t// in\n    tag_113:\n        /* \"src/tokens/QTOVToken_flattened.sol\":15891:15895  true */\n      0x01\n        /* \"src/tokens/QTOVToken_flattened.sol\":15884:15895  return true */\n      swap2\n      pop\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":15658:15902  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":13589:13671  function decimals() public view virtual returns (uint8) {... */\n    tag_45:\n        /* \"src/tokens/QTOVToken_flattened.sol\":13638:13643  uint8 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":13662:13664  18 */\n      0x12\n        /* \"src/tokens/QTOVToken_flattened.sol\":13655:13664  return 18 */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":13589:13671  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":26998:27165  function mint(address to, uint256 amount) external virtual onlyBridge {... */\n    tag_50:\n        /* \"src/tokens/QTOVToken_flattened.sol\":26525:26531  bridge */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26511:26531  msg.sender != bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26511:26521  msg.sender */\n      caller\n        /* \"src/tokens/QTOVToken_flattened.sol\":26511:26531  msg.sender != bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/tokens/QTOVToken_flattened.sol\":26507:26552  if (msg.sender != bridge) revert OnlyBridge() */\n      tag_117\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":26540:26552  OnlyBridge() */\n      mload(0x40)\n      0x38da3b1500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":26507:26552  if (msg.sender != bridge) revert OnlyBridge() */\n    tag_117:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27083:27100  bridgeInitialized */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":27078:27131  if (!bridgeInitialized) revert BridgeNotInitialized() */\n      tag_119\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":27109:27131  BridgeNotInitialized() */\n      mload(0x40)\n      0x86255f7400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":27078:27131  if (!bridgeInitialized) revert BridgeNotInitialized() */\n    tag_119:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27141:27158  _mint(to, amount) */\n      tag_120\n        /* \"src/tokens/QTOVToken_flattened.sol\":27147:27149  to */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27151:27157  amount */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27141:27146  _mint */\n      tag_121\n        /* \"src/tokens/QTOVToken_flattened.sol\":27141:27158  _mint(to, amount) */\n      jump\t// in\n    tag_120:\n        /* \"src/tokens/QTOVToken_flattened.sol\":26998:27165  function mint(address to, uint256 amount) external virtual onlyBridge {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":22352:22439  function burn(uint256 value) public virtual {... */\n    tag_54:\n        /* \"src/tokens/QTOVToken_flattened.sol\":22406:22432  _burn(_msgSender(), value) */\n      tag_123\n        /* \"src/tokens/QTOVToken_flattened.sol\":22412:22424  _msgSender() */\n      tag_124\n        /* \"src/tokens/QTOVToken_flattened.sol\":22412:22422  _msgSender */\n      tag_105\n        /* \"src/tokens/QTOVToken_flattened.sol\":22412:22424  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"src/tokens/QTOVToken_flattened.sol\":22426:22431  value */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":22406:22411  _burn */\n      tag_125\n        /* \"src/tokens/QTOVToken_flattened.sol\":22406:22432  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_123:\n        /* \"src/tokens/QTOVToken_flattened.sol\":22352:22439  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":13886:14002  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"src/tokens/QTOVToken_flattened.sol\":13951:13958  uint256 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":13977:13986  _balances */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":13977:13995  _balances[account] */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":13987:13994  account */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":13977:13995  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/tokens/QTOVToken_flattened.sol\":13970:13995  return _balances[account] */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":13886:14002  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":25186:25287  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24437  _checkOwner() */\n      tag_128\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24435  _checkOwner */\n      tag_129\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24437  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"src/tokens/QTOVToken_flattened.sol\":25250:25280  _transferOwnership(address(0)) */\n      tag_131\n        /* \"src/tokens/QTOVToken_flattened.sol\":25277:25278  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":25250:25268  _transferOwnership */\n      tag_132\n        /* \"src/tokens/QTOVToken_flattened.sol\":25250:25280  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_131:\n        /* \"src/tokens/QTOVToken_flattened.sol\":25186:25287  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":27285:27560  function burnFrom(address account, uint256 amount) public virtual override {... */\n    tag_64:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27388:27394  bridge */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":27374:27394  msg.sender == bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":27374:27384  msg.sender */\n      caller\n        /* \"src/tokens/QTOVToken_flattened.sol\":27374:27394  msg.sender == bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":27370:27512  if (msg.sender == bridge) {... */\n      tag_134\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":27459:27481  _burn(account, amount) */\n      tag_135\n        /* \"src/tokens/QTOVToken_flattened.sol\":27465:27472  account */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27474:27480  amount */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27459:27464  _burn */\n      tag_125\n        /* \"src/tokens/QTOVToken_flattened.sol\":27459:27481  _burn(account, amount) */\n      jump\t// in\n    tag_135:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27495:27502  return; */\n      jump(tag_133)\n        /* \"src/tokens/QTOVToken_flattened.sol\":27370:27512  if (msg.sender == bridge) {... */\n    tag_134:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27522:27553  super.burnFrom(account, amount) */\n      tag_136\n        /* \"src/tokens/QTOVToken_flattened.sol\":27537:27544  account */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27546:27552  amount */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27522:27536  super.burnFrom */\n      tag_137\n        /* \"src/tokens/QTOVToken_flattened.sol\":27522:27553  super.burnFrom(account, amount) */\n      jump\t// in\n    tag_136:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27285:27560  function burnFrom(address account, uint256 amount) public virtual override {... */\n    tag_133:\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":24531:24616  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24577:24584  address */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":24603:24609  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":24596:24609  return _owner */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":24531:24616  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":26576:26992  function setBridge(address _bridge) external onlyOwner {... */\n    tag_71:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24437  _checkOwner() */\n      tag_140\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24435  _checkOwner */\n      tag_129\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24437  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"src/tokens/QTOVToken_flattened.sol\":26664:26665  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":26645:26666  _bridge == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26645:26652  _bridge */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":26645:26666  _bridge == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":26641:26688  if (_bridge == address(0)) revert ZeroAddress() */\n      tag_142\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":26675:26688  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":26641:26688  if (_bridge == address(0)) revert ZeroAddress() */\n    tag_142:\n        /* \"src/tokens/QTOVToken_flattened.sol\":26707:26714  _bridge */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":26698:26704  bridge */\n      0x06\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":26698:26714  bridge = _bridge */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":26826:26843  bridgeInitialized */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26825:26843  !bridgeInitialized */\n      iszero\n        /* \"src/tokens/QTOVToken_flattened.sol\":26825:26864  !bridgeInitialized || bridge != _bridge */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":26857:26864  _bridge */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":26847:26864  bridge != _bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26847:26853  bridge */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26847:26864  bridge != _bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"src/tokens/QTOVToken_flattened.sol\":26825:26864  !bridgeInitialized || bridge != _bridge */\n    tag_143:\n        /* \"src/tokens/QTOVToken_flattened.sol\":26821:26986  if (!bridgeInitialized || bridge != _bridge) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":26900:26904  true */\n      0x01\n        /* \"src/tokens/QTOVToken_flattened.sol\":26880:26897  bridgeInitialized */\n      0x06\n      0x14\n        /* \"src/tokens/QTOVToken_flattened.sol\":26880:26904  bridgeInitialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":26967:26974  _bridge */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":26953:26975  BridgeUpdated(_bridge) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/tokens/QTOVToken_flattened.sol\":26821:26986  if (!bridgeInitialized || bridge != _bridge) {... */\n    tag_144:\n        /* \"src/tokens/QTOVToken_flattened.sol\":26576:26992  function setBridge(address _bridge) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":12863:12956  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"src/tokens/QTOVToken_flattened.sol\":12910:12923  string memory */\n      0x60\n        /* \"src/tokens/QTOVToken_flattened.sol\":12942:12949  _symbol */\n      0x04\n        /* \"src/tokens/QTOVToken_flattened.sol\":12935:12949  return _symbol */\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_98\n      jump\t// in\n    tag_146:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_98\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":12863:12956  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":26250:26279  bool public bridgeInitialized */\n    tag_76:\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":27171:27279  function burn(address from, uint256 amount) external virtual onlyBridge {... */\n    tag_80:\n        /* \"src/tokens/QTOVToken_flattened.sol\":26525:26531  bridge */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26511:26531  msg.sender != bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":26511:26521  msg.sender */\n      caller\n        /* \"src/tokens/QTOVToken_flattened.sol\":26511:26531  msg.sender != bridge */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/tokens/QTOVToken_flattened.sol\":26507:26552  if (msg.sender != bridge) revert OnlyBridge() */\n      tag_152\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":26540:26552  OnlyBridge() */\n      mload(0x40)\n      0x38da3b1500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":26507:26552  if (msg.sender != bridge) revert OnlyBridge() */\n    tag_152:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27253:27272  _burn(from, amount) */\n      tag_154\n        /* \"src/tokens/QTOVToken_flattened.sol\":27259:27263  from */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27265:27271  amount */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":27253:27258  _burn */\n      tag_125\n        /* \"src/tokens/QTOVToken_flattened.sol\":27253:27272  _burn(from, amount) */\n      jump\t// in\n    tag_154:\n        /* \"src/tokens/QTOVToken_flattened.sol\":27171:27279  function burn(address from, uint256 amount) external virtual onlyBridge {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":14197:14375  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_83:\n        /* \"src/tokens/QTOVToken_flattened.sol\":14266:14270  bool */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":14282:14295  address owner */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":14298:14310  _msgSender() */\n      tag_156\n        /* \"src/tokens/QTOVToken_flattened.sol\":14298:14308  _msgSender */\n      tag_105\n        /* \"src/tokens/QTOVToken_flattened.sol\":14298:14310  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"src/tokens/QTOVToken_flattened.sol\":14282:14310  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":14320:14347  _transfer(owner, to, value) */\n      tag_157\n        /* \"src/tokens/QTOVToken_flattened.sol\":14330:14335  owner */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":14337:14339  to */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":14341:14346  value */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":14320:14329  _transfer */\n      tag_114\n        /* \"src/tokens/QTOVToken_flattened.sol\":14320:14347  _transfer(owner, to, value) */\n      jump\t// in\n    tag_157:\n        /* \"src/tokens/QTOVToken_flattened.sol\":14364:14368  true */\n      0x01\n        /* \"src/tokens/QTOVToken_flattened.sol\":14357:14368  return true */\n      swap2\n      pop\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":14197:14375  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":14433:14573  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_88:\n        /* \"src/tokens/QTOVToken_flattened.sol\":14513:14520  uint256 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":14539:14550  _allowances */\n      0x01\n        /* \"src/tokens/QTOVToken_flattened.sol\":14539:14557  _allowances[owner] */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":14551:14556  owner */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":14539:14557  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/tokens/QTOVToken_flattened.sol\":14539:14566  _allowances[owner][spender] */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":14558:14565  spender */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":14539:14566  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/tokens/QTOVToken_flattened.sol\":14532:14566  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":14433:14573  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":26223:26244  address public bridge */\n    tag_91:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":25436:25651  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24437  _checkOwner() */\n      tag_160\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24435  _checkOwner */\n      tag_129\n        /* \"src/tokens/QTOVToken_flattened.sol\":24424:24437  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"src/tokens/QTOVToken_flattened.sol\":25540:25541  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":25520:25542  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":25520:25528  newOwner */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":25520:25542  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":25516:25607  if (newOwner == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":25593:25594  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":25565:25596  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":25516:25607  if (newOwner == address(0)) {... */\n    tag_162:\n        /* \"src/tokens/QTOVToken_flattened.sol\":25616:25644  _transferOwnership(newOwner) */\n      tag_164\n        /* \"src/tokens/QTOVToken_flattened.sol\":25635:25643  newOwner */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":25616:25634  _transferOwnership */\n      tag_132\n        /* \"src/tokens/QTOVToken_flattened.sol\":25616:25644  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_164:\n        /* \"src/tokens/QTOVToken_flattened.sol\":25436:25651  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":4209:4305  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"src/tokens/QTOVToken_flattened.sol\":4262:4269  address */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"src/tokens/QTOVToken_flattened.sol\":4281:4298  return msg.sender */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":4209:4305  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":19608:19736  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_107:\n        /* \"src/tokens/QTOVToken_flattened.sol\":19692:19729  _approve(owner, spender, value, true) */\n      tag_167\n        /* \"src/tokens/QTOVToken_flattened.sol\":19701:19706  owner */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":19708:19715  spender */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":19717:19722  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":19724:19728  true */\n      0x01\n        /* \"src/tokens/QTOVToken_flattened.sol\":19692:19700  _approve */\n      tag_168\n        /* \"src/tokens/QTOVToken_flattened.sol\":19692:19729  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_167:\n        /* \"src/tokens/QTOVToken_flattened.sol\":19608:19736  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":21297:21773  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_112:\n        /* \"src/tokens/QTOVToken_flattened.sol\":21396:21420  uint256 currentAllowance */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":21423:21448  allowance(owner, spender) */\n      tag_170\n        /* \"src/tokens/QTOVToken_flattened.sol\":21433:21438  owner */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":21440:21447  spender */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":21423:21432  allowance */\n      tag_88\n        /* \"src/tokens/QTOVToken_flattened.sol\":21423:21448  allowance(owner, spender) */\n      jump\t// in\n    tag_170:\n        /* \"src/tokens/QTOVToken_flattened.sol\":21396:21448  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":21481:21498  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/tokens/QTOVToken_flattened.sol\":21462:21478  currentAllowance */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":21462:21498  currentAllowance < type(uint256).max */\n      lt\n        /* \"src/tokens/QTOVToken_flattened.sol\":21458:21767  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":21537:21542  value */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":21518:21534  currentAllowance */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":21518:21542  currentAllowance < value */\n      lt\n        /* \"src/tokens/QTOVToken_flattened.sol\":21514:21644  if (currentAllowance < value) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":21596:21603  spender */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":21605:21621  currentAllowance */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":21623:21628  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":21569:21629  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":21514:21644  if (currentAllowance < value) {... */\n    tag_172:\n        /* \"src/tokens/QTOVToken_flattened.sol\":21685:21742  _approve(owner, spender, currentAllowance - value, false) */\n      tag_175\n        /* \"src/tokens/QTOVToken_flattened.sol\":21694:21699  owner */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":21701:21708  spender */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":21729:21734  value */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":21710:21726  currentAllowance */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":21710:21734  currentAllowance - value */\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":21736:21741  false */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":21685:21693  _approve */\n      tag_168\n        /* \"src/tokens/QTOVToken_flattened.sol\":21685:21742  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_175:\n        /* \"src/tokens/QTOVToken_flattened.sol\":21458:21767  if (currentAllowance < type(uint256).max) {... */\n    tag_171:\n        /* \"src/tokens/QTOVToken_flattened.sol\":21386:21773  {... */\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":21297:21773  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":16275:16575  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_114:\n        /* \"src/tokens/QTOVToken_flattened.sol\":16374:16375  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":16358:16376  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":16358:16362  from */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":16358:16376  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":16354:16440  if (from == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":16426:16427  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":16399:16429  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":16354:16440  if (from == address(0)) {... */\n    tag_177:\n        /* \"src/tokens/QTOVToken_flattened.sol\":16467:16468  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":16453:16469  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":16453:16455  to */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":16453:16469  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":16449:16535  if (to == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":16521:16522  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":16492:16524  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":16449:16535  if (to == address(0)) {... */\n    tag_179:\n        /* \"src/tokens/QTOVToken_flattened.sol\":16544:16568  _update(from, to, value) */\n      tag_181\n        /* \"src/tokens/QTOVToken_flattened.sol\":16552:16556  from */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":16558:16560  to */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":16562:16567  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":16544:16551  _update */\n      tag_182\n        /* \"src/tokens/QTOVToken_flattened.sol\":16544:16568  _update(from, to, value) */\n      jump\t// in\n    tag_181:\n        /* \"src/tokens/QTOVToken_flattened.sol\":16275:16575  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":18340:18548  function _mint(address account, uint256 value) internal {... */\n    tag_121:\n        /* \"src/tokens/QTOVToken_flattened.sol\":18429:18430  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":18410:18431  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":18410:18417  account */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":18410:18431  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":18406:18497  if (account == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":18483:18484  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":18454:18486  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":18406:18497  if (account == address(0)) {... */\n    tag_184:\n        /* \"src/tokens/QTOVToken_flattened.sol\":18506:18541  _update(address(0), account, value) */\n      tag_186\n        /* \"src/tokens/QTOVToken_flattened.sol\":18522:18523  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":18526:18533  account */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":18535:18540  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":18506:18513  _update */\n      tag_182\n        /* \"src/tokens/QTOVToken_flattened.sol\":18506:18541  _update(address(0), account, value) */\n      jump\t// in\n    tag_186:\n        /* \"src/tokens/QTOVToken_flattened.sol\":18340:18548  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":18866:19072  function _burn(address account, uint256 value) internal {... */\n    tag_125:\n        /* \"src/tokens/QTOVToken_flattened.sol\":18955:18956  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":18936:18957  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":18936:18943  account */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":18936:18957  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":18932:19021  if (account == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":19007:19008  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":18980:19010  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":18932:19021  if (account == address(0)) {... */\n    tag_188:\n        /* \"src/tokens/QTOVToken_flattened.sol\":19030:19065  _update(account, address(0), value) */\n      tag_190\n        /* \"src/tokens/QTOVToken_flattened.sol\":19038:19045  account */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":19055:19056  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":19059:19064  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":19030:19037  _update */\n      tag_182\n        /* \"src/tokens/QTOVToken_flattened.sol\":19030:19065  _update(account, address(0), value) */\n      jump\t// in\n    tag_190:\n        /* \"src/tokens/QTOVToken_flattened.sol\":18866:19072  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":24689:24851  function _checkOwner() internal view virtual {... */\n    tag_129:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24759:24771  _msgSender() */\n      tag_192\n        /* \"src/tokens/QTOVToken_flattened.sol\":24759:24769  _msgSender */\n      tag_105\n        /* \"src/tokens/QTOVToken_flattened.sol\":24759:24771  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24748:24771  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":24748:24755  owner() */\n      tag_193\n        /* \"src/tokens/QTOVToken_flattened.sol\":24748:24753  owner */\n      tag_66\n        /* \"src/tokens/QTOVToken_flattened.sol\":24748:24755  owner() */\n      jump\t// in\n    tag_193:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24748:24771  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/tokens/QTOVToken_flattened.sol\":24744:24845  if (owner() != _msgSender()) {... */\n      tag_194\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":24821:24833  _msgSender() */\n      tag_195\n        /* \"src/tokens/QTOVToken_flattened.sol\":24821:24831  _msgSender */\n      tag_105\n        /* \"src/tokens/QTOVToken_flattened.sol\":24821:24833  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24794:24834  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":24744:24845  if (owner() != _msgSender()) {... */\n    tag_194:\n        /* \"src/tokens/QTOVToken_flattened.sol\":24689:24851  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":25805:25992  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_132:\n        /* \"src/tokens/QTOVToken_flattened.sol\":25878:25894  address oldOwner */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":25897:25903  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":25878:25903  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":25922:25930  newOwner */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":25913:25919  _owner */\n      0x05\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":25913:25930  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":25976:25984  newOwner */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":25945:25985  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":25966:25974  oldOwner */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":25945:25985  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/tokens/QTOVToken_flattened.sol\":25868:25992  {... */\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":25805:25992  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":22755:22913  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_137:\n        /* \"src/tokens/QTOVToken_flattened.sol\":22830:22875  _spendAllowance(account, _msgSender(), value) */\n      tag_199\n        /* \"src/tokens/QTOVToken_flattened.sol\":22846:22853  account */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":22855:22867  _msgSender() */\n      tag_200\n        /* \"src/tokens/QTOVToken_flattened.sol\":22855:22865  _msgSender */\n      tag_105\n        /* \"src/tokens/QTOVToken_flattened.sol\":22855:22867  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"src/tokens/QTOVToken_flattened.sol\":22869:22874  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":22830:22845  _spendAllowance */\n      tag_112\n        /* \"src/tokens/QTOVToken_flattened.sol\":22830:22875  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_199:\n        /* \"src/tokens/QTOVToken_flattened.sol\":22885:22906  _burn(account, value) */\n      tag_201\n        /* \"src/tokens/QTOVToken_flattened.sol\":22891:22898  account */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":22900:22905  value */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":22885:22890  _burn */\n      tag_125\n        /* \"src/tokens/QTOVToken_flattened.sol\":22885:22906  _burn(account, value) */\n      jump\t// in\n    tag_201:\n        /* \"src/tokens/QTOVToken_flattened.sol\":22755:22913  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":20583:21015  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_168:\n        /* \"src/tokens/QTOVToken_flattened.sol\":20712:20713  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":20695:20714  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":20695:20700  owner */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":20695:20714  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":20691:20780  if (owner == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":20766:20767  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":20737:20769  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":20691:20780  if (owner == address(0)) {... */\n    tag_203:\n        /* \"src/tokens/QTOVToken_flattened.sol\":20812:20813  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":20793:20814  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":20793:20800  spender */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":20793:20814  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":20789:20879  if (spender == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":20865:20866  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":20837:20868  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":20789:20879  if (spender == address(0)) {... */\n    tag_205:\n        /* \"src/tokens/QTOVToken_flattened.sol\":20918:20923  value */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":20888:20899  _allowances */\n      0x01\n        /* \"src/tokens/QTOVToken_flattened.sol\":20888:20906  _allowances[owner] */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":20900:20905  owner */\n      dup7\n        /* \"src/tokens/QTOVToken_flattened.sol\":20888:20906  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/tokens/QTOVToken_flattened.sol\":20888:20915  _allowances[owner][spender] */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":20907:20914  spender */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":20888:20915  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/tokens/QTOVToken_flattened.sol\":20888:20923  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":20937:20946  emitEvent */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":20933:21009  if (emitEvent) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":20983:20990  spender */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":20967:20998  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":20976:20981  owner */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":20967:20998  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"src/tokens/QTOVToken_flattened.sol\":20992:20997  value */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":20967:20998  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/tokens/QTOVToken_flattened.sol\":20933:21009  if (emitEvent) {... */\n    tag_207:\n        /* \"src/tokens/QTOVToken_flattened.sol\":20583:21015  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/tokens/QTOVToken_flattened.sol\":16890:17997  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_182:\n        /* \"src/tokens/QTOVToken_flattened.sol\":16995:16996  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":16979:16997  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":16979:16983  from */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":16979:16997  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":16975:17515  if (from == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":17131:17136  value */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":17115:17127  _totalSupply */\n      0x02\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17115:17136  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":16975:17515  if (from == address(0)) {... */\n      jump(tag_213)\n    tag_210:\n        /* \"src/tokens/QTOVToken_flattened.sol\":17167:17186  uint256 fromBalance */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17189:17198  _balances */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":17189:17204  _balances[from] */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17199:17203  from */\n      dup6\n        /* \"src/tokens/QTOVToken_flattened.sol\":17189:17204  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/tokens/QTOVToken_flattened.sol\":17167:17204  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":17236:17241  value */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":17222:17233  fromBalance */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":17222:17241  fromBalance < value */\n      lt\n        /* \"src/tokens/QTOVToken_flattened.sol\":17218:17333  if (fromBalance < value) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":17293:17297  from */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":17299:17310  fromBalance */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":17312:17317  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":17268:17318  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/tokens/QTOVToken_flattened.sol\":17218:17333  if (fromBalance < value) {... */\n    tag_214:\n        /* \"src/tokens/QTOVToken_flattened.sol\":17485:17490  value */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":17471:17482  fromBalance */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":17471:17490  fromBalance - value */\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":17453:17462  _balances */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17453:17468  _balances[from] */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":17463:17467  from */\n      dup7\n        /* \"src/tokens/QTOVToken_flattened.sol\":17453:17468  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/tokens/QTOVToken_flattened.sol\":17453:17490  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":17153:17515  {... */\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":16975:17515  if (from == address(0)) {... */\n    tag_213:\n        /* \"src/tokens/QTOVToken_flattened.sol\":17543:17544  0 */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17529:17545  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":17529:17531  to */\n      dup3\n        /* \"src/tokens/QTOVToken_flattened.sol\":17529:17545  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/tokens/QTOVToken_flattened.sol\":17525:17950  if (to == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"src/tokens/QTOVToken_flattened.sol\":17708:17713  value */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":17692:17704  _totalSupply */\n      0x02\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17692:17713  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":17525:17950  if (to == address(0)) {... */\n      jump(tag_217)\n    tag_216:\n        /* \"src/tokens/QTOVToken_flattened.sol\":17920:17925  value */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":17903:17912  _balances */\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17903:17916  _balances[to] */\n      dup1\n        /* \"src/tokens/QTOVToken_flattened.sol\":17913:17915  to */\n      dup5\n        /* \"src/tokens/QTOVToken_flattened.sol\":17903:17916  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/tokens/QTOVToken_flattened.sol\":17903:17925  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/tokens/QTOVToken_flattened.sol\":17525:17950  if (to == address(0)) {... */\n    tag_217:\n        /* \"src/tokens/QTOVToken_flattened.sol\":17980:17982  to */\n      dup2\n        /* \"src/tokens/QTOVToken_flattened.sol\":17965:17990  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/tokens/QTOVToken_flattened.sol\":17974:17978  from */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":17965:17990  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/tokens/QTOVToken_flattened.sol\":17984:17989  value */\n      dup4\n        /* \"src/tokens/QTOVToken_flattened.sol\":17965:17990  Transfer(from, to, value) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/tokens/QTOVToken_flattened.sol\":16890:17997  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_219:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_220:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_221:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_246:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_246)\n    tag_248:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_222:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_223:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_251\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_219\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":818:889   */\n      tag_252\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_220\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_253\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_221\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":988:1017   */\n      tag_254\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_222\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_28:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_256\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_223\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_225:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_227:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_228:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_262\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_227\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_229:\n        /* \"#utility.yul\":1983:2007   */\n      tag_264\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_228\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_265:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_230:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_267\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_229\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_231:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_232:\n        /* \"#utility.yul\":2339:2363   */\n      tag_270\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_231\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_271:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_233:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_273\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_232\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_31:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_276\n      tag_225\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2632:2751   */\n    tag_275:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_277\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_230\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_278\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_233\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_234:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_235:\n        /* \"#utility.yul\":3196:3217   */\n      tag_281\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_234\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_34:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_283\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_235\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_236:\n        /* \"#utility.yul\":3533:3557   */\n      tag_285\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_231\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_38:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_287\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_236\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_41:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_290\n      tag_225\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3908:4027   */\n    tag_289:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_291\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_230\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_292\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_230\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_293\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_233\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_237:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_238:\n        /* \"#utility.yul\":4598:4620   */\n      tag_296\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_237\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_47:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_298\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_238\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_53:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_301\n      tag_225\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4929:5048   */\n    tag_300:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_302\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_233\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_57:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_305\n      tag_225\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5264:5383   */\n    tag_304:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_306\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_230\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_239:\n        /* \"#utility.yul\":5610:5634   */\n      tag_308\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_228\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_68:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_310\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_239\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_87:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_313\n      tag_225\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5968:6087   */\n    tag_312:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_314\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_230\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_315\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_230\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_240:\n        /* \"#utility.yul\":6403:6480   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6393:6481   */\n      mstore\n        /* \"#utility.yul\":6500:6504   */\n      0x22\n        /* \"#utility.yul\":6497:6498   */\n      0x04\n        /* \"#utility.yul\":6490:6505   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x24\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6529   */\n      revert\n        /* \"#utility.yul\":6541:6861   */\n    tag_98:\n        /* \"#utility.yul\":6585:6591   */\n      0x00\n        /* \"#utility.yul\":6622:6623   */\n      0x02\n        /* \"#utility.yul\":6616:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6624   */\n      div\n        /* \"#utility.yul\":6602:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6670   */\n      0x01\n        /* \"#utility.yul\":6663:6667   */\n      dup3\n        /* \"#utility.yul\":6659:6671   */\n      and\n        /* \"#utility.yul\":6690:6708   */\n      dup1\n        /* \"#utility.yul\":6680:6761   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":6746:6750   */\n      0x7f\n        /* \"#utility.yul\":6738:6744   */\n      dup3\n        /* \"#utility.yul\":6734:6751   */\n      and\n        /* \"#utility.yul\":6724:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_318:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6797:6811   */\n      lt\n        /* \"#utility.yul\":6777:6795   */\n      dup2\n        /* \"#utility.yul\":6774:6812   */\n      sub\n        /* \"#utility.yul\":6771:6855   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":6827:6845   */\n      tag_320\n      tag_240\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6771:6855   */\n    tag_319:\n        /* \"#utility.yul\":6592:6861   */\n      pop\n        /* \"#utility.yul\":6541:6861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7309   */\n    tag_174:\n        /* \"#utility.yul\":7016:7020   */\n      0x00\n        /* \"#utility.yul\":7054:7056   */\n      0x60\n        /* \"#utility.yul\":7043:7052   */\n      dup3\n        /* \"#utility.yul\":7039:7057   */\n      add\n        /* \"#utility.yul\":7031:7057   */\n      swap1\n      pop\n        /* \"#utility.yul\":7067:7138   */\n      tag_322\n        /* \"#utility.yul\":7135:7136   */\n      0x00\n        /* \"#utility.yul\":7124:7133   */\n      dup4\n        /* \"#utility.yul\":7120:7137   */\n      add\n        /* \"#utility.yul\":7111:7117   */\n      dup7\n        /* \"#utility.yul\":7067:7138   */\n      tag_239\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7148:7220   */\n      tag_323\n        /* \"#utility.yul\":7216:7218   */\n      0x20\n        /* \"#utility.yul\":7205:7214   */\n      dup4\n        /* \"#utility.yul\":7201:7219   */\n      add\n        /* \"#utility.yul\":7192:7198   */\n      dup6\n        /* \"#utility.yul\":7148:7220   */\n      tag_236\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7230:7302   */\n      tag_324\n        /* \"#utility.yul\":7298:7300   */\n      0x40\n        /* \"#utility.yul\":7287:7296   */\n      dup4\n        /* \"#utility.yul\":7283:7301   */\n      add\n        /* \"#utility.yul\":7274:7280   */\n      dup5\n        /* \"#utility.yul\":7230:7302   */\n      tag_236\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6867:7309   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7315:7495   */\n    tag_241:\n        /* \"#utility.yul\":7363:7440   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7360:7361   */\n      0x00\n        /* \"#utility.yul\":7353:7441   */\n      mstore\n        /* \"#utility.yul\":7460:7464   */\n      0x11\n        /* \"#utility.yul\":7457:7458   */\n      0x04\n        /* \"#utility.yul\":7450:7465   */\n      mstore\n        /* \"#utility.yul\":7484:7488   */\n      0x24\n        /* \"#utility.yul\":7481:7482   */\n      0x00\n        /* \"#utility.yul\":7474:7489   */\n      revert\n        /* \"#utility.yul\":7501:7692   */\n    tag_212:\n        /* \"#utility.yul\":7541:7544   */\n      0x00\n        /* \"#utility.yul\":7560:7580   */\n      tag_327\n        /* \"#utility.yul\":7578:7579   */\n      dup3\n        /* \"#utility.yul\":7560:7580   */\n      tag_231\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7555:7580   */\n      swap2\n      pop\n        /* \"#utility.yul\":7594:7614   */\n      tag_328\n        /* \"#utility.yul\":7612:7613   */\n      dup4\n        /* \"#utility.yul\":7594:7614   */\n      tag_231\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7589:7614   */\n      swap3\n      pop\n        /* \"#utility.yul\":7637:7638   */\n      dup3\n        /* \"#utility.yul\":7634:7635   */\n      dup3\n        /* \"#utility.yul\":7630:7639   */\n      add\n        /* \"#utility.yul\":7623:7639   */\n      swap1\n      pop\n        /* \"#utility.yul\":7658:7661   */\n      dup1\n        /* \"#utility.yul\":7655:7656   */\n      dup3\n        /* \"#utility.yul\":7652:7662   */\n      gt\n        /* \"#utility.yul\":7649:7685   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":7665:7683   */\n      tag_330\n      tag_241\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7649:7685   */\n    tag_329:\n        /* \"#utility.yul\":7501:7692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a4f2223a980065cb09e0be5c2ad8d9aa62dcb953fd61a0b44b4e745864c8bd7b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_991": {
									"entryPoint": null,
									"id": 991,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 341,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6778:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001cc038038062001cc083398181016040528101906200003691906200027d565b806040518060400160405280600881526020017f5175616e746f76610000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f51544f56000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000511565b508060049081620000c6919062000511565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000133919062000606565b60405180910390fd5b6200014d816200015560201b60201c565b505062000621565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000247826200021c565b9050919050565b62000259816200023b565b811462000264575f80fd5b50565b5f8151905062000277816200024e565b92915050565b5f6020828403121562000295576200029462000218565b5b5f620002a48482850162000267565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200032957607f821691505b6020821081036200033f576200033e620002e4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003a37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000366565b620003af868362000366565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003f9620003f3620003ed84620003c7565b620003d0565b620003c7565b9050919050565b5f819050919050565b6200041483620003d9565b6200042c620004238262000400565b84845462000372565b825550505050565b5f90565b6200044262000434565b6200044f81848462000409565b505050565b5b8181101562000476576200046a5f8262000438565b60018101905062000455565b5050565b601f821115620004c5576200048f8162000345565b6200049a8462000357565b81016020851015620004aa578190505b620004c2620004b98562000357565b83018262000454565b50505b505050565b5f82821c905092915050565b5f620004e75f1984600802620004ca565b1980831691505092915050565b5f620005018383620004d6565b9150826002028217905092915050565b6200051c82620002ad565b67ffffffffffffffff811115620005385762000537620002b7565b5b62000544825462000311565b620005518282856200047a565b5f60209050601f83116001811462000587575f841562000572578287015190505b6200057e8582620004f4565b865550620005ed565b601f198416620005978662000345565b5f5b82811015620005c05784890151825560018201915060208501945060208101905062000599565b86831015620005e05784890151620005dc601f891682620004d6565b8355505b6001600288020188555050505b505050505050565b62000600816200023b565b82525050565b5f6020820190506200061b5f830184620005f5565b92915050565b611691806200062f5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c806379cc6790116100ab5780639dc29fac1161006f5780639dc29fac146102e1578063a9059cbb146102fd578063dd62ed3e1461032d578063e78cea921461035d578063f2fde38b1461037b5761011f565b806379cc67901461024f5780638da5cb5b1461026b5780638dd148021461028957806395d89b41146102a557806396a0c73f146102c35761011f565b8063313ce567116100f2578063313ce567146101bf57806340c10f19146101dd57806342966c68146101f957806370a0823114610215578063715018a6146102455761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd1461017157806323b872dd1461018f575b5f80fd5b61012b610397565b60405161013891906112df565b60405180910390f35b61015b60048036038101906101569190611390565b610427565b60405161016891906113e8565b60405180910390f35b610179610449565b6040516101869190611410565b60405180910390f35b6101a960048036038101906101a49190611429565b610452565b6040516101b691906113e8565b60405180910390f35b6101c7610480565b6040516101d49190611494565b60405180910390f35b6101f760048036038101906101f29190611390565b610488565b005b610213600480360381019061020e91906114ad565b610562565b005b61022f600480360381019061022a91906114d8565b610576565b60405161023c9190611410565b60405180910390f35b61024d6105bb565b005b61026960048036038101906102649190611390565b6105ce565b005b610273610640565b6040516102809190611512565b60405180910390f35b6102a3600480360381019061029e91906114d8565b610668565b005b6102ad6107e5565b6040516102ba91906112df565b60405180910390f35b6102cb610875565b6040516102d891906113e8565b60405180910390f35b6102fb60048036038101906102f69190611390565b610888565b005b61031760048036038101906103129190611390565b61091c565b60405161032491906113e8565b60405180910390f35b6103476004803603810190610342919061152b565b61093e565b6040516103549190611410565b60405180910390f35b6103656109c0565b6040516103729190611512565b60405180910390f35b610395600480360381019061039091906114d8565b6109e5565b005b6060600380546103a690611596565b80601f01602080910402602001604051908101604052809291908181526020018280546103d290611596565b801561041d5780601f106103f45761010080835404028352916020019161041d565b820191905f5260205f20905b81548152906001019060200180831161040057829003601f168201915b5050505050905090565b5f80610431610a69565b905061043e818585610a70565b600191505092915050565b5f600254905090565b5f8061045c610a69565b9050610469858285610a82565b610474858585610b15565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050e576040517f38da3b1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660149054906101000a900460ff16610554576040517f86255f7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055e8282610c05565b5050565b61057361056d610a69565b82610c84565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105c3610d03565b6105cc5f610d8a565b565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036106315761062c8282610c84565b61063c565b61063b8282610e4d565b5b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610670610d03565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d5576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660149054906101000a900460ff16158061077e57508073ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156107e2576001600660146101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a60405160405180910390a25b50565b6060600480546107f490611596565b80601f016020809104026020016040519081016040528092919081815260200182805461082090611596565b801561086b5780601f106108425761010080835404028352916020019161086b565b820191905f5260205f20905b81548152906001019060200180831161084e57829003601f168201915b5050505050905090565b600660149054906101000a900460ff1681565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090e576040517f38da3b1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109188282610c84565b5050565b5f80610926610a69565b9050610933818585610b15565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109ed610d03565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a5d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a549190611512565b60405180910390fd5b610a6681610d8a565b50565b5f33905090565b610a7d8383836001610e6d565b505050565b5f610a8d848461093e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b0f5781811015610b00578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610af7939291906115c6565b60405180910390fd5b610b0e84848484035f610e6d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b85575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b7c9190611512565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bec9190611512565b60405180910390fd5b610c0083838361103c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c75575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c6c9190611512565b60405180910390fd5b610c805f838361103c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf4575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ceb9190611512565b60405180910390fd5b610cff825f8361103c565b5050565b610d0b610a69565b73ffffffffffffffffffffffffffffffffffffffff16610d29610640565b73ffffffffffffffffffffffffffffffffffffffff1614610d8857610d4c610a69565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d7f9190611512565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e5f82610e59610a69565b83610a82565b610e698282610c84565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610edd575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ed49190611512565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f4d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f449190611512565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611036578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161102d9190611410565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361108c578060025f8282546110809190611628565b9250508190555061115a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611115578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161110c939291906115c6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a1578060025f82825403925050819055506111eb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112489190611410565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561128c578082015181840152602081019050611271565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6112b182611255565b6112bb818561125f565b93506112cb81856020860161126f565b6112d481611297565b840191505092915050565b5f6020820190508181035f8301526112f781846112a7565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61132c82611303565b9050919050565b61133c81611322565b8114611346575f80fd5b50565b5f8135905061135781611333565b92915050565b5f819050919050565b61136f8161135d565b8114611379575f80fd5b50565b5f8135905061138a81611366565b92915050565b5f80604083850312156113a6576113a56112ff565b5b5f6113b385828601611349565b92505060206113c48582860161137c565b9150509250929050565b5f8115159050919050565b6113e2816113ce565b82525050565b5f6020820190506113fb5f8301846113d9565b92915050565b61140a8161135d565b82525050565b5f6020820190506114235f830184611401565b92915050565b5f805f606084860312156114405761143f6112ff565b5b5f61144d86828701611349565b935050602061145e86828701611349565b925050604061146f8682870161137c565b9150509250925092565b5f60ff82169050919050565b61148e81611479565b82525050565b5f6020820190506114a75f830184611485565b92915050565b5f602082840312156114c2576114c16112ff565b5b5f6114cf8482850161137c565b91505092915050565b5f602082840312156114ed576114ec6112ff565b5b5f6114fa84828501611349565b91505092915050565b61150c81611322565b82525050565b5f6020820190506115255f830184611503565b92915050565b5f8060408385031215611541576115406112ff565b5b5f61154e85828601611349565b925050602061155f85828601611349565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115ad57607f821691505b6020821081036115c0576115bf611569565b5b50919050565b5f6060820190506115d95f830186611503565b6115e66020830185611401565b6115f36040830184611401565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116328261135d565b915061163d8361135d565b9250828201905080821115611655576116546115fb565b5b9291505056fea2646970667358221220a4f2223a980065cb09e0be5c2ad8d9aa62dcb953fd61a0b44b4e745864c8bd7b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CC0 CODESIZE SUB DUP1 PUSH3 0x1CC0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x27D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5175616E746F7661000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x51544F5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x511 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x511 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x133 SWAP2 SWAP1 PUSH3 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14D DUP2 PUSH3 0x155 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x621 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x247 DUP3 PUSH3 0x21C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x259 DUP2 PUSH3 0x23B JUMP JUMPDEST DUP2 EQ PUSH3 0x264 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x277 DUP2 PUSH3 0x24E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x295 JUMPI PUSH3 0x294 PUSH3 0x218 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2A4 DUP5 DUP3 DUP6 ADD PUSH3 0x267 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x329 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x33F JUMPI PUSH3 0x33E PUSH3 0x2E4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x3A3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x366 JUMP JUMPDEST PUSH3 0x3AF DUP7 DUP4 PUSH3 0x366 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3F9 PUSH3 0x3F3 PUSH3 0x3ED DUP5 PUSH3 0x3C7 JUMP JUMPDEST PUSH3 0x3D0 JUMP JUMPDEST PUSH3 0x3C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x414 DUP4 PUSH3 0x3D9 JUMP JUMPDEST PUSH3 0x42C PUSH3 0x423 DUP3 PUSH3 0x400 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x372 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x442 PUSH3 0x434 JUMP JUMPDEST PUSH3 0x44F DUP2 DUP5 DUP5 PUSH3 0x409 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x476 JUMPI PUSH3 0x46A PUSH0 DUP3 PUSH3 0x438 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x455 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C5 JUMPI PUSH3 0x48F DUP2 PUSH3 0x345 JUMP JUMPDEST PUSH3 0x49A DUP5 PUSH3 0x357 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4AA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4C2 PUSH3 0x4B9 DUP6 PUSH3 0x357 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x454 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4E7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4CA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x501 DUP4 DUP4 PUSH3 0x4D6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x51C DUP3 PUSH3 0x2AD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x538 JUMPI PUSH3 0x537 PUSH3 0x2B7 JUMP JUMPDEST JUMPDEST PUSH3 0x544 DUP3 SLOAD PUSH3 0x311 JUMP JUMPDEST PUSH3 0x551 DUP3 DUP3 DUP6 PUSH3 0x47A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x587 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x572 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x57E DUP6 DUP3 PUSH3 0x4F4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5ED JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x597 DUP7 PUSH3 0x345 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5C0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x599 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5E0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5DC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4D6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x600 DUP2 PUSH3 0x23B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x61B PUSH0 DUP4 ADD DUP5 PUSH3 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1691 DUP1 PUSH3 0x62F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xE78CEA92 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DD14802 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x96A0C73F EQ PUSH2 0x2C3 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3A6 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x400 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x431 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH2 0x43E DUP2 DUP6 DUP6 PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x45C PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH2 0x469 DUP6 DUP3 DUP6 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x474 DUP6 DUP6 DUP6 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH32 0x38DA3B1500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x86255F7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55E DUP3 DUP3 PUSH2 0xC05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x56D PUSH2 0xA69 JUMP JUMPDEST DUP3 PUSH2 0xC84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C3 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x5CC PUSH0 PUSH2 0xD8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x631 JUMPI PUSH2 0x62C DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0x63B DUP3 DUP3 PUSH2 0xE4D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x670 PUSH2 0xD03 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x77E JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1694C0B21FDCEFF6411DAED547C7463C2341B9695387BC82595B5B9B1851D4A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7F4 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x820 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x842 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x38DA3B1500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x926 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH2 0x933 DUP2 DUP6 DUP6 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x9ED PUSH2 0xD03 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA66 DUP2 PUSH2 0xD8A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA7D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA8D DUP5 DUP5 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB0F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB00 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE6D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEC SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC00 DUP4 DUP4 DUP4 PUSH2 0x103C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC80 PUSH0 DUP4 DUP4 PUSH2 0x103C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFF DUP3 PUSH0 DUP4 PUSH2 0x103C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD0B PUSH2 0xA69 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD29 PUSH2 0x640 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD88 JUMPI PUSH2 0xD4C PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7F SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE5F DUP3 PUSH2 0xE59 PUSH2 0xA69 JUMP JUMPDEST DUP4 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0xE69 DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF44 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1036 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x115A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1115 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11EB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1248 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x128C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1271 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x1255 JUMP JUMPDEST PUSH2 0x12BB DUP2 DUP6 PUSH2 0x125F JUMP JUMPDEST SWAP4 POP PUSH2 0x12CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x126F JUMP JUMPDEST PUSH2 0x12D4 DUP2 PUSH2 0x1297 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F7 DUP2 DUP5 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x132C DUP3 PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133C DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP2 EQ PUSH2 0x1346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1357 DUP2 PUSH2 0x1333 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136F DUP2 PUSH2 0x135D JUMP JUMPDEST DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138A DUP2 PUSH2 0x1366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13C4 DUP6 DUP3 DUP7 ADD PUSH2 0x137C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x13CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FB PUSH0 DUP4 ADD DUP5 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140A DUP2 PUSH2 0x135D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1423 PUSH0 DUP4 ADD DUP5 PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144D DUP7 DUP3 DUP8 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x145E DUP7 DUP3 DUP8 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x146F DUP7 DUP3 DUP8 ADD PUSH2 0x137C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH2 0x1479 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C2 JUMPI PUSH2 0x14C1 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14CF DUP5 DUP3 DUP6 ADD PUSH2 0x137C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14EC PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FA DUP5 DUP3 DUP6 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x150C DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1525 PUSH0 DUP4 ADD DUP5 PUSH2 0x1503 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154E DUP6 DUP3 DUP7 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x155F DUP6 DUP3 DUP7 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x1569 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH0 DUP4 ADD DUP7 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1401 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1632 DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP2 POP PUSH2 0x163D DUP4 PUSH2 0x135D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 CALLCODE 0x22 GASPRICE SWAP9 STOP PUSH6 0xCB09E0BE5C2A 0xD8 0xD9 0xAA PUSH3 0xDCB953 REVERT PUSH2 0xA0B4 0x4B 0x4E PUSH21 0x5864C8BD7B64736F6C634300081400330000000000 ",
							"sourceMap": "26060:1502:0:-:0;;;26371:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26453:12;12483:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12557:5;12549;:13;;;;;;:::i;:::-;;12582:7;12572;:17;;;;;;:::i;:::-;;12483:113;;24190:1;24166:26;;:12;:26;;;24162:95;;24243:1;24215:31;;;;;;;;;;;:::i;:::-;;;;;;;;24162:95;24266:32;24285:12;24266:18;;;:32;;:::i;:::-;24118:187;26371:98;26060:1502;;25805:187;25878:16;25897:6;;;;;;;;;;;25878:25;;25922:8;25913:6;;:17;;;;;;;;;;;;;;;;;;25976:8;25945:40;;25966:8;25945:40;;;;;;;;;;;;25868:124;25805:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;26060:1502:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 2672,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 3693,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_644": {
									"entryPoint": 3204,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_894": {
									"entryPoint": 3331,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 3077,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 2665,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 2690,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 3466,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2837,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 4156,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": 2366,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1063,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1398,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@bridgeInitialized_974": {
									"entryPoint": 2165,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bridge_972": {
									"entryPoint": 2496,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_1105": {
									"entryPoint": 1486,
									"id": 1105,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnFrom_811": {
									"entryPoint": 3661,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1077": {
									"entryPoint": 2184,
									"id": 1077,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_790": {
									"entryPoint": 1378,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 1152,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1062": {
									"entryPoint": 1160,
									"id": 1062,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 919,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_877": {
									"entryPoint": 1600,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_908": {
									"entryPoint": 1467,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBridge_1041": {
									"entryPoint": 1640,
									"id": 1041,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 2021,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1097,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1106,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_936": {
									"entryPoint": 2533,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 2332,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5627,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7695:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:1"
															},
															"nodeType": "YulIf",
															"src": "4929:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:1",
														"type": ""
													}
												],
												"src": "4853:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:1"
															},
															"nodeType": "YulIf",
															"src": "5264:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:1",
														"type": ""
													}
												],
												"src": "5188:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:1",
														"type": ""
													}
												],
												"src": "5523:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:1",
														"type": ""
													}
												],
												"src": "5647:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:32:1"
															},
															"nodeType": "YulIf",
															"src": "5968:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6097:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6141:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6224:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6269:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5931:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5951:6:1",
														"type": ""
													}
												],
												"src": "5875:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6383:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6403:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6393:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6393:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6497:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6500:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6490:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6355:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6592:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6602:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6616:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6622:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6633:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6663:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6637:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6710:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6724:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6738:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6746:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6734:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6690:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6683:26:1"
															},
															"nodeType": "YulIf",
															"src": "6680:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6813:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6827:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6827:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:38:1"
															},
															"nodeType": "YulIf",
															"src": "6771:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6576:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6585:6:1",
														"type": ""
													}
												],
												"src": "6541:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7021:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7043:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7054:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7031:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7135:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7120:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7067:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7067:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7067:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7192:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7216:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7201:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7148:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7148:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7274:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7298:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7283:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7230:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6977:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6989:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6997:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7005:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7016:4:1",
														"type": ""
													}
												],
												"src": "6867:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7343:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7360:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7363:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7353:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7457:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7460:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7450:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7481:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7484:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7315:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7545:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7555:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7578:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7560:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7560:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7555:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7589:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7612:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7594:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7589:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7623:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7634:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7637:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7623:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7663:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7665:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7665:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7665:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7655:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7658:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7652:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7652:10:1"
															},
															"nodeType": "YulIf",
															"src": "7649:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7532:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7535:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7541:3:1",
														"type": ""
													}
												],
												"src": "7501:191:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c806379cc6790116100ab5780639dc29fac1161006f5780639dc29fac146102e1578063a9059cbb146102fd578063dd62ed3e1461032d578063e78cea921461035d578063f2fde38b1461037b5761011f565b806379cc67901461024f5780638da5cb5b1461026b5780638dd148021461028957806395d89b41146102a557806396a0c73f146102c35761011f565b8063313ce567116100f2578063313ce567146101bf57806340c10f19146101dd57806342966c68146101f957806370a0823114610215578063715018a6146102455761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd1461017157806323b872dd1461018f575b5f80fd5b61012b610397565b60405161013891906112df565b60405180910390f35b61015b60048036038101906101569190611390565b610427565b60405161016891906113e8565b60405180910390f35b610179610449565b6040516101869190611410565b60405180910390f35b6101a960048036038101906101a49190611429565b610452565b6040516101b691906113e8565b60405180910390f35b6101c7610480565b6040516101d49190611494565b60405180910390f35b6101f760048036038101906101f29190611390565b610488565b005b610213600480360381019061020e91906114ad565b610562565b005b61022f600480360381019061022a91906114d8565b610576565b60405161023c9190611410565b60405180910390f35b61024d6105bb565b005b61026960048036038101906102649190611390565b6105ce565b005b610273610640565b6040516102809190611512565b60405180910390f35b6102a3600480360381019061029e91906114d8565b610668565b005b6102ad6107e5565b6040516102ba91906112df565b60405180910390f35b6102cb610875565b6040516102d891906113e8565b60405180910390f35b6102fb60048036038101906102f69190611390565b610888565b005b61031760048036038101906103129190611390565b61091c565b60405161032491906113e8565b60405180910390f35b6103476004803603810190610342919061152b565b61093e565b6040516103549190611410565b60405180910390f35b6103656109c0565b6040516103729190611512565b60405180910390f35b610395600480360381019061039091906114d8565b6109e5565b005b6060600380546103a690611596565b80601f01602080910402602001604051908101604052809291908181526020018280546103d290611596565b801561041d5780601f106103f45761010080835404028352916020019161041d565b820191905f5260205f20905b81548152906001019060200180831161040057829003601f168201915b5050505050905090565b5f80610431610a69565b905061043e818585610a70565b600191505092915050565b5f600254905090565b5f8061045c610a69565b9050610469858285610a82565b610474858585610b15565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050e576040517f38da3b1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660149054906101000a900460ff16610554576040517f86255f7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055e8282610c05565b5050565b61057361056d610a69565b82610c84565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105c3610d03565b6105cc5f610d8a565b565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036106315761062c8282610c84565b61063c565b61063b8282610e4d565b5b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610670610d03565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d5576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660149054906101000a900460ff16158061077e57508073ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156107e2576001600660146101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a60405160405180910390a25b50565b6060600480546107f490611596565b80601f016020809104026020016040519081016040528092919081815260200182805461082090611596565b801561086b5780601f106108425761010080835404028352916020019161086b565b820191905f5260205f20905b81548152906001019060200180831161084e57829003601f168201915b5050505050905090565b600660149054906101000a900460ff1681565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090e576040517f38da3b1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109188282610c84565b5050565b5f80610926610a69565b9050610933818585610b15565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109ed610d03565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a5d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a549190611512565b60405180910390fd5b610a6681610d8a565b50565b5f33905090565b610a7d8383836001610e6d565b505050565b5f610a8d848461093e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b0f5781811015610b00578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610af7939291906115c6565b60405180910390fd5b610b0e84848484035f610e6d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b85575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b7c9190611512565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bec9190611512565b60405180910390fd5b610c0083838361103c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c75575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c6c9190611512565b60405180910390fd5b610c805f838361103c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf4575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ceb9190611512565b60405180910390fd5b610cff825f8361103c565b5050565b610d0b610a69565b73ffffffffffffffffffffffffffffffffffffffff16610d29610640565b73ffffffffffffffffffffffffffffffffffffffff1614610d8857610d4c610a69565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d7f9190611512565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e5f82610e59610a69565b83610a82565b610e698282610c84565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610edd575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ed49190611512565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f4d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f449190611512565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611036578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161102d9190611410565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361108c578060025f8282546110809190611628565b9250508190555061115a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611115578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161110c939291906115c6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111a1578060025f82825403925050819055506111eb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112489190611410565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561128c578082015181840152602081019050611271565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6112b182611255565b6112bb818561125f565b93506112cb81856020860161126f565b6112d481611297565b840191505092915050565b5f6020820190508181035f8301526112f781846112a7565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61132c82611303565b9050919050565b61133c81611322565b8114611346575f80fd5b50565b5f8135905061135781611333565b92915050565b5f819050919050565b61136f8161135d565b8114611379575f80fd5b50565b5f8135905061138a81611366565b92915050565b5f80604083850312156113a6576113a56112ff565b5b5f6113b385828601611349565b92505060206113c48582860161137c565b9150509250929050565b5f8115159050919050565b6113e2816113ce565b82525050565b5f6020820190506113fb5f8301846113d9565b92915050565b61140a8161135d565b82525050565b5f6020820190506114235f830184611401565b92915050565b5f805f606084860312156114405761143f6112ff565b5b5f61144d86828701611349565b935050602061145e86828701611349565b925050604061146f8682870161137c565b9150509250925092565b5f60ff82169050919050565b61148e81611479565b82525050565b5f6020820190506114a75f830184611485565b92915050565b5f602082840312156114c2576114c16112ff565b5b5f6114cf8482850161137c565b91505092915050565b5f602082840312156114ed576114ec6112ff565b5b5f6114fa84828501611349565b91505092915050565b61150c81611322565b82525050565b5f6020820190506115255f830184611503565b92915050565b5f8060408385031215611541576115406112ff565b5b5f61154e85828601611349565b925050602061155f85828601611349565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115ad57607f821691505b6020821081036115c0576115bf611569565b5b50919050565b5f6060820190506115d95f830186611503565b6115e66020830185611401565b6115f36040830184611401565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116328261135d565b915061163d8361135d565b9250828201905080821115611655576116546115fb565b5b9291505056fea2646970667358221220a4f2223a980065cb09e0be5c2ad8d9aa62dcb953fd61a0b44b4e745864c8bd7b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xE78CEA92 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DD14802 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x96A0C73F EQ PUSH2 0x2C3 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3A6 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x400 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x431 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH2 0x43E DUP2 DUP6 DUP6 PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x45C PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH2 0x469 DUP6 DUP3 DUP6 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x474 DUP6 DUP6 DUP6 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH32 0x38DA3B1500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x86255F7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55E DUP3 DUP3 PUSH2 0xC05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x56D PUSH2 0xA69 JUMP JUMPDEST DUP3 PUSH2 0xC84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C3 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x5CC PUSH0 PUSH2 0xD8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x631 JUMPI PUSH2 0x62C DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0x63B DUP3 DUP3 PUSH2 0xE4D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x670 PUSH2 0xD03 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x77E JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1694C0B21FDCEFF6411DAED547C7463C2341B9695387BC82595B5B9B1851D4A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7F4 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x820 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x842 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x38DA3B1500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x926 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP PUSH2 0x933 DUP2 DUP6 DUP6 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x9ED PUSH2 0xD03 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA66 DUP2 PUSH2 0xD8A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA7D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA8D DUP5 DUP5 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB0F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB00 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE6D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEC SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC00 DUP4 DUP4 DUP4 PUSH2 0x103C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC80 PUSH0 DUP4 DUP4 PUSH2 0x103C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFF DUP3 PUSH0 DUP4 PUSH2 0x103C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD0B PUSH2 0xA69 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD29 PUSH2 0x640 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD88 JUMPI PUSH2 0xD4C PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7F SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE5F DUP3 PUSH2 0xE59 PUSH2 0xA69 JUMP JUMPDEST DUP4 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0xE69 DUP3 DUP3 PUSH2 0xC84 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF44 SWAP2 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1036 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x115A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1115 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11EB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1248 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x128C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1271 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x1255 JUMP JUMPDEST PUSH2 0x12BB DUP2 DUP6 PUSH2 0x125F JUMP JUMPDEST SWAP4 POP PUSH2 0x12CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x126F JUMP JUMPDEST PUSH2 0x12D4 DUP2 PUSH2 0x1297 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F7 DUP2 DUP5 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x132C DUP3 PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133C DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP2 EQ PUSH2 0x1346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1357 DUP2 PUSH2 0x1333 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136F DUP2 PUSH2 0x135D JUMP JUMPDEST DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138A DUP2 PUSH2 0x1366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13C4 DUP6 DUP3 DUP7 ADD PUSH2 0x137C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x13CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FB PUSH0 DUP4 ADD DUP5 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140A DUP2 PUSH2 0x135D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1423 PUSH0 DUP4 ADD DUP5 PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144D DUP7 DUP3 DUP8 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x145E DUP7 DUP3 DUP8 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x146F DUP7 DUP3 DUP8 ADD PUSH2 0x137C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH2 0x1479 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C2 JUMPI PUSH2 0x14C1 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14CF DUP5 DUP3 DUP6 ADD PUSH2 0x137C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14EC PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FA DUP5 DUP3 DUP6 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x150C DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1525 PUSH0 DUP4 ADD DUP5 PUSH2 0x1503 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x12FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154E DUP6 DUP3 DUP7 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x155F DUP6 DUP3 DUP7 ADD PUSH2 0x1349 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x1569 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH0 DUP4 ADD DUP7 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1401 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1632 DUP3 PUSH2 0x135D JUMP JUMPDEST SWAP2 POP PUSH2 0x163D DUP4 PUSH2 0x135D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 CALLCODE 0x22 GASPRICE SWAP9 STOP PUSH6 0xCB09E0BE5C2A 0xD8 0xD9 0xAA PUSH3 0xDCB953 REVERT PUSH2 0xA0B4 0x4B 0x4E PUSH21 0x5864C8BD7B64736F6C634300081400330000000000 ",
							"sourceMap": "26060:1502:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12661:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14880:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13731:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15658:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13589:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26998:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22352:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13886:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25186:101;;;:::i;:::-;;27285:275;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24531:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26576:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12863:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26250:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27171:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14197:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14433:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26223:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25436:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12661:89;12706:13;12738:5;12731:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12661:89;:::o;14880:186::-;14953:4;14969:13;14985:12;:10;:12::i;:::-;14969:28;;15007:31;15016:5;15023:7;15032:5;15007:8;:31::i;:::-;15055:4;15048:11;;;14880:186;;;;:::o;13731:97::-;13783:7;13809:12;;13802:19;;13731:97;:::o;15658:244::-;15745:4;15761:15;15779:12;:10;:12::i;:::-;15761:30;;15801:37;15817:4;15823:7;15832:5;15801:15;:37::i;:::-;15848:26;15858:4;15864:2;15868:5;15848:9;:26::i;:::-;15891:4;15884:11;;;15658:244;;;;;:::o;13589:82::-;13638:5;13662:2;13655:9;;13589:82;:::o;26998:167::-;26525:6;;;;;;;;;;;26511:20;;:10;:20;;;26507:45;;26540:12;;;;;;;;;;;;;;26507:45;27083:17:::1;;;;;;;;;;;27078:53;;27109:22;;;;;;;;;;;;;;27078:53;27141:17;27147:2;27151:6;27141:5;:17::i;:::-;26998:167:::0;;:::o;22352:87::-;22406:26;22412:12;:10;:12::i;:::-;22426:5;22406;:26::i;:::-;22352:87;:::o;13886:116::-;13951:7;13977:9;:18;13987:7;13977:18;;;;;;;;;;;;;;;;13970:25;;13886:116;;;:::o;25186:101::-;24424:13;:11;:13::i;:::-;25250:30:::1;25277:1;25250:18;:30::i;:::-;25186:101::o:0;27285:275::-;27388:6;;;;;;;;;;;27374:20;;:10;:20;;;27370:142;;27459:22;27465:7;27474:6;27459:5;:22::i;:::-;27495:7;;27370:142;27522:31;27537:7;27546:6;27522:14;:31::i;:::-;27285:275;;;:::o;24531:85::-;24577:7;24603:6;;;;;;;;;;;24596:13;;24531:85;:::o;26576:416::-;24424:13;:11;:13::i;:::-;26664:1:::1;26645:21;;:7;:21;;::::0;26641:47:::1;;26675:13;;;;;;;;;;;;;;26641:47;26707:7;26698:6;;:16;;;;;;;;;;;;;;;;;;26826:17;;;;;;;;;;;26825:18;:39;;;;26857:7;26847:17;;:6;;;;;;;;;;;:17;;;;26825:39;26821:165;;;26900:4;26880:17;;:24;;;;;;;;;;;;;;;;;;26967:7;26953:22;;;;;;;;;;;;26821:165;26576:416:::0;:::o;12863:93::-;12910:13;12942:7;12935:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12863:93;:::o;26250:29::-;;;;;;;;;;;;;:::o;27171:108::-;26525:6;;;;;;;;;;;26511:20;;:10;:20;;;26507:45;;26540:12;;;;;;;;;;;;;;26507:45;27253:19:::1;27259:4;27265:6;27253:5;:19::i;:::-;27171:108:::0;;:::o;14197:178::-;14266:4;14282:13;14298:12;:10;:12::i;:::-;14282:28;;14320:27;14330:5;14337:2;14341:5;14320:9;:27::i;:::-;14364:4;14357:11;;;14197:178;;;;:::o;14433:140::-;14513:7;14539:11;:18;14551:5;14539:18;;;;;;;;;;;;;;;:27;14558:7;14539:27;;;;;;;;;;;;;;;;14532:34;;14433:140;;;;:::o;26223:21::-;;;;;;;;;;;;;:::o;25436:215::-;24424:13;:11;:13::i;:::-;25540:1:::1;25520:22;;:8;:22;;::::0;25516:91:::1;;25593:1;25565:31;;;;;;;;;;;:::i;:::-;;;;;;;;25516:91;25616:28;25635:8;25616:18;:28::i;:::-;25436:215:::0;:::o;4209:96::-;4262:7;4288:10;4281:17;;4209:96;:::o;19608:128::-;19692:37;19701:5;19708:7;19717:5;19724:4;19692:8;:37::i;:::-;19608:128;;;:::o;21297:476::-;21396:24;21423:25;21433:5;21440:7;21423:9;:25::i;:::-;21396:52;;21481:17;21462:16;:36;21458:309;;;21537:5;21518:16;:24;21514:130;;;21596:7;21605:16;21623:5;21569:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21514:130;21685:57;21694:5;21701:7;21729:5;21710:16;:24;21736:5;21685:8;:57::i;:::-;21458:309;21386:387;21297:476;;;:::o;16275:300::-;16374:1;16358:18;;:4;:18;;;16354:86;;16426:1;16399:30;;;;;;;;;;;:::i;:::-;;;;;;;;16354:86;16467:1;16453:16;;:2;:16;;;16449:86;;16521:1;16492:32;;;;;;;;;;;:::i;:::-;;;;;;;;16449:86;16544:24;16552:4;16558:2;16562:5;16544:7;:24::i;:::-;16275:300;;;:::o;18340:208::-;18429:1;18410:21;;:7;:21;;;18406:91;;18483:1;18454:32;;;;;;;;;;;:::i;:::-;;;;;;;;18406:91;18506:35;18522:1;18526:7;18535:5;18506:7;:35::i;:::-;18340:208;;:::o;18866:206::-;18955:1;18936:21;;:7;:21;;;18932:89;;19007:1;18980:30;;;;;;;;;;;:::i;:::-;;;;;;;;18932:89;19030:35;19038:7;19055:1;19059:5;19030:7;:35::i;:::-;18866:206;;:::o;24689:162::-;24759:12;:10;:12::i;:::-;24748:23;;:7;:5;:7::i;:::-;:23;;;24744:101;;24821:12;:10;:12::i;:::-;24794:40;;;;;;;;;;;:::i;:::-;;;;;;;;24744:101;24689:162::o;25805:187::-;25878:16;25897:6;;;;;;;;;;;25878:25;;25922:8;25913:6;;:17;;;;;;;;;;;;;;;;;;25976:8;25945:40;;25966:8;25945:40;;;;;;;;;;;;25868:124;25805:187;:::o;22755:158::-;22830:45;22846:7;22855:12;:10;:12::i;:::-;22869:5;22830:15;:45::i;:::-;22885:21;22891:7;22900:5;22885;:21::i;:::-;22755:158;;:::o;20583:432::-;20712:1;20695:19;;:5;:19;;;20691:89;;20766:1;20737:32;;;;;;;;;;;:::i;:::-;;;;;;;;20691:89;20812:1;20793:21;;:7;:21;;;20789:90;;20865:1;20837:31;;;;;;;;;;;:::i;:::-;;;;;;;;20789:90;20918:5;20888:11;:18;20900:5;20888:18;;;;;;;;;;;;;;;:27;20907:7;20888:27;;;;;;;;;;;;;;;:35;;;;20937:9;20933:76;;;20983:7;20967:31;;20976:5;20967:31;;;20992:5;20967:31;;;;;;:::i;:::-;;;;;;;;20933:76;20583:432;;;;:::o;16890:1107::-;16995:1;16979:18;;:4;:18;;;16975:540;;17131:5;17115:12;;:21;;;;;;;:::i;:::-;;;;;;;;16975:540;;;17167:19;17189:9;:15;17199:4;17189:15;;;;;;;;;;;;;;;;17167:37;;17236:5;17222:11;:19;17218:115;;;17293:4;17299:11;17312:5;17268:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17218:115;17485:5;17471:11;:19;17453:9;:15;17463:4;17453:15;;;;;;;;;;;;;;;:37;;;;17153:362;16975:540;17543:1;17529:16;;:2;:16;;;17525:425;;17708:5;17692:12;;:21;;;;;;;;;;;17525:425;;;17920:5;17903:9;:13;17913:2;17903:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17525:425;17980:2;17965:25;;17974:4;17965:25;;;17984:5;17965:25;;;;;;:::i;:::-;;;;;;;;16890:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:442::-;7016:4;7054:2;7043:9;7039:18;7031:26;;7067:71;7135:1;7124:9;7120:17;7111:6;7067:71;:::i;:::-;7148:72;7216:2;7205:9;7201:18;7192:6;7148:72;:::i;:::-;7230;7298:2;7287:9;7283:18;7274:6;7230:72;:::i;:::-;6867:442;;;;;;:::o;7315:180::-;7363:77;7360:1;7353:88;7460:4;7457:1;7450:15;7484:4;7481:1;7474:15;7501:191;7541:3;7560:20;7578:1;7560:20;:::i;:::-;7555:25;;7594:20;7612:1;7594:20;:::i;:::-;7589:25;;7637:1;7634;7630:9;7623:16;;7658:3;7655:1;7652:10;7649:36;;;7665:18;;:::i;:::-;7649:36;7501:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1155400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"bridge()": "2596",
								"bridgeInitialized()": "2628",
								"burn(address,uint256)": "infinite",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "361",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"setBridge(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26060,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26371,
									"end": 26469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26453,
									"end": 26465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "5175616E746F7661000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "PUSH",
									"source": 0,
									"value": "51544F5600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12557,
									"end": 12562,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12554,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12549,
									"end": 12562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12582,
									"end": 12589,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12579,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12572,
									"end": 12589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12483,
									"end": 12596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24190,
									"end": 24191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24166,
									"end": 24192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24166,
									"end": 24192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24166,
									"end": 24178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24166,
									"end": 24192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24166,
									"end": 24192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24166,
									"end": 24192,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24162,
									"end": 24257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24162,
									"end": 24257,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24243,
									"end": 24244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 24215,
									"end": 24246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24215,
									"end": 24246,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24162,
									"end": 24257,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24162,
									"end": 24257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24266,
									"end": 24298,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 24285,
									"end": 24297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24266,
									"end": 24284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24266,
									"end": 24284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24266,
									"end": 24284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 24266,
									"end": 24298,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24266,
									"end": 24298,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 24266,
									"end": 24298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24266,
									"end": 24298,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 24266,
									"end": 24298,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24118,
									"end": 24305,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26371,
									"end": 26469,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25805,
									"end": 25992,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 25805,
									"end": 25992,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25897,
									"end": 25903,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 25903,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 25903,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25922,
									"end": 25930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25919,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25913,
									"end": 25919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25913,
									"end": 25930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25976,
									"end": 25984,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25966,
									"end": 25974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25945,
									"end": 25985,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 25868,
									"end": 25992,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25805,
									"end": 25992,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25805,
									"end": 25992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26060,
									"end": 27562,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a4f2223a980065cb09e0be5c2ad8d9aa62dcb953fd61a0b44b4e745864c8bd7b64736f6c63430008140033",
									".code": [
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "E78CEA92"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "8DD14802"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "96A0C73F"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26060,
											"end": 27562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12661,
											"end": 12750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12661,
											"end": 12750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14880,
											"end": 15066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14880,
											"end": 15066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14880,
											"end": 15066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13731,
											"end": 13828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13731,
											"end": 13828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15658,
											"end": 15902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15658,
											"end": 15902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15658,
											"end": 15902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13589,
											"end": 13671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13589,
											"end": 13671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26998,
											"end": 27165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26998,
											"end": 27165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 22352,
											"end": 22439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 22352,
											"end": 22439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13886,
											"end": 14002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13886,
											"end": 14002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13886,
											"end": 14002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25186,
											"end": 25287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 27285,
											"end": 27560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27285,
											"end": 27560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24531,
											"end": 24616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24531,
											"end": 24616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26576,
											"end": 26992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26576,
											"end": 26992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12863,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12863,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26250,
											"end": 26279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26250,
											"end": 26279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 27171,
											"end": 27279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27171,
											"end": 27279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14197,
											"end": 14375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14197,
											"end": 14375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14197,
											"end": 14375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14433,
											"end": 14573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14433,
											"end": 14573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14433,
											"end": 14573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26223,
											"end": 26244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26223,
											"end": 26244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25436,
											"end": 25651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25436,
											"end": 25651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12706,
											"end": 12719,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12738,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12731,
											"end": 12743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12731,
											"end": 12743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14953,
											"end": 14957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14969,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14985,
											"end": 14997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14985,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14985,
											"end": 14997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14985,
											"end": 14997,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14985,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14969,
											"end": 14997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14969,
											"end": 14997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15016,
											"end": 15021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 15037,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15007,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15038,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15007,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15055,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15048,
											"end": 15059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15048,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15048,
											"end": 15059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14880,
											"end": 15066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13783,
											"end": 13790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13809,
											"end": 13821,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13809,
											"end": 13821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13802,
											"end": 13821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13802,
											"end": 13821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15761,
											"end": 15776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 15779,
											"end": 15789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15779,
											"end": 15791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15791,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 15779,
											"end": 15791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15761,
											"end": 15791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15761,
											"end": 15791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15801,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15817,
											"end": 15821,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15823,
											"end": 15830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15837,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15801,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15801,
											"end": 15838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15801,
											"end": 15838,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15801,
											"end": 15838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15848,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15858,
											"end": 15862,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15864,
											"end": 15866,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15868,
											"end": 15873,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15848,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15848,
											"end": 15874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15848,
											"end": 15874,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15848,
											"end": 15874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15891,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15884,
											"end": 15895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15884,
											"end": 15895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15884,
											"end": 15895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15658,
											"end": 15902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13638,
											"end": 13643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13662,
											"end": 13664,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13655,
											"end": 13664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13655,
											"end": 13664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26521,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "38DA3B1500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27083,
											"end": 27100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27078,
											"end": 27131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "86255F7400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27109,
											"end": 27131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27078,
											"end": 27131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27141,
											"end": 27158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27147,
											"end": 27149,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27151,
											"end": 27157,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27141,
											"end": 27146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 27141,
											"end": 27158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27141,
											"end": 27158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27141,
											"end": 27158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22412,
											"end": 22424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22412,
											"end": 22422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 22412,
											"end": 22424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22412,
											"end": 22424,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22412,
											"end": 22424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22426,
											"end": 22431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22406,
											"end": 22432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22432,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22406,
											"end": 22432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22352,
											"end": 22439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13951,
											"end": 13958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 13986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13987,
											"end": 13994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13970,
											"end": 13995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13970,
											"end": 13995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13886,
											"end": 14002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25186,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24424,
											"end": 24435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24424,
											"end": 24437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25250,
											"end": 25280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 25277,
											"end": 25278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25250,
											"end": 25268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 25250,
											"end": 25280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25250,
											"end": 25280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 25250,
											"end": 25280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27374,
											"end": 27394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27374,
											"end": 27394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27374,
											"end": 27384,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27374,
											"end": 27394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27374,
											"end": 27394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27374,
											"end": 27394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27370,
											"end": 27512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27370,
											"end": 27512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27459,
											"end": 27481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27465,
											"end": 27472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27459,
											"end": 27464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27459,
											"end": 27481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27459,
											"end": 27481,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27459,
											"end": 27481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27495,
											"end": 27502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27495,
											"end": 27502,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27370,
											"end": 27512,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27370,
											"end": 27512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27537,
											"end": 27544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27546,
											"end": 27552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 27522,
											"end": 27553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27553,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27522,
											"end": 27553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27285,
											"end": 27560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24603,
											"end": 24609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24531,
											"end": 24616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24424,
											"end": 24435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24424,
											"end": 24437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26664,
											"end": 26665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26645,
											"end": 26666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26645,
											"end": 26666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26645,
											"end": 26652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26645,
											"end": 26666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26645,
											"end": 26666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26645,
											"end": 26666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26641,
											"end": 26688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26675,
											"end": 26688,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26641,
											"end": 26688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26707,
											"end": 26714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26698,
											"end": 26704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26698,
											"end": 26714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26826,
											"end": 26843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26843,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26864,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26825,
											"end": 26864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26864,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26864,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26847,
											"end": 26864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26847,
											"end": 26853,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26847,
											"end": 26864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26864,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 26864,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26825,
											"end": 26864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26821,
											"end": 26986,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26821,
											"end": 26986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26821,
											"end": 26986,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26900,
											"end": 26904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26880,
											"end": 26897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26880,
											"end": 26897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26880,
											"end": 26904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26967,
											"end": 26974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E1694C0B21FDCEFF6411DAED547C7463C2341B9695387BC82595B5B9B1851D4A"
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26975,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 26821,
											"end": 26986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26821,
											"end": 26986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 12923,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12942,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12935,
											"end": 12949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12935,
											"end": 12949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26525,
											"end": 26531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26521,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26531,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "38DA3B1500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26507,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27259,
											"end": 27263,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27265,
											"end": 27271,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27253,
											"end": 27272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27253,
											"end": 27272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14266,
											"end": 14270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14282,
											"end": 14295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14298,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14298,
											"end": 14310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14310,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14298,
											"end": 14310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14320,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 14330,
											"end": 14335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14346,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14320,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14320,
											"end": 14347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14320,
											"end": 14347,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 14320,
											"end": 14347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14364,
											"end": 14368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14357,
											"end": 14368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14197,
											"end": 14375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14551,
											"end": 14556,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14558,
											"end": 14565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24424,
											"end": 24435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24424,
											"end": 24437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24424,
											"end": 24437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25540,
											"end": 25541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25520,
											"end": 25542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25520,
											"end": 25542,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 25528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 25542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25520,
											"end": 25542,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 25542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25516,
											"end": 25607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25516,
											"end": 25607,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25593,
											"end": 25594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25565,
											"end": 25596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25596,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25516,
											"end": 25607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25516,
											"end": 25607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25616,
											"end": 25644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25635,
											"end": 25643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25616,
											"end": 25634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 25616,
											"end": 25644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25616,
											"end": 25644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25616,
											"end": 25644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25436,
											"end": 25651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19608,
											"end": 19736,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19608,
											"end": 19736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19692,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19701,
											"end": 19706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19708,
											"end": 19715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19717,
											"end": 19722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19724,
											"end": 19728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19692,
											"end": 19700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19692,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19692,
											"end": 19729,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19692,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19608,
											"end": 19736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19608,
											"end": 19736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19608,
											"end": 19736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19608,
											"end": 19736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21297,
											"end": 21773,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21297,
											"end": 21773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21396,
											"end": 21420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21423,
											"end": 21448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21433,
											"end": 21438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21423,
											"end": 21432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 21423,
											"end": 21448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21423,
											"end": 21448,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21423,
											"end": 21448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21396,
											"end": 21448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21396,
											"end": 21448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21462,
											"end": 21478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21462,
											"end": 21498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21458,
											"end": 21767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21542,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21514,
											"end": 21644,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21514,
											"end": 21644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21514,
											"end": 21644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21596,
											"end": 21603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21623,
											"end": 21628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 21569,
											"end": 21629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21569,
											"end": 21629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21514,
											"end": 21644,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21514,
											"end": 21644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21685,
											"end": 21742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21694,
											"end": 21699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21701,
											"end": 21708,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21710,
											"end": 21726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21710,
											"end": 21734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21736,
											"end": 21741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21685,
											"end": 21693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21685,
											"end": 21742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21685,
											"end": 21742,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21685,
											"end": 21742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21767,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21458,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21297,
											"end": 21773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21297,
											"end": 21773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21297,
											"end": 21773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21297,
											"end": 21773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 16575,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16275,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16374,
											"end": 16375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16358,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16358,
											"end": 16376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16358,
											"end": 16362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16358,
											"end": 16376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16358,
											"end": 16376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16358,
											"end": 16376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16354,
											"end": 16440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16426,
											"end": 16427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16399,
											"end": 16429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16399,
											"end": 16429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16440,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16354,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16453,
											"end": 16469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16453,
											"end": 16469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16453,
											"end": 16455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16453,
											"end": 16469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16453,
											"end": 16469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16453,
											"end": 16469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16449,
											"end": 16535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16492,
											"end": 16524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16449,
											"end": 16535,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16449,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16544,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16552,
											"end": 16556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16558,
											"end": 16560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16544,
											"end": 16551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16544,
											"end": 16568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16544,
											"end": 16568,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16544,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 16575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 16575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 16575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 16575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18548,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 18340,
											"end": 18548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18410,
											"end": 18431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18410,
											"end": 18431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18410,
											"end": 18417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18410,
											"end": 18431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18410,
											"end": 18431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18410,
											"end": 18431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18406,
											"end": 18497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18406,
											"end": 18497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 18454,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18406,
											"end": 18497,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18406,
											"end": 18497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18506,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 18522,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18526,
											"end": 18533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18535,
											"end": 18540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18506,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18506,
											"end": 18541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18506,
											"end": 18541,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 18506,
											"end": 18541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18340,
											"end": 18548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18866,
											"end": 19072,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 18866,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18955,
											"end": 18956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18936,
											"end": 18957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18936,
											"end": 18957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18936,
											"end": 18943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18936,
											"end": 18957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18936,
											"end": 18957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18936,
											"end": 18957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18932,
											"end": 19021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18932,
											"end": 19021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 18980,
											"end": 19010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19010,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18932,
											"end": 19021,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18932,
											"end": 19021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19038,
											"end": 19045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19059,
											"end": 19064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19030,
											"end": 19065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19065,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19030,
											"end": 19065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18866,
											"end": 19072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18866,
											"end": 19072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18866,
											"end": 19072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24689,
											"end": 24851,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24689,
											"end": 24851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24759,
											"end": 24771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 24759,
											"end": 24769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24759,
											"end": 24771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24759,
											"end": 24771,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 24759,
											"end": 24771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24748,
											"end": 24771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24748,
											"end": 24753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24748,
											"end": 24755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24755,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24748,
											"end": 24755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24748,
											"end": 24771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24771,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24744,
											"end": 24845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24821,
											"end": 24833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24821,
											"end": 24831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24821,
											"end": 24833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24821,
											"end": 24833,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24821,
											"end": 24833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24794,
											"end": 24834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24744,
											"end": 24845,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24744,
											"end": 24845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24689,
											"end": 24851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25805,
											"end": 25992,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 25805,
											"end": 25992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25897,
											"end": 25903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 25903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25922,
											"end": 25930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25919,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25913,
											"end": 25919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25913,
											"end": 25930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 25984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25966,
											"end": 25974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25945,
											"end": 25985,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25868,
											"end": 25992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25805,
											"end": 25992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25805,
											"end": 25992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22755,
											"end": 22913,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 22755,
											"end": 22913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 22846,
											"end": 22853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22855,
											"end": 22867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 22855,
											"end": 22865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 22855,
											"end": 22867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22855,
											"end": 22867,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 22855,
											"end": 22867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 22830,
											"end": 22875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22875,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 22830,
											"end": 22875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22885,
											"end": 22906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 22891,
											"end": 22898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22900,
											"end": 22905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22885,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22885,
											"end": 22906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22885,
											"end": 22906,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 22885,
											"end": 22906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22755,
											"end": 22913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22755,
											"end": 22913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22755,
											"end": 22913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 21015,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20583,
											"end": 21015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20712,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20695,
											"end": 20714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20695,
											"end": 20714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20695,
											"end": 20700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20695,
											"end": 20714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20695,
											"end": 20714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20695,
											"end": 20714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20691,
											"end": 20780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 20691,
											"end": 20780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20766,
											"end": 20767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 20737,
											"end": 20769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20737,
											"end": 20769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20691,
											"end": 20780,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 20691,
											"end": 20780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20793,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20793,
											"end": 20814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20793,
											"end": 20814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 20789,
											"end": 20879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20865,
											"end": 20866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 20837,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20879,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 20789,
											"end": 20879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20918,
											"end": 20923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20900,
											"end": 20905,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20888,
											"end": 20906,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20907,
											"end": 20914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20923,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20937,
											"end": 20946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 20933,
											"end": 21009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20983,
											"end": 20990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20976,
											"end": 20981,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20992,
											"end": 20997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20967,
											"end": 20998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20998,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21009,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 20933,
											"end": 21009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 21015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 21015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 21015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 21015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 21015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16890,
											"end": 17997,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16890,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16995,
											"end": 16996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 16983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17131,
											"end": 17136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17115,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17115,
											"end": 17136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17189,
											"end": 17198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17199,
											"end": 17203,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17167,
											"end": 17204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17241,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 17218,
											"end": 17333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17293,
											"end": 17297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17299,
											"end": 17310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 17268,
											"end": 17318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17333,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 17218,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17485,
											"end": 17490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17463,
											"end": 17467,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17453,
											"end": 17468,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16975,
											"end": 17515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17529,
											"end": 17545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17529,
											"end": 17545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17529,
											"end": 17545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17708,
											"end": 17713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17692,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17692,
											"end": 17713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17920,
											"end": 17925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17525,
											"end": 17950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17980,
											"end": 17982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17974,
											"end": 17978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17984,
											"end": 17989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 17965,
											"end": 17990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17990,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16890,
											"end": 17997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16890,
											"end": 17997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16890,
											"end": 17997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16890,
											"end": 17997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6480,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6490,
											"end": 6505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6529,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6827,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7043,
											"end": 7052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7067,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7148,
											"end": 7220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7230,
											"end": 7302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7495,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7315,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7440,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7481,
											"end": 7482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7489,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7578,
											"end": 7579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7560,
											"end": 7580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7594,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7662,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7665,
											"end": 7683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"src/tokens/QTOVToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"bridge()": "e78cea92",
							"bridgeInitialized()": "96a0c73f",
							"burn(address,uint256)": "9dc29fac",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBridge(address)": "8dd14802",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BridgeNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBridge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBridge\",\"type\":\"address\"}],\"name\":\"BridgeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"setBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/QTOVToken_flattened.sol\":\"QTOVToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/tokens/QTOVToken_flattened.sol\":{\"keccak256\":\"0xc6d9e3fd8d42368b8c6e62d3d654ea2f37dc0590f9d9bfa2b407d7cb6e66a6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81197d0af813359c7e620551a1adf8db17b53e5b3574c4c3d7e6b03efd540198\",\"dweb:/ipfs/QmUHWy4Hcih5b6PrL6meLQYGvxVDCLa24HyJXjUPrZC6ac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 818,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 972,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "bridge",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 974,
								"contract": "src/tokens/QTOVToken_flattened.sol:QTOVToken",
								"label": "bridgeInitialized",
								"offset": 20,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/tokens/QTOVToken_flattened.sol": {
				"ast": {
					"absolutePath": "src/tokens/QTOVToken_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"ERC20Burnable": [
							812
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							957
						],
						"QTOVToken": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "165:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "191:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "273:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "286:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "455:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "514:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "506:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:57:0"
									},
									"src": "449:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "527:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "686:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "695:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "718:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:63:0"
									},
									"src": "680:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "764:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "843:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:9:0"
									},
									"scope": 77,
									"src": "834:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "895:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:9:0"
									},
									"scope": 77,
									"src": "971:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1045:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1272:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1289:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1281:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1326:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:6:0"
									},
									"scope": 77,
									"src": "1263:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1338:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1616:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:0"
									},
									"scope": 77,
									"src": "1607:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1696:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2377:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:6:0"
									},
									"scope": 77,
									"src": "2368:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2447:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2758:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:0"
									},
									"scope": 77,
									"src": "2749:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1107,
							"src": "263:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3010:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3153:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3153:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3153:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3037:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3135:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3166:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3234:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3264:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:15:0"
									},
									"scope": 100,
									"src": "3225:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3285:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3355:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:15:0"
									},
									"scope": 100,
									"src": "3346:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3408:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3487:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3495:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3521:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:7:0"
									},
									"scope": 100,
									"src": "3478:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1107,
							"src": "3125:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3654:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3680:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4195:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4271:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4288:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4292:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4288:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4281:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4218:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:9:0"
									},
									"scope": 129,
									"src": "4209:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4378:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4395:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4399:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4395:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4388:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4320:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4328:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4362:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4362:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:16:0"
									},
									"scope": 129,
									"src": "4311:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4488:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4505:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4498:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4425:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:9:0"
									},
									"scope": 129,
									"src": "4416:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "4177:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4662:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4688:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4840:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4859:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5179:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5212:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5204:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5228:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:49:0"
									},
									"src": "5173:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5259:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5422:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:16:0"
									},
									"src": "5416:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5463:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5633:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5662:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5654:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:18:0"
									},
									"src": "5627:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5678:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6034:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6078:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:52:0"
									},
									"src": "6028:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6119:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6304:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:18:0"
									},
									"src": "6298:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6349:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6555:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6574:17:0"
									},
									"src": "6549:43:0"
								}
							],
							"scope": 1107,
							"src": "4830:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6596:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6750:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6770:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7000:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7018:15:0"
									},
									"src": "6994:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7040:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7183:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:17:0"
									},
									"src": "7177:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7229:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7529:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7591:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7549:48:0"
									},
									"src": "7523:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7604:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7767:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:16:0"
									},
									"src": "7761:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7809:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7979:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8009:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8001:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8000:18:0"
									},
									"src": "7973:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8025:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8283:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8336:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8328:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:35:0"
									},
									"src": "8277:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8351:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8536:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8558:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8557:18:0"
									},
									"src": "8530:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8582:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8790:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:18:0"
									},
									"src": "8784:46:0"
								}
							],
							"scope": 1107,
							"src": "6740:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8834:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8990:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9011:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9383:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9418:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9410:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:66:0"
									},
									"src": "9377:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9482:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9645:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9665:16:0"
									},
									"src": "9639:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9688:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9858:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9880:18:0"
									},
									"src": "9852:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9905:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10172:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10209:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10201:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10200:33:0"
									},
									"src": "10166:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10240:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10425:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10456:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10448:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:18:0"
									},
									"src": "10419:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10472:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10680:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10703:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10702:18:0"
									},
									"src": "10674:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10727:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11018:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11052:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11044:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11071:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11063:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11043:41:0"
									},
									"src": "11012:73:0"
								}
							],
							"scope": 1107,
							"src": "8980:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11219:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12034:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12034:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12034:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12043:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12043:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12043:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12051:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12051:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12051:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12067:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12067:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12067:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11249:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12025:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12130:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12086:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12102:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12094:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12086:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12113:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12218:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12146:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12162:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12146:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12189:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12181:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12173:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12200:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12252:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12236:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12286:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12271:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12271:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12312:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12297:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12297:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12539:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12549:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12557:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12549:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12549:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12572:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12572:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12326:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12509:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12495:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12495:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12530:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12516:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12516:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12494:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12539:0:0"
									},
									"scope": 771,
									"src": "12483:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12721:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12738:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12731:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12602:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12670:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12674:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12706:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12705:15:0"
									},
									"scope": 771,
									"src": "12661:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12925:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12935:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12756:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12872:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12878:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12910:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12909:15:0"
									},
									"scope": 771,
									"src": "12863:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13645:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13662:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13655:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12962:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13598:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13606:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13638:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13637:7:0"
									},
									"scope": 771,
									"src": "13589:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13792:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13809:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13802:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13677:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13740:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13751:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13783:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13782:9:0"
									},
									"scope": 771,
									"src": "13731:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13960:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13977:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13977:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13970:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13834:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13895:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13913:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13905:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13904:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13951:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13950:9:0"
									},
									"scope": 771,
									"src": "13886:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14272:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14290:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14282:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14282:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14298:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14298:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14282:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14330:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14337:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14341:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14320:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14320:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14320:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14357:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14008:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14206:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14223:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14215:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14214:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14265:6:0"
									},
									"scope": 771,
									"src": "14197:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14522:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14539:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14551:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14539:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14539:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14532:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14381:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14442:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14460:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14452:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14475:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14467:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14451:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14512:9:0"
									},
									"scope": 771,
									"src": "14433:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14959:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14977:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14969:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14969:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14985:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14985:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14969:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15016:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15032:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15007:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15007:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15007:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15048:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14579:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14889:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14905:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14897:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14922:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14914:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14896:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14953:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14953:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14952:6:0"
									},
									"scope": 771,
									"src": "14880:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15751:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15769:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15761:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15761:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15779:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15779:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15761:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15832:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15801:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15801:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15801:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15858:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15864:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15848:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15848:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15848:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15891:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15884:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15072:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15667:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15688:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15680:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15702:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15694:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15714:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15679:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15745:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15745:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15744:6:0"
									},
									"scope": 771,
									"src": "15658:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16344:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16358:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16366:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16366:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16358:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16354:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16378:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16426:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16418:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16418:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16418:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16399:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16399:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16392:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16453:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16459:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16459:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16453:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16449:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16471:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16521:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16513:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16513:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16513:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16492:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16492:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16485:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16558:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16562:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16544:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16544:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15908:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16284:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16293:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16344:0:0"
									},
									"scope": 771,
									"src": "16275:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16965:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16979:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16995:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16987:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16987:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16979:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17153:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17175:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17167:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17167:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17189:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17199:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17189:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17167:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17222:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17222:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17218:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17243:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17293:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17299:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17312:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17268:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17268:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17261:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17346:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17453:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17463:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17453:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17471:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17485:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17471:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17453:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17453:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16975:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "16999:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17115:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17115:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17115:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17529:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17535:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17535:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17535:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17529:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17744:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17758:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17903:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17913:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17903:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17920:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17903:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17903:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17525:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17547:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17561:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17692:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17708:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17692:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17692:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17974:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17980:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17965:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17965:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17960:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16581:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16899:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16915:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16907:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16929:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16921:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16941:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16933:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16906:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16965:0:0"
									},
									"scope": 771,
									"src": "16890:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18396:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18429:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18421:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18421:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18410:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18406:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18433:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18483:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18475:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18475:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18475:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18454:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18454:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18447:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18522:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18514:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18514:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18526:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18535:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18506:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18506:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18003:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18349:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18380:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18372:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18354:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18396:0:0"
									},
									"scope": 771,
									"src": "18340:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18922:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18955:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18947:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18947:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18936:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18932:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18959:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19007:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18999:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18999:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18999:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18980:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18980:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18973:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19055:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19047:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19047:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19059:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19030:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19030:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19030:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18554:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18875:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18889:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18881:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18906:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18898:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18880:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18922:0:0"
									},
									"scope": 771,
									"src": "18866:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19682:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19701:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19692:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19692:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19692:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19078:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19617:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19658:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19625:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19682:0:0"
									},
									"scope": 771,
									"src": "19608:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20681:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20695:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20704:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20704:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20704:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20695:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20691:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20716:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20766:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20758:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20758:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20758:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20737:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20737:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20730:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20812:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20804:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20804:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20793:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20789:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20816:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20865:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20857:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20857:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20857:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20837:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20837:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20830:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20888:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20900:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20888:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20907:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20888:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20918:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20888:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20888:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20937:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20933:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20948:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20976:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20983:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20992:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20967:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20967:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20962:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19742:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20592:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20624:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20616:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20641:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20653:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20648:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20600:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20681:0:0"
									},
									"scope": 771,
									"src": "20583:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21386:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21404:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21396:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21423:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21396:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21462:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21486:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21486:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21481:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21481:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21495:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21481:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21462:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21458:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21500:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21518:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21537:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21518:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21514:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21544:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21596:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21605:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21623:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21569:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21569:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21562:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21657:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21694:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21701:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21710:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21729:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21710:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21736:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21685:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21685:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21685:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21021:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21306:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21330:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21322:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21345:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21337:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21362:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21321:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21386:0:0"
									},
									"scope": 771,
									"src": "21297:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "12007:9768:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21945:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22217:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22217:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22217:7:0"
								},
								{
									"baseName": {
										"id": 776,
										"name": "ERC20",
										"nameLocations": [
											"22226:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "22226:5:0"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "22226:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21973:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Burnable",
							"nameLocation": "22200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "22396:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 784,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22412:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "22426:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22406:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22406:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "22406:26:0"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22238:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "22361:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22374:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "22366:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22365:15:0"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22396:0:0"
									},
									"scope": 812,
									"src": "22352:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "22820:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 800,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22855:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22855:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 798,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "22830:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22830:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "22830:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22885:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22885:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "22885:21:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "22445:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "22764:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22781:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22773:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22798:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22772:32:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22820:0:0"
									},
									"scope": 812,
									"src": "22755:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1107,
							"src": "22182:733:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23041:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 815,
										"name": "Context",
										"nameLocations": [
											"23585:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "23585:7:0"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "23585:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "23068:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957,
								129
							],
							"name": "Ownable",
							"nameLocation": "23574:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 818,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23615:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "23599:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 817,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23599:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "23628:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 823,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "23724:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23759:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "23751:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23750:17:0"
									},
									"src": "23718:50:0"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "23774:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 828,
									"name": "OwnableInvalidOwner",
									"nameLocation": "23867:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23895:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23887:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23886:15:0"
									},
									"src": "23861:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 834,
									"name": "OwnershipTransferred",
									"nameLocation": "23914:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23951:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23935:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23982:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23966:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23934:57:0"
									},
									"src": "23908:84:0"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "24152:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "24166:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24190:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24182:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24182:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24182:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24166:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "24162:95:0",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "24194:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24243:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24235:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24235:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24235:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "24215:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24215:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "24208:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "24285:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 855,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "24266:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24266:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "24266:32:0"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "23998:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "24138:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24130:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24129:22:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24152:0:0"
									},
									"scope": 957,
									"src": "24118:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "24414:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "24424:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24424:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24424:13:0"
											},
											{
												"id": 866,
												"nodeType": "PlaceholderStatement",
												"src": "24447:1:0"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "24311:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 868,
									"name": "onlyOwner",
									"nameLocation": "24402:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24411:2:0"
									},
									"src": "24393:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "24586:30:0",
										"statements": [
											{
												"expression": {
													"id": 874,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "24603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 873,
												"id": 875,
												"nodeType": "Return",
												"src": "24596:13:0"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "24461:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "24540:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24545:2:0"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "24577:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24576:9:0"
									},
									"scope": 957,
									"src": "24531:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "24734:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 881,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "24748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24748:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 883,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "24759:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24759:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24748:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "24744:101:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "24773:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 887,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "24821:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24821:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 886,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "24794:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24794:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "24787:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "24622:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "24698:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24709:2:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24734:0:0"
									},
									"scope": 957,
									"src": "24689:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "25240:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25277:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25269:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 901,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25269:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25269:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 900,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25250:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25250:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "25250:30:0"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "24857:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 898,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 897,
												"name": "onlyOwner",
												"nameLocations": [
													"25230:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25230:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25230:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "25195:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25212:2:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25240:0:0"
									},
									"scope": 957,
									"src": "25186:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "25506:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "25520:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25540:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25532:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25532:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25532:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25520:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "25516:91:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "25544:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25593:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25585:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25585:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25585:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "25565:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25565:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "25558:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "25635:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 931,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25616:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25616:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "25616:28:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "25293:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 914,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 913,
												"name": "onlyOwner",
												"nameLocations": [
													"25496:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25496:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25496:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "25445:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25471:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "25463:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25462:18:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25506:0:0"
									},
									"scope": 957,
									"src": "25436:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "25868:124:0",
										"statements": [
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25886:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "25878:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 942,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25878:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"id": 944,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "25897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25878:25:0"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "25913:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 947,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "25922:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25913:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "25913:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 951,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "25966:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "25976:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 950,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "25945:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25945:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "EmitStatement",
												"src": "25940:45:0"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "25657:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "25814:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25841:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "25833:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25832:18:0"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25868:0:0"
									},
									"scope": 957,
									"src": "25805:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "23556:2438:0",
							"usedErrors": [
								823,
								828
							],
							"usedEvents": [
								834
							]
						},
						{
							"id": 958,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26032:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 959,
										"name": "ERC20",
										"nameLocations": [
											"26082:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "26082:5:0"
									},
									"id": 960,
									"nodeType": "InheritanceSpecifier",
									"src": "26082:5:0"
								},
								{
									"baseName": {
										"id": 961,
										"name": "ERC20Burnable",
										"nameLocations": [
											"26089:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "26089:13:0"
									},
									"id": 962,
									"nodeType": "InheritanceSpecifier",
									"src": "26089:13:0"
								},
								{
									"baseName": {
										"id": 963,
										"name": "Ownable",
										"nameLocations": [
											"26104:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "26104:7:0"
									},
									"id": 964,
									"nodeType": "InheritanceSpecifier",
									"src": "26104:7:0"
								}
							],
							"canonicalName": "QTOVToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106,
								957,
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "QTOVToken",
							"nameLocation": "26069:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "38da3b15",
									"id": 966,
									"name": "OnlyBridge",
									"nameLocation": "26145:10:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26155:2:0"
									},
									"src": "26139:19:0"
								},
								{
									"errorSelector": "d92e233d",
									"id": 968,
									"name": "ZeroAddress",
									"nameLocation": "26169:11:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26180:2:0"
									},
									"src": "26163:20:0"
								},
								{
									"errorSelector": "86255f74",
									"id": 970,
									"name": "BridgeNotInitialized",
									"nameLocation": "26194:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26214:2:0"
									},
									"src": "26188:29:0"
								},
								{
									"constant": false,
									"functionSelector": "e78cea92",
									"id": 972,
									"mutability": "mutable",
									"name": "bridge",
									"nameLocation": "26238:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1106,
									"src": "26223:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 971,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "26223:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "96a0c73f",
									"id": 974,
									"mutability": "mutable",
									"name": "bridgeInitialized",
									"nameLocation": "26262:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1106,
									"src": "26250:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 973,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "26250:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e1694c0b21fdceff6411daed547c7463c2341b9695387bc82595b5b9b1851d4a",
									"id": 978,
									"name": "BridgeUpdated",
									"nameLocation": "26324:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"mutability": "mutable",
												"name": "newBridge",
												"nameLocation": "26354:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "26338:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26337:27:0"
									},
									"src": "26318:47:0"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "26467:2:0",
										"statements": []
									},
									"id": 991,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5175616e746f7661",
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26425:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6f44292aea29432d7bfa2ff9545bf87150712a91fd8abf55438908d337707fab",
														"typeString": "literal_string \"Quantova\""
													},
													"value": "Quantova"
												},
												{
													"hexValue": "51544f56",
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_81f20f706f9381a0faee79ae1d6563f48877a89eee098623d0e877ec46cd5ee3",
														"typeString": "literal_string \"QTOV\""
													},
													"value": "QTOV"
												}
											],
											"id": 985,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 982,
												"name": "ERC20",
												"nameLocations": [
													"26419:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "26419:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26419:25:0"
										},
										{
											"arguments": [
												{
													"id": 987,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 980,
													"src": "26453:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 988,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 986,
												"name": "Ownable",
												"nameLocations": [
													"26445:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "26445:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26445:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "26400:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "26392:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26382:36:0"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26467:0:0"
									},
									"scope": 1106,
									"src": "26371:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "26497:73:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 993,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "26511:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26515:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "26511:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 995,
														"name": "bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "26525:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26511:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "26507:45:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 997,
															"name": "OnlyBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "26540:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26540:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 999,
													"nodeType": "RevertStatement",
													"src": "26533:19:0"
												}
											},
											{
												"id": 1001,
												"nodeType": "PlaceholderStatement",
												"src": "26562:1:0"
											}
										]
									},
									"id": 1003,
									"name": "onlyBridge",
									"nameLocation": "26484:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26494:2:0"
									},
									"src": "26475:95:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "26631:361:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "_bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "26645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26664:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26656:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26656:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26656:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26645:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "IfStatement",
												"src": "26641:47:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1016,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "26675:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26675:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1018,
													"nodeType": "RevertStatement",
													"src": "26668:20:0"
												}
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1020,
														"name": "bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "26698:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1021,
														"name": "_bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "26707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26698:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "26698:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "26825:18:0",
														"subExpression": {
															"id": 1024,
															"name": "bridgeInitialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "26826:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1026,
															"name": "bridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "26847:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1027,
															"name": "_bridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "26857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "26847:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26825:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "IfStatement",
												"src": "26821:165:0",
												"trueBody": {
													"id": 1038,
													"nodeType": "Block",
													"src": "26866:120:0",
													"statements": [
														{
															"expression": {
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1030,
																	"name": "bridgeInitialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "26880:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26900:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "26880:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1033,
															"nodeType": "ExpressionStatement",
															"src": "26880:24:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1035,
																		"name": "_bridge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "26967:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1034,
																	"name": "BridgeUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "26953:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26953:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1037,
															"nodeType": "EmitStatement",
															"src": "26948:27:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8dd14802",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1008,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1007,
												"name": "onlyOwner",
												"nameLocations": [
													"26621:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "26621:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26621:9:0"
										}
									],
									"name": "setBridge",
									"nameLocation": "26585:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_bridge",
												"nameLocation": "26603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "26595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26594:17:0"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26631:0:0"
									},
									"scope": 1106,
									"src": "26576:416:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "27068:97:0",
										"statements": [
											{
												"condition": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "27082:18:0",
													"subExpression": {
														"id": 1050,
														"name": "bridgeInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "27083:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "27078:53:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1052,
															"name": "BridgeNotInitialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "27109:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27109:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1054,
													"nodeType": "RevertStatement",
													"src": "27102:29:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1057,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "27147:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "27151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1056,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "27141:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27141:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "27141:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1047,
												"name": "onlyBridge",
												"nameLocations": [
													"27057:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1003,
												"src": "27057:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27057:10:0"
										}
									],
									"name": "mint",
									"nameLocation": "27007:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27020:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27012:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27032:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27011:28:0"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27068:0:0"
									},
									"scope": 1106,
									"src": "26998:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "27243:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1072,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "27259:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "27265:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "27253:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27253:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "27253:19:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1068,
												"name": "onlyBridge",
												"nameLocations": [
													"27232:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1003,
												"src": "27232:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27232:10:0"
										}
									],
									"name": "burn",
									"nameLocation": "27180:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27193:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "27185:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "27199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27184:30:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27243:0:0"
									},
									"scope": 1106,
									"src": "27171:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										811
									],
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "27360:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1085,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "27374:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27378:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "27374:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1087,
														"name": "bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "27388:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27374:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"nodeType": "IfStatement",
												"src": "27370:142:0",
												"trueBody": {
													"id": 1095,
													"nodeType": "Block",
													"src": "27396:116:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1090,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "27465:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "27474:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1089,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "27459:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27459:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "ExpressionStatement",
															"src": "27459:22:0"
														},
														{
															"functionReturnParameters": 1084,
															"id": 1094,
															"nodeType": "Return",
															"src": "27495:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "27537:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1101,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "27546:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1097,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "27522:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_QTOVToken_$1106_$",
																"typeString": "type(contract super QTOVToken)"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27528:8:0",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 811,
														"src": "27522:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27522:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "27522:31:0"
											}
										]
									},
									"functionSelector": "79cc6790",
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "27294:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1083,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27351:8:0"
									},
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27311:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "27303:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27328:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "27320:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27302:33:0"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27360:0:0"
									},
									"scope": 1106,
									"src": "27285:275:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1107,
							"src": "26060:1502:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								823,
								828,
								966,
								968,
								970
							],
							"usedEvents": [
								11,
								20,
								834,
								978
							]
						}
					],
					"src": "165:27398:0"
				},
				"id": 0
			}
		}
	}
}